definitions:
  models.AddBranchIDModel:
    properties:
      branch_id:
        type: string
    type: object
  models.AddCourierRequest:
    properties:
      courier_id:
        type: string
    type: object
  models.BranchCourierModel:
    properties:
      branch_id:
        type: string
      courier_id:
        type: string
    type: object
  models.CalcDeliveryCostRequest:
    properties:
      min_distance:
        type: number
      min_price:
        type: number
      per_km_price:
        type: number
      tripsDataModel:
        $ref: '#/definitions/models.TripsDataModel'
        type: object
    type: object
  models.CalcDeliveryCostResponse:
    properties:
      distance:
        type: number
      price:
        type: number
    type: object
  models.ChangeStatusRequest:
    properties:
      description:
        type: string
      status_id:
        type: string
    type: object
  models.CheckBranchLoginRequest:
    properties:
      phone:
        type: string
    type: object
  models.CheckBranchLoginResponse:
    properties:
      code:
        type: string
      phone:
        type: string
    type: object
  models.CheckLoginRequest:
    properties:
      login:
        type: string
    required:
    - login
    type: object
  models.CheckLoginResponse:
    properties:
      code:
        type: string
      phone:
        type: string
    type: object
  models.ConfirmBranchLoginRequest:
    properties:
      code:
        type: string
      phone:
        type: string
    type: object
  models.ConfirmCustomerLoginRequest:
    properties:
      code:
        type: string
      phone:
        type: string
    type: object
  models.ConfirmLoginRequest:
    properties:
      code:
        type: string
      fcm_token:
        type: string
      phone:
        type: string
    type: object
  models.CourierDetailsModel:
    properties:
      address:
        type: string
      birth_date:
        type: string
      courier_id:
        type: string
      gender:
        type: string
      img:
        type: string
      lisense_expiry_date:
        type: string
      lisense_given_date:
        type: string
      lisense_number:
        type: string
      passport_number:
        type: string
    type: object
  models.CourierModel:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      phone:
        type: string
      vehicle_number:
        type: string
    type: object
  models.CreateBranchModel:
    properties:
      address:
        type: string
      destination:
        type: string
      location:
        $ref: '#/definitions/models.Location'
        type: object
      name:
        type: string
      password:
        type: string
      phone:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
  models.CreateCategoryModel:
    properties:
      description:
        type: string
      image:
        type: string
      name:
        type: string
      order_no:
        example: "0"
        type: string
      parent_id:
        type: string
    type: object
  models.CreateCourierModel:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      phone:
        type: string
    type: object
  models.CreateCourierVehicleModel:
    properties:
      courier_id:
        type: string
      model:
        type: string
      vehicle_number:
        type: string
    type: object
  models.CreateCustomerModel:
    properties:
      name:
        type: string
      phone:
        type: string
    type: object
  models.CreateDemandOrderModel:
    properties:
      client_name:
        example: Oybek
        type: string
      client_phone_number:
        example: "998998765432"
        type: string
      co_delivery_price:
        example: 10000
        type: number
      delivery_time:
        example: "12:00"
        type: string
      description:
        type: string
      external_order_id:
        type: string
      steps:
        items:
          properties:
            address:
              type: string
            branch_id:
              type: string
            branch_name:
              type: string
            description:
              type: string
            destination_address:
              type: string
            external_step_id:
              example: "0"
              type: string
            location:
              $ref: '#/definitions/models.Location'
              type: object
            phone_number:
              type: string
            products:
              items:
                $ref: '#/definitions/models.productDemandModel'
              type: array
          type: object
        type: array
      to_address:
        example: Hamid Olimjon maydoni 10A dom 40-kvartira
        type: string
      to_location:
        $ref: '#/definitions/models.Location'
        type: object
    type: object
  models.CreateDistributorModel:
    properties:
      name:
        type: string
      phone:
        type: string
    type: object
  models.CreateFareModel:
    properties:
      delivery_time:
        type: integer
      min_distance:
        type: number
      min_price:
        type: number
      name:
        type: string
      price_per_km:
        type: number
    type: object
  models.CreateMeasureModel:
    properties:
      description:
        type: string
      name:
        type: string
      order_no:
        example: "0"
        type: string
      product_kind_id:
        type: string
      short_name:
        type: string
    type: object
  models.CreateOnDemandOrderModel:
    properties:
      apartment:
        type: string
      building:
        type: string
      client_id:
        type: string
      co_delivery_price:
        example: 10000
        type: number
      delivery_time:
        type: integer
      description:
        type: string
      extra_phone_number:
        type: string
      floor:
        type: string
      payment_type:
        type: string
      source:
        type: string
      steps:
        items:
          properties:
            branch_id:
              type: string
            description:
              type: string
            products:
              items:
                $ref: '#/definitions/models.productOnDemandModel'
              type: array
          type: object
        type: array
      to_address:
        example: Hamid Olimjon maydoni 10A dom 40-kvartira
        type: string
      to_location:
        $ref: '#/definitions/models.Location'
        type: object
    type: object
  models.CreateParkModel:
    properties:
      address:
        type: string
      distributor_id:
        type: string
      location:
        $ref: '#/definitions/models.LocationModel'
        type: object
      name:
        type: string
    type: object
  models.CreateProductKindModel:
    properties:
      description:
        type: string
      name:
        type: string
      order_no:
        example: "0"
        type: string
    type: object
  models.CreateProductModel:
    properties:
      category_id:
        type: string
      code:
        type: string
      description:
        type: string
      image:
        type: string
      measure_id:
        type: string
      name:
        type: string
      order_no:
        example: "0"
        type: string
      preview_text:
        type: string
      price:
        example: "0"
        type: string
      product_kind_id:
        type: string
      short_name:
        type: string
    type: object
  models.CreateShipperModel:
    properties:
      description:
        type: string
      logo:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
  models.CustomerAddress:
    properties:
      address:
        type: string
      apartment:
        type: string
      building:
        type: string
      extra_phone_number:
        type: string
      floor:
        type: string
      location:
        $ref: '#/definitions/models.Location'
        type: object
    type: object
  models.CustomerAddressesModel:
    properties:
      addresses:
        items:
          $ref: '#/definitions/models.CustomerAddress'
        type: array
    type: object
  models.CustomerLoginRequest:
    properties:
      phone:
        type: string
    type: object
  models.DeliveryPriceModel:
    properties:
      price:
        type: number
    type: object
  models.GeoDrivingLegs:
    properties:
      distance:
        type: number
      duration:
        type: number
      steps:
        items:
          type: string
        type: array
      summary:
        type: string
      weight:
        type: number
    type: object
  models.GetAllBranchOrdersModel:
    properties:
      branch_id:
        type: string
      quantity:
        type: integer
    type: object
  models.GetAllBranchesModel:
    properties:
      branches:
        items:
          $ref: '#/definitions/models.GetBranchModel'
        type: array
      count:
        type: integer
    type: object
  models.GetAllCategoriesModel:
    properties:
      categories:
        items:
          $ref: '#/definitions/models.GetCategoryModel'
        type: array
      count:
        example: "0"
        type: string
    type: object
  models.GetAllCourierBranchesModel:
    properties:
      branch_ids:
        items:
          type: string
        type: array
    type: object
  models.GetAllCourierVehiclesModel:
    properties:
      count:
        type: integer
      courier_vehicles:
        items:
          $ref: '#/definitions/models.GetCourierVehicleModel'
        type: array
    type: object
  models.GetAllCouriersModel:
    properties:
      count:
        type: integer
      couriers:
        items:
          $ref: '#/definitions/models.GetCourierModel'
        type: array
    type: object
  models.GetAllCustomersModel:
    properties:
      count:
        type: integer
      customers:
        items:
          $ref: '#/definitions/models.GetCustomerModel'
        type: array
    type: object
  models.GetAllDistributorsModel:
    properties:
      count:
        type: integer
      distributors:
        items:
          $ref: '#/definitions/models.GetDistributorModel'
        type: array
    type: object
  models.GetAllFaresModel:
    properties:
      count:
        type: integer
      fares:
        items:
          $ref: '#/definitions/models.GetFareModel'
        type: array
    type: object
  models.GetAllMeasuresModel:
    properties:
      count:
        example: "0"
        type: string
      measures:
        items:
          $ref: '#/definitions/models.GetMeasureModel'
        type: array
    type: object
  models.GetAllOrderModel:
    properties:
      count:
        example: "0"
        type: string
      orders:
        items:
          properties:
            apartment:
              type: string
            building:
              type: string
            client_id:
              type: string
            client_name:
              example: Oybek
              type: string
            client_phone_number:
              example: "998998765432"
              type: string
            co_delivery_price:
              example: 10000
              type: number
            courier:
              $ref: '#/definitions/models.CourierModel'
              type: object
            courier_id:
              type: string
            created_at:
              type: string
            delivery_time:
              example: "12:00"
              type: string
            description:
              type: string
            external_order_id:
              type: string
            extra_phone_number:
              type: string
            finished_at:
              type: string
            floor:
              type: string
            id:
              type: string
            order_amount:
              type: integer
            payment_type:
              type: string
            source:
              type: string
            status_id:
              type: string
            steps:
              items:
                $ref: '#/definitions/models.stepDemandModel'
              type: array
            to_address:
              example: Hamid Olimjon maydoni 10A dom 40-kvartira
              type: string
            to_location:
              $ref: '#/definitions/models.Location'
              type: object
          type: object
        type: array
    type: object
  models.GetAllParksModel:
    properties:
      count:
        type: integer
      parks:
        items:
          $ref: '#/definitions/models.GetParkModel'
        type: array
    type: object
  models.GetAllProductKindsModel:
    properties:
      count:
        example: "0"
        type: string
      product_kinds:
        items:
          $ref: '#/definitions/models.GetProductKindModel'
        type: array
    type: object
  models.GetAllProductsModel:
    properties:
      count:
        example: "0"
        type: string
      products:
        items:
          $ref: '#/definitions/models.GetProductModel'
        type: array
    type: object
  models.GetAllShippersModel:
    properties:
      count:
        type: integer
      shippers:
        items:
          $ref: '#/definitions/models.GetShipperModel'
        type: array
    type: object
  models.GetBranchModel:
    properties:
      address:
        type: string
      created_at:
        type: string
      destination:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      location:
        $ref: '#/definitions/models.Location'
        type: object
      name:
        type: string
      password:
        type: string
      phone:
        items:
          type: string
        type: array
      shipper_id:
        type: string
      username:
        type: string
    type: object
  models.GetCategoryModel:
    properties:
      child_categories:
        items:
          $ref: '#/definitions/models.GetCategoryModel'
        type: array
      description:
        type: string
      id:
        type: string
      image:
        type: string
      name:
        type: string
      parent_id:
        type: string
      slug:
        type: string
    type: object
  models.GetCourierModel:
    properties:
      access_token:
        type: string
      created_at:
        type: string
      first_name:
        type: string
      id:
        type: string
      is_active:
        type: string
      last_name:
        type: string
      phone:
        type: string
    type: object
  models.GetCourierOrdersModel:
    properties:
      count:
        example: "0"
        type: string
      orders:
        items:
          properties:
            apartment:
              type: string
            building:
              type: string
            client_id:
              type: string
            client_name:
              type: string
            client_phone_number:
              type: string
            co_delivery_price:
              example: 10000
              type: number
            created_at:
              type: string
            delivery_time:
              type: integer
            description:
              type: string
            extra_phone_number:
              type: string
            floor:
              type: string
            id:
              type: string
            order_amount:
              type: integer
            payment_type:
              type: string
            source:
              type: string
            status_id:
              type: string
            steps:
              items:
                properties:
                  address:
                    type: string
                  branch_id:
                    type: string
                  branch_name:
                    type: string
                  description:
                    type: string
                  destination_address:
                    type: string
                  external_step_id:
                    example: "0"
                    type: string
                  id:
                    type: string
                  location:
                    $ref: '#/definitions/models.Location'
                    type: object
                  phone_number:
                    type: string
                  status:
                    type: string
                  step_amount:
                    type: integer
                type: object
              type: array
            to_address:
              example: Hamid Olimjon maydoni 10A dom 40-kvartira
              type: string
            to_location:
              $ref: '#/definitions/models.Location'
              type: object
          type: object
        type: array
    type: object
  models.GetCourierVehicleModel:
    properties:
      created_at:
        type: string
      id:
        type: string
      model:
        type: string
      vehicle_number:
        type: string
    type: object
  models.GetCustomerModel:
    properties:
      access_token:
        type: string
      created_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      phone:
        type: string
    type: object
  models.GetDistributorModel:
    properties:
      access_token:
        type: string
      created_at:
        type: string
      id:
        type: string
      is_active:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  models.GetExchangeRatesModel:
    properties:
      cb_price:
        type: string
      code:
        type: string
      date:
        type: string
      nbu_buy_price:
        type: string
      nbu_cell_price:
        type: string
      title:
        type: string
    type: object
  models.GetFareModel:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      delivery_time:
        type: integer
      id:
        type: string
      min_distance:
        type: number
      min_price:
        type: number
      name:
        type: string
      price_per_km:
        type: number
      updated_at:
        type: string
    type: object
  models.GetMeasureModel:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      product_kind_id:
        type: string
      short_name:
        type: string
      slug:
        type: string
    type: object
  models.GetOrderModel:
    properties:
      apartment:
        type: string
      building:
        type: string
      client_id:
        type: string
      client_name:
        example: Oybek
        type: string
      client_phone_number:
        example: "998998765432"
        type: string
      co_delivery_price:
        example: 10000
        type: number
      courier:
        $ref: '#/definitions/models.CourierModel'
        type: object
      courier_id:
        type: string
      created_at:
        type: string
      delivery_time:
        example: "12:00"
        type: string
      description:
        type: string
      external_order_id:
        type: string
      extra_phone_number:
        type: string
      finished_at:
        type: string
      floor:
        type: string
      id:
        type: string
      order_amount:
        example: "0"
        type: string
      payment_type:
        type: string
      source:
        type: string
      status_id:
        type: string
      status_notes:
        items:
          properties:
            created_at:
              type: string
            description:
              type: string
            id:
              type: string
            status_id:
              type: string
          type: object
        type: array
      steps:
        items:
          properties:
            address:
              type: string
            branch_id:
              type: string
            branch_name:
              type: string
            description:
              type: string
            destination_address:
              type: string
            external_step_id:
              example: "0"
              type: string
            id:
              type: string
            location:
              $ref: '#/definitions/models.Location'
              type: object
            phone_number:
              type: string
            products:
              items:
                properties:
                  external_product_id:
                    example: "1234"
                    type: string
                  id:
                    type: string
                  name:
                    example: Choyxona Osh
                    type: string
                  price:
                    example: 25000
                    type: number
                  product_id:
                    type: string
                  quantity:
                    example: 2
                    type: number
                  total_amount:
                    example: "0"
                    type: string
                type: object
              type: array
            status:
              type: string
            step_amount:
              example: "0"
              type: string
          type: object
        type: array
      to_address:
        example: Hamid Olimjon maydoni 10A dom 40-kvartira
        type: string
      to_location:
        $ref: '#/definitions/models.Location'
        type: object
    type: object
  models.GetOrders:
    properties:
      count:
        type: integer
      orders:
        items:
          $ref: '#/definitions/models.getOrderModel'
        type: array
    type: object
  models.GetParkModel:
    properties:
      address:
        type: string
      created_at:
        type: string
      distributor_id:
        type: string
      id:
        type: string
      is_active:
        type: string
      location:
        $ref: '#/definitions/models.LocationModel'
        type: object
      name:
        type: string
    type: object
  models.GetProductKindModel:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      slug:
        type: string
    type: object
  models.GetProductModel:
    properties:
      category_id:
        type: string
      code:
        type: string
      description:
        type: string
      id:
        type: string
      image:
        type: string
      measure_id:
        type: string
      name:
        type: string
      preview_text:
        type: string
      price:
        example: "0"
        type: string
      product_kind_id:
        type: string
      short_name:
        type: string
      slug:
        type: string
    type: object
  models.GetReportModel:
    properties:
      file:
        type: string
    type: object
  models.GetShipperModel:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      logo:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
  models.GetStatuses:
    properties:
      statuses:
        items:
          $ref: '#/definitions/models.Status'
        type: array
    type: object
  models.Location:
    properties:
      lat:
        example: 40.123
        type: number
      long:
        example: 60.123
        type: number
    type: object
  models.LocationModel:
    properties:
      lat:
        type: number
      long:
        type: number
    type: object
  models.OptimizedTrips:
    properties:
      code:
        type: string
      trips:
        items:
          $ref: '#/definitions/models.Trips'
        type: array
      waypoints:
        items:
          $ref: '#/definitions/models.TripsWaypoint'
        type: array
    type: object
  models.RegisterConfirmModel:
    properties:
      code:
        type: string
      phone:
        type: string
    type: object
  models.RegisterModel:
    properties:
      name:
        type: string
      phone:
        type: string
    type: object
  models.Response:
    properties:
      id:
        type: object
    type: object
  models.ResponseError:
    properties:
      error:
        type: object
    type: object
  models.ResponseOK:
    properties:
      message:
        type: object
    type: object
  models.SearchByPhoneResponse:
    properties:
      id:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  models.SearchCouriersByPhoneModel:
    properties:
      couriers:
        items:
          $ref: '#/definitions/models.GetCourierModel'
        type: array
    type: object
  models.ShipperChangePassword:
    properties:
      password:
        type: string
    required:
    - password
    type: object
  models.ShipperLogin:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  models.Status:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  models.Trips:
    properties:
      distance:
        type: number
      duration:
        type: number
      geometry:
        type: string
      legs:
        items:
          $ref: '#/definitions/models.GeoDrivingLegs'
        type: array
      weight:
        type: string
      weight_name:
        type: string
    type: object
  models.TripsDataModel:
    properties:
      current_location:
        $ref: '#/definitions/models.Location'
        type: object
      destination:
        $ref: '#/definitions/models.Location'
        type: object
      origins:
        items:
          $ref: '#/definitions/models.Location'
        type: array
    type: object
  models.TripsWaypoint:
    properties:
      distance:
        type: string
      location:
        items:
          type: number
        type: array
      name:
        type: string
      trip_index:
        type: integer
      waypoint_index:
        type: integer
    type: object
  models.UpdateBranchModel:
    properties:
      address:
        type: string
      destination:
        type: string
      id:
        type: string
      location:
        $ref: '#/definitions/models.Location'
        type: object
      name:
        type: string
      password:
        type: string
      phone:
        items:
          type: string
        type: array
      shipper_id:
        type: string
      username:
        type: string
    type: object
  models.UpdateCourierModel:
    properties:
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      phone:
        type: string
    type: object
  models.UpdateCourierVehicleModel:
    properties:
      id:
        type: string
      model:
        type: string
      vehicle_number:
        type: string
    type: object
  models.UpdateCustomerModel:
    properties:
      id:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  models.UpdateDistributorModel:
    properties:
      id:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  models.UpdateFareModel:
    properties:
      delivery_time:
        type: integer
      id:
        type: string
      min_distance:
        type: number
      min_price:
        type: number
      name:
        type: string
      price_per_km:
        type: number
    type: object
  models.UpdateOrder:
    properties:
      apartment:
        type: string
      building:
        type: string
      client_id:
        type: string
      co_delivery_price:
        example: 10000
        type: number
      delivery_time:
        type: integer
      description:
        type: string
      extra_phone_number:
        type: string
      floor:
        type: string
      id:
        type: string
      payment_type:
        type: string
      source:
        type: string
      steps:
        items:
          properties:
            branch_id:
              type: string
            description:
              type: string
            products:
              items:
                $ref: '#/definitions/models.productOnDemandModel'
              type: array
          type: object
        type: array
      to_address:
        example: Hamid Olimjon maydoni 10A dom 40-kvartira
        type: string
      to_location:
        $ref: '#/definitions/models.Location'
        type: object
    type: object
  models.UpdateParkModel:
    properties:
      address:
        type: string
      id:
        type: string
      location:
        $ref: '#/definitions/models.LocationModel'
        type: object
      name:
        type: string
    type: object
  models.UpdateShipperModel:
    properties:
      description:
        type: string
      id:
        type: string
      logo:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
  models.getOrderModel:
    properties:
      id:
        example: 701dc270-0adc-4d00-ae78-4f2f78d794cc
        type: string
      price:
        example: "50000"
        type: string
      product_id:
        example: a010f178-da52-4373-aacd-e477d871e27a
        type: string
      quantity:
        example: 5
        type: number
      status_id:
        example: 52f248b4-23a0-4350-80b7-1704eaff6c8c
        type: string
    type: object
  models.productDemandModel:
    properties:
      external_product_id:
        example: "1234"
        type: string
      name:
        example: Choyxona Osh
        type: string
      price:
        example: 25000
        type: number
      quantity:
        example: 2
        type: number
    type: object
  models.productOnDemandModel:
    properties:
      price:
        example: "50000"
        type: string
      product_id:
        example: a010f178-da52-4373-aacd-e477d871e27a
        type: string
      quantity:
        example: 5
        type: number
    type: object
  models.stepDemandModel:
    properties:
      address:
        type: string
      branch_id:
        type: string
      branch_name:
        type: string
      description:
        type: string
      destination_address:
        type: string
      external_step_id:
        example: "0"
        type: string
      location:
        $ref: '#/definitions/models.Location'
        type: object
      phone_number:
        type: string
    type: object
  v1.Path:
    properties:
      filename:
        type: string
    type: object
info:
  contact: {}
  license: {}
paths:
  /v1/branch/:shipper_id/orders/all:
    get:
      consumes:
      - application/json
      description: API for getting all branch orders
      parameters:
      - description: shipper_id
        in: path
        name: shipper_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllBranchOrdersModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get All Branch Orders
      tags:
      - order
  /v1/branches:
    get:
      consumes:
      - application/json
      description: API for getting branches
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllBranchesModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get All Branches
      tags:
      - branch
    post:
      consumes:
      - application/json
      description: API for creating branch
      parameters:
      - description: branch
        in: body
        name: branch
        required: true
        schema:
          $ref: '#/definitions/models.CreateBranchModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetBranchModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create Branch
      tags:
      - branch
    put:
      consumes:
      - application/json
      description: API for updating branch
      parameters:
      - description: branch
        in: body
        name: branch
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBranchModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetBranchModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update Branch
      tags:
      - branch
  /v1/branches-report-excel/:
    get:
      consumes:
      - application/json
      description: API for getting branches report excel
      parameters:
      - description: date
        in: query
        name: date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetReportModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get Branches Report Excel
      tags:
      - report
  /v1/branches/{branch_id}:
    delete:
      consumes:
      - application/json
      description: API for deleting branch
      parameters:
      - description: branch_id
        in: path
        name: branch_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete Branch
      tags:
      - branch
    get:
      consumes:
      - application/json
      description: API for getting branch info
      parameters:
      - description: branch_id
        in: path
        name: branch_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetBranchModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get Branch
      tags:
      - branch
  /v1/branches/{branch_id}/couriers:
    get:
      consumes:
      - application/json
      description: API for getting branch couriers
      parameters:
      - description: courier_id
        in: path
        name: branch_id
        required: true
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllCouriersModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get All Branch Couriers
      tags:
      - branch
  /v1/branches/{branch_id}/orders:
    get:
      consumes:
      - application/json
      description: API for getting branch orders
      parameters:
      - description: branch_id
        in: path
        name: branch_id
        type: string
      - description: status_id
        in: query
        name: status_id
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllOrderModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get Branch Orders
      tags:
      - branch
  /v1/branches/add-courier:
    post:
      consumes:
      - application/json
      description: API for creating branch courier
      parameters:
      - description: branch
        in: body
        name: courier
        required: true
        schema:
          $ref: '#/definitions/models.BranchCourierModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create Branch Courier
      tags:
      - branch
  /v1/branches/check-login/:
    post:
      consumes:
      - application/json
      description: |-
        API that checks whether branch exists
        and if exists sends sms to their number
      parameters:
      - description: check login
        in: body
        name: check_login
        required: true
        schema:
          $ref: '#/definitions/models.CheckBranchLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CheckBranchLoginResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Check Branch Login
      tags:
      - branch
  /v1/branches/confirm-login/:
    post:
      consumes:
      - application/json
      description: |-
        API that checks whether - branch entered
        valid token
      parameters:
      - description: confirm login
        in: body
        name: confirm_phone
        required: true
        schema:
          $ref: '#/definitions/models.ConfirmBranchLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetBranchModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Confirm Branch Login
      tags:
      - branch
  /v1/branches/remove-courier:
    post:
      consumes:
      - application/json
      description: API for removing courier from branch
      parameters:
      - description: branch
        in: body
        name: courier
        required: true
        schema:
          $ref: '#/definitions/models.BranchCourierModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Remove Courier From Branch
      tags:
      - branch
  /v1/calc-delivery-cost:
    post:
      consumes:
      - application/json
      description: API for getting total delivery cost
      parameters:
      - description: calc-delivery-cost
        in: body
        name: calc
        required: true
        schema:
          $ref: '#/definitions/models.CalcDeliveryCostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CalcDeliveryCostResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Calculate Delivery Price For Clients
      tags:
      - geo
  /v1/category:
    get:
      consumes:
      - application/json
      description: API for getting all category
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllCategoriesModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get All Category
      tags:
      - category
    post:
      consumes:
      - application/json
      description: API for creating category
      parameters:
      - description: category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategoryModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create Category
      tags:
      - category
  /v1/category/{category_id}:
    delete:
      consumes:
      - application/json
      description: API for deleting category
      parameters:
      - description: category_id
        in: path
        name: category_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete Category
      tags:
      - category
    get:
      consumes:
      - application/json
      description: API for getting a category
      parameters:
      - description: category_id
        in: path
        name: category_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetCategoryModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get Category
      tags:
      - category
    put:
      consumes:
      - application/json
      description: API for updating category
      parameters:
      - description: category_id
        in: path
        name: category_id
        required: true
        type: string
      - description: category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategoryModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update Category
      tags:
      - category
  /v1/courier/order:
    get:
      consumes:
      - application/json
      description: API for getting courier orders
      parameters:
      - description: courier_id
        in: query
        name: courier_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetCourierOrdersModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get Courier Orders
      tags:
      - order
  /v1/couriers:
    get:
      consumes:
      - application/json
      description: API for getting couriers
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllCouriersModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get Couriers
      tags:
      - courier
    post:
      consumes:
      - application/json
      description: API for creating courier
      parameters:
      - description: courier
        in: body
        name: courier
        required: true
        schema:
          $ref: '#/definitions/models.CreateCourierModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetCourierModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create Courier
      tags:
      - courier
    put:
      consumes:
      - application/json
      description: API for updating courier
      parameters:
      - description: courier
        in: body
        name: courier
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCourierModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetCourierModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update Courier
      tags:
      - courier
  /v1/couriers-report-excel/:
    get:
      consumes:
      - application/json
      description: API for getting couriers report excel
      parameters:
      - description: date
        in: query
        name: date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetReportModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get Couriers Report Excel
      tags:
      - report
  /v1/couriers/{courier_id}:
    delete:
      consumes:
      - application/json
      description: API for deleting courier
      parameters:
      - description: courier_id
        in: path
        name: courier_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete Courier
      tags:
      - courier
    get:
      consumes:
      - application/json
      description: API for getting courier
      parameters:
      - description: courier_id
        in: path
        name: courier_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetCourierModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get Courier
      tags:
      - courier
  /v1/couriers/{courier_id}/active-vehicle:
    get:
      consumes:
      - application/json
      description: API for getting courier's  active vehicle
      parameters:
      - description: courier_id
        in: path
        name: courier_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetCourierVehicleModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get Courier Active Vehicle
      tags:
      - courier
  /v1/couriers/{courier_id}/block:
    patch:
      consumes:
      - application/json
      description: API for blocking courier
      parameters:
      - description: courier_id
        in: path
        name: courier_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Blocking Courier
      tags:
      - courier
  /v1/couriers/{courier_id}/branches:
    get:
      consumes:
      - application/json
      description: API for getting courier branhes
      parameters:
      - description: courier_id
        in: path
        name: courier_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllCourierBranchesModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get All Couirer Branch Ids
      tags:
      - courier
  /v1/couriers/{courier_id}/courier-details:
    get:
      consumes:
      - application/json
      description: API for getting courier details
      parameters:
      - description: courier_id
        in: path
        name: courier_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CourierDetailsModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get Courier Details
      tags:
      - courier
  /v1/couriers/{courier_id}/unblock:
    patch:
      consumes:
      - application/json
      description: API for unblocking courier
      parameters:
      - description: courier_id
        in: path
        name: courier_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Unblocking Courier
      tags:
      - courier
  /v1/couriers/{courier_id}/vehicles:
    get:
      consumes:
      - application/json
      description: API for getting courier's vehicles
      parameters:
      - description: courier_id
        in: path
        name: courier_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllCourierVehiclesModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get All Courier Vehicles
      tags:
      - courier
  /v1/couriers/check-login/:
    post:
      consumes:
      - application/json
      description: |-
        API that checks whether courier exists
        and if exists sends sms to their number
      parameters:
      - description: check login
        in: body
        name: check_login
        required: true
        schema:
          $ref: '#/definitions/models.CheckLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CheckLoginResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Check Courier Login
      tags:
      - courier
  /v1/couriers/confirm-login/:
    post:
      consumes:
      - application/json
      description: |-
        API that checks whether courier entered
        valid token
      parameters:
      - description: confirm login
        in: body
        name: confirm_login
        required: true
        schema:
          $ref: '#/definitions/models.ConfirmLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Confirm Courier Login
      tags:
      - courier
  /v1/couriers/courier-details:
    post:
      consumes:
      - application/json
      description: API for creating courier details
      parameters:
      - description: courier_details
        in: body
        name: courier
        required: true
        schema:
          $ref: '#/definitions/models.CourierDetailsModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CourierDetailsModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create Courier Details
      tags:
      - courier
    put:
      consumes:
      - application/json
      description: API for updating courier details
      parameters:
      - description: courier_details
        in: body
        name: courier_details
        required: true
        schema:
          $ref: '#/definitions/models.CourierDetailsModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CourierDetailsModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update Courier Details
      tags:
      - courier
  /v1/customer-addresses/{phone}:
    get:
      consumes:
      - application/json
      description: API for taking all order addresses
      parameters:
      - description: phone
        in: path
        name: phone
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CustomerAddressesModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get Customer Order Addresses
      tags:
      - order
  /v1/customers:
    get:
      consumes:
      - application/json
      description: API for getting customers
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllCustomersModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get All Customers
      tags:
      - customer
    post:
      consumes:
      - application/json
      description: API for creating customer
      parameters:
      - description: customer
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/models.CreateCustomerModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetCustomerModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create Customer
      tags:
      - customer
    put:
      consumes:
      - application/json
      description: API for updating customer
      parameters:
      - description: customer
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCustomerModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetCustomerModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update Customer
      tags:
      - customer
  /v1/customers/{customer_id}:
    delete:
      consumes:
      - application/json
      description: API for deleting customer
      parameters:
      - description: customer_id
        in: path
        name: customer_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete Customer
      tags:
      - customer
    get:
      consumes:
      - application/json
      description: API for getting customer info
      parameters:
      - description: customer_id
        in: path
        name: customer_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetCustomerModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get Customer
      tags:
      - customer
  /v1/customers/{customer_id}/orders:
    get:
      consumes:
      - application/json
      description: API for getting customer orders
      parameters:
      - description: customer_id
        in: path
        name: customer_id
        required: true
        type: string
      - description: status_id
        in: query
        name: status_id
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllOrderModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get Customer Orders
      tags:
      - customer
  /v1/customers/confirm-login/:
    post:
      consumes:
      - application/json
      description: |-
        API that checks whether customer entered
        valid token
      parameters:
      - description: shipper
        in: header
        name: shipper
        required: true
        type: string
      - description: confirm login
        in: body
        name: confirm_phone
        required: true
        schema:
          $ref: '#/definitions/models.ConfirmCustomerLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetCustomerModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Confirm Customer Login
      tags:
      - customer
  /v1/customers/exists:
    post:
      consumes:
      - application/json
      description: API that checks whether customer exists
      parameters:
      - description: shipper
        in: header
        name: Shipper
        required: true
        type: string
      - description: login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.CustomerLoginRequest'
      produces:
      - application/json
      responses:
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Customer Login
      tags:
      - customer
  /v1/customers/login:
    post:
      consumes:
      - application/json
      description: |-
        API that checks whether customer exists
        and if exists sends sms to their number
      parameters:
      - description: shipper
        in: header
        name: Shipper
        required: true
        type: string
      - description: login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.CustomerLoginRequest'
      produces:
      - application/json
      responses:
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Customer Login
      tags:
      - customer
  /v1/customers/register-confirm/:
    post:
      consumes:
      - application/json
      description: Register - API for confirming and inserting user to DB
      parameters:
      - description: register_confirm
        in: body
        name: register_confirm
        required: true
        schema:
          $ref: '#/definitions/models.RegisterConfirmModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetCustomerModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Register confirm
      tags:
      - register
  /v1/customers/register/:
    post:
      consumes:
      - application/json
      description: Register - API for registering customers
      parameters:
      - description: register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/models.RegisterModel'
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Register
      tags:
      - register
  /v1/delivery-price:
    get:
      consumes:
      - application/json
      description: API for getting delivery price for shipper
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeliveryPriceModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get Delivery Price
      tags:
      - fare
    post:
      consumes:
      - application/json
      description: API for creating delivery price for shipper
      parameters:
      - description: delivery_price
        in: body
        name: fare
        required: true
        schema:
          $ref: '#/definitions/models.DeliveryPriceModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create Delivery Price for Shipper
      tags:
      - fare
    put:
      consumes:
      - application/json
      description: API for updating delivery price
      parameters:
      - description: delivery_price
        in: body
        name: fare
        required: true
        schema:
          $ref: '#/definitions/models.DeliveryPriceModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update Delivery Price
      tags:
      - fare
  /v1/demand-order/:
    post:
      consumes:
      - application/json
      description: API for creating demand order
      parameters:
      - description: order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.CreateDemandOrderModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create Demand Order
      tags:
      - order
  /v1/distributors:
    get:
      consumes:
      - application/json
      description: API for getting all distributors
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllDistributorsModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get All Distributors
      tags:
      - distributor
    post:
      consumes:
      - application/json
      description: API for creating distributor
      parameters:
      - description: distributor
        in: body
        name: distirbutor
        required: true
        schema:
          $ref: '#/definitions/models.CreateDistributorModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetDistributorModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create Distributor
      tags:
      - distributor
    put:
      consumes:
      - application/json
      description: API for updating distributor
      parameters:
      - description: distributor
        in: body
        name: distributor
        required: true
        schema:
          $ref: '#/definitions/models.UpdateDistributorModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetDistributorModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update Distributor
      tags:
      - distributor
  /v1/distributors/{distributor_id}:
    delete:
      consumes:
      - application/json
      description: API for deleting distributor
      parameters:
      - description: distributor_id
        in: path
        name: distributor_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Delete Distributor
      tags:
      - distributor
    get:
      consumes:
      - application/json
      description: API for getting distributor
      parameters:
      - description: distributor Id
        in: path
        name: distributor_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetDistributorModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Distributor
      tags:
      - distributor
  /v1/distributors/{distributor_id}/couriers:
    get:
      consumes:
      - application/json
      description: API for getting all distributor couriers
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllCouriersModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Distributor Couriers
      tags:
      - distributor
  /v1/distributors/{distributor_id}/parks:
    get:
      consumes:
      - application/json
      description: API for getting all distributor parks
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllParksModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get All Distributor Parks
      tags:
      - distributor
  /v1/exchange-rates:
    get:
      consumes:
      - application/json
      description: API for getting exchange rates
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetExchangeRatesModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Exchange rates
      tags:
      - exchange
  /v1/fares:
    get:
      consumes:
      - application/json
      description: API for getting fares
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllFaresModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get Fares
      tags:
      - fare
    post:
      consumes:
      - application/json
      description: API for creating fare
      parameters:
      - description: fare
        in: body
        name: fare
        required: true
        schema:
          $ref: '#/definitions/models.CreateFareModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetFareModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create Fare
      tags:
      - fare
    put:
      consumes:
      - application/json
      description: API for updating fare
      parameters:
      - description: fare
        in: body
        name: fare
        required: true
        schema:
          $ref: '#/definitions/models.UpdateFareModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetFareModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update Fare
      tags:
      - fare
  /v1/fares/{fare_id}:
    delete:
      consumes:
      - application/json
      description: API for deleting fare
      parameters:
      - description: fare_id
        in: path
        name: fare_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete Fare
      tags:
      - fare
    get:
      consumes:
      - application/json
      description: API for getting fare
      parameters:
      - description: fare_id
        in: path
        name: fare_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetFareModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get Fare
      tags:
      - fare
  /v1/measure:
    get:
      consumes:
      - application/json
      description: API for getting all measure
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllMeasuresModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get All Measure
      tags:
      - measure
    post:
      consumes:
      - application/json
      description: API for creating measure
      parameters:
      - description: measure
        in: body
        name: measure
        required: true
        schema:
          $ref: '#/definitions/models.CreateMeasureModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create Measure
      tags:
      - measure
  /v1/nearest-branch:
    get:
      consumes:
      - application/json
      description: API for getting branch info
      parameters:
      - description: long
        in: query
        name: long
        type: string
      - description: lat
        in: query
        name: lat
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetBranchModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get Nearest Branch
      tags:
      - branch
  /v1/new-order:
    get:
      consumes:
      - application/json
      description: API for getting courier new orders
      parameters:
      - description: courier_id
        in: query
        name: courier_id
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetOrders'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get Courier New Orders
      tags:
      - order
  /v1/ondemand-order/:
    post:
      consumes:
      - application/json
      description: API for creating on demand order
      parameters:
      - description: order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.CreateOnDemandOrderModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create On Demand Order
      tags:
      - order
  /v1/optimized-trip:
    post:
      consumes:
      - application/json
      description: API for getting optimized trip
      parameters:
      - description: Current location
        in: body
        name: tripdata
        required: true
        schema:
          $ref: '#/definitions/models.TripsDataModel'
      - description: Current location
        in: body
        name: tripdata
        required: true
        schema:
          $ref: '#/definitions/models.TripsDataModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OptimizedTrips'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Optimized Trip location with index
      tags:
      - geo
  /v1/order:
    get:
      consumes:
      - application/json
      description: API for getting orders
      parameters:
      - description: status_id
        in: query
        name: status_id
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: branch_ids
        in: query
        items:
          type: string
        name: branch_ids
        type: array
      - description: customer_phone
        in: query
        name: customer_phone
        type: string
      - description: start_time
        in: query
        name: start_time
        type: string
      - description: end_time
        in: query
        name: end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllOrderModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get Orders
      tags:
      - order
  /v1/order-statuses:
    get:
      consumes:
      - application/json
      description: API for getting order statuses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetStatuses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get All Possible Order Statuses
      tags:
      - order
  /v1/order-step/{step_id}/take:
    patch:
      consumes:
      - application/json
      description: API for taking order step
      parameters:
      - description: step_id
        in: path
        name: step_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Take Order Steps
      tags:
      - order
  /v1/order/{order_id}:
    get:
      consumes:
      - application/json
      description: API for getting order
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetOrderModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get Order
      tags:
      - order
    put:
      consumes:
      - application/json
      description: API for updating order
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        type: string
      - description: order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.UpdateOrder'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update Order
      tags:
      - order
  /v1/order/{order_id}/add-branch:
    patch:
      consumes:
      - application/json
      description: API for adding branch_id
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        type: string
      - description: branch
        in: body
        name: branch
        required: true
        schema:
          $ref: '#/definitions/models.AddBranchIDModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Add Branch ID to orders
      tags:
      - order
  /v1/order/{order_id}/add-courier:
    patch:
      consumes:
      - application/json
      description: API for adding order courier
      parameters:
      - description: ORDER ID
        in: path
        name: order_id
        required: true
        type: string
      - description: courier
        in: body
        name: courier
        required: true
        schema:
          $ref: '#/definitions/models.AddCourierRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Add Order Courier
      tags:
      - order
  /v1/order/{order_id}/change-status:
    patch:
      consumes:
      - application/json
      description: API for changing order status
      parameters:
      - description: ORDER ID
        in: path
        name: order_id
        required: true
        type: string
      - description: status
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/models.ChangeStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Change Order Status
      tags:
      - order
  /v1/order/{order_id}/remove-courier:
    patch:
      consumes:
      - application/json
      description: API for changing order courier
      parameters:
      - description: ORDER ID
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Remove Order Courier
      tags:
      - order
  /v1/parks:
    post:
      consumes:
      - application/json
      description: API for creating park
      parameters:
      - description: park
        in: body
        name: distirbutor
        required: true
        schema:
          $ref: '#/definitions/models.CreateParkModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetParkModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create Park
      tags:
      - park
    put:
      consumes:
      - application/json
      description: API for updating park
      parameters:
      - description: park
        in: body
        name: distirbutor
        required: true
        schema:
          $ref: '#/definitions/models.UpdateParkModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetParkModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update Park
      tags:
      - park
  /v1/parks/{park_id}:
    delete:
      consumes:
      - application/json
      description: API for deleting park
      parameters:
      - description: park_id
        in: path
        name: park_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Delete Park
      tags:
      - park
    get:
      consumes:
      - application/json
      description: API for getting park
      parameters:
      - description: ' Id'
        in: path
        name: park_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetParkModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Park
      tags:
      - park
  /v1/product:
    get:
      consumes:
      - application/json
      description: API for getting all product
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllProductsModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get All Product
      tags:
      - product
    post:
      consumes:
      - application/json
      description: API for creating product
      parameters:
      - description: product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.CreateProductModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create Product
      tags:
      - product
  /v1/product-kind:
    get:
      consumes:
      - application/json
      description: API for getting all product kind
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllProductKindsModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get All Product Kind
      tags:
      - product-kind
    post:
      consumes:
      - application/json
      description: API for creating product kind
      parameters:
      - description: product_kind
        in: body
        name: product_kind
        required: true
        schema:
          $ref: '#/definitions/models.CreateProductKindModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create Product Kind
      tags:
      - product-kind
  /v1/product/{product_id}:
    delete:
      consumes:
      - application/json
      description: API for deleting product
      parameters:
      - description: product_id
        in: path
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete Product
      tags:
      - product
    get:
      consumes:
      - application/json
      description: API for getting a product
      parameters:
      - description: product_id
        in: path
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetProductModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get Product
      tags:
      - product
    put:
      consumes:
      - application/json
      description: API for updating product
      parameters:
      - description: product_id
        in: path
        name: product_id
        required: true
        type: string
      - description: product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.CreateProductModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update Product
      tags:
      - product
  /v1/search-couriers:
    get:
      consumes:
      - application/json
      description: API for getting phones
      parameters:
      - description: phone
        in: query
        name: phone
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SearchCouriersByPhoneModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Search by phone
      tags:
      - courier
  /v1/search-customers:
    get:
      consumes:
      - application/json
      description: API for getting phones
      parameters:
      - description: phone
        in: query
        name: phone
        type: string
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SearchByPhoneResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Search by phone
      tags:
      - customer
  /v1/shippers:
    get:
      consumes:
      - application/json
      description: API for getting shippers
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllShippersModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get All shippers
      tags:
      - shipper
    post:
      consumes:
      - application/json
      description: API for creating shipper
      parameters:
      - description: shipper
        in: body
        name: shipper
        required: true
        schema:
          $ref: '#/definitions/models.CreateShipperModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetShipperModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create Shipper
      tags:
      - shipper
    put:
      consumes:
      - application/json
      description: API for updating shipper
      parameters:
      - description: shipper
        in: body
        name: shipper
        required: true
        schema:
          $ref: '#/definitions/models.UpdateShipperModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetShipperModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update Shipper
      tags:
      - shipper
  /v1/shippers/{shipper_id}:
    delete:
      consumes:
      - application/json
      description: API for deleting shipper
      parameters:
      - description: shipper_id
        in: path
        name: shipper_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Delete Shipper
      tags:
      - shipper
    get:
      consumes:
      - application/json
      description: API for getting shipper info
      parameters:
      - description: shipper_id
        in: path
        name: shipper_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetShipperModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Shipper
      tags:
      - shipper
  /v1/shippers/change-password:
    post:
      consumes:
      - application/json
      description: API that change shipper password
      parameters:
      - description: change_password
        in: body
        name: change_password
        required: true
        schema:
          $ref: '#/definitions/models.ShipperChangePassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Change shipper password
      tags:
      - shipper
  /v1/shippers/login:
    post:
      consumes:
      - application/json
      description: API that checks whether shipper exists
      parameters:
      - description: login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.ShipperLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetShipperModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Check Shipper Login
      tags:
      - shipper
  /v1/upload:
    post:
      parameters:
      - description: file
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Path'
      tags:
      - image
  /v1/vehicle/{vehicle_id}:
    get:
      consumes:
      - application/json
      description: API for getting courier vehicle
      parameters:
      - description: vehicle_id
        in: path
        name: vehicle_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetCourierVehicleModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get Courier Vehicle
      tags:
      - vehicle
  /v1/vehicles:
    get:
      consumes:
      - application/json
      description: API for getting all vehicles
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllCourierVehiclesModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get All Vehicles
      tags:
      - vehicle
    post:
      consumes:
      - application/json
      description: API for creating courier vehicle
      parameters:
      - description: courier_vehicle
        in: body
        name: courier_vehicle
        required: true
        schema:
          $ref: '#/definitions/models.CreateCourierVehicleModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetCourierVehicleModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create Courier Vehicle
      tags:
      - vehicle
    put:
      consumes:
      - application/json
      description: API for updating courier vehicle
      parameters:
      - description: courier_vehicle
        in: body
        name: courier_vehicle
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCourierVehicleModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetCourierVehicleModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update Courier Vehicle
      tags:
      - vehicle
  /v1/vehicles/{vehicle_id}:
    delete:
      consumes:
      - application/json
      description: API for deleting courier vehicle
      parameters:
      - description: vehicle_id
        in: path
        name: vehicle_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete Courier Vehicle
      tags:
      - vehicle
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
