definitions:
  models.CalcDeliveryCostRequest:
    properties:
      from_location:
        $ref: '#/definitions/models.Location'
        type: object
      min_distance:
        type: number
      min_price:
        type: number
      per_km_price:
        type: number
      to_location:
        $ref: '#/definitions/models.Location'
        type: object
    type: object
  models.CalcDeliveryCostResponse:
    properties:
      distance:
        type: number
      price:
        type: number
    type: object
  models.ChangeStatusRequest:
    properties:
      status_id:
        type: string
    type: object
  models.CreateFareModel:
    properties:
      delivery_time:
        type: integer
      min_distance:
        type: number
      min_price:
        type: number
      name:
        type: string
      price_per_km:
        type: number
    type: object
  models.CreateOrder:
    properties:
      branch_id:
        example: a010f178-da52-4373-aacd-e477d871e27a
        type: string
      co_id:
        example: a010f178-da52-4373-aacd-e477d871e27a
        type: string
      creator_type_id:
        example: a010f178-da52-4373-aacd-e477d871e27a
        type: string
      deliver_price:
        example: 10000
        type: number
      fare_id:
        example: a010f178-da52-4373-aacd-e477d871e27a
        type: string
      from_address:
        example: Hamid Olimjon maydoni 10A dom 40-kvartira
        type: string
      from_location:
        $ref: '#/definitions/models.Location'
        type: object
      phone_number:
        example: "998998765432"
        type: string
      products:
        items:
          $ref: '#/definitions/models.productModel'
        type: array
      to_address:
        example: Hamid Olimjon maydoni 10A dom 40-kvartira
        type: string
      to_location:
        $ref: '#/definitions/models.Location'
        type: object
      user_id:
        example: a010f178-da52-4373-aacd-e477d871e27a
        type: string
    type: object
  models.GetAllFaresModel:
    properties:
      count:
        type: integer
      fares:
        items:
          $ref: '#/definitions/models.GetFareModel'
        type: array
    type: object
  models.GetCourierModel:
    properties:
      created_at:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      phone:
        type: string
    type: object
  models.GetFareModel:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      delivery_time:
        type: integer
      id:
        type: string
      min_distance:
        type: number
      min_price:
        type: number
      name:
        type: string
      price_per_km:
        type: number
      updated_at:
        type: string
    type: object
  models.GetOrder:
    properties:
      branch_id:
        example: a010f178-da52-4373-aacd-e477d871e27a
        type: string
      co_id:
        example: a010f178-da52-4373-aacd-e477d871e27a
        type: string
      creator_type_id:
        example: a010f178-da52-4373-aacd-e477d871e27a
        type: string
      deliver_price:
        example: 10000
        type: number
      fare_id:
        example: a010f178-da52-4373-aacd-e477d871e27a
        type: string
      from_address:
        example: Hamid Olimjon maydoni 10A dom 40-kvartira
        type: string
      from_location:
        $ref: '#/definitions/models.Location'
        type: object
      id:
        example: 701dc270-0adc-4d00-ae78-4f2f78d794cc
        type: string
      phone_number:
        example: "998998765432"
        type: string
      products:
        items:
          $ref: '#/definitions/models.getOrderProductModel'
        type: array
      status_id:
        example: 52f248b4-23a0-4350-80b7-1704eaff6c8c
        type: string
      to_address:
        example: Hamid Olimjon maydoni 10A dom 40-kvartira
        type: string
      to_location:
        $ref: '#/definitions/models.Location'
        type: object
      user_id:
        example: a010f178-da52-4373-aacd-e477d871e27a
        type: string
    type: object
  models.GetOrders:
    properties:
      count:
        type: integer
      orders:
        items:
          $ref: '#/definitions/models.getOrderModel'
        type: array
    type: object
  models.Location:
    properties:
      lat:
        example: 40.123
        type: number
      long:
        example: 60.123
        type: number
    type: object
  models.ResponseError:
    properties:
      error:
        type: object
    type: object
  models.ResponseOK:
    properties:
      message:
        type: object
    type: object
  models.UpdateFareModel:
    properties:
      delivery_time:
        type: integer
      id:
        type: string
      min_distance:
        type: number
      min_price:
        type: number
      name:
        type: string
      price_per_km:
        type: number
    type: object
  models.getOrderModel:
    properties:
      branch_id:
        example: a010f178-da52-4373-aacd-e477d871e27a
        type: string
      co_id:
        example: a010f178-da52-4373-aacd-e477d871e27a
        type: string
      creator_type_id:
        example: a010f178-da52-4373-aacd-e477d871e27a
        type: string
      deliver_price:
        example: 10000
        type: number
      fare_id:
        example: a010f178-da52-4373-aacd-e477d871e27a
        type: string
      from_address:
        example: Hamid Olimjon maydoni 10A dom 40-kvartira
        type: string
      from_location:
        $ref: '#/definitions/models.Location'
        type: object
      id:
        example: 701dc270-0adc-4d00-ae78-4f2f78d794cc
        type: string
      phone_number:
        example: "998998765432"
        type: string
      status_id:
        example: 52f248b4-23a0-4350-80b7-1704eaff6c8c
        type: string
      to_address:
        example: Hamid Olimjon maydoni 10A dom 40-kvartira
        type: string
      to_location:
        $ref: '#/definitions/models.Location'
        type: object
      user_id:
        example: a010f178-da52-4373-aacd-e477d871e27a
        type: string
    type: object
  models.getOrderProductModel:
    properties:
      id:
        type: string
      name:
        example: Choyxona Osh
        type: string
      price:
        example: 25000
        type: number
      quantity:
        example: 2
        type: number
      total_amount:
        type: number
    type: object
  models.productModel:
    properties:
      name:
        example: Choyxona Osh
        type: string
      price:
        example: 25000
        type: number
      quantity:
        example: 2
        type: number
    type: object
info:
  contact: {}
  license: {}
paths:
  /v1/calc-delivery-cost:
    post:
      consumes:
      - application/json
      description: API for getting total delivery cost
      parameters:
      - description: calc-delivery-cost
        in: body
        name: calc
        required: true
        schema:
          $ref: '#/definitions/models.CalcDeliveryCostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CalcDeliveryCostResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Calculate Delivery Price For Clients
      tags:
      - geo
  /v1/couriers/{courier_id}:
    get:
      consumes:
      - application/json
      description: API for getting courier
      parameters:
      - description: courier_id
        in: path
        name: courier_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetCourierModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Courier
      tags:
      - courier
  /v1/fares:
    get:
      consumes:
      - application/json
      description: API for getting fares
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllFaresModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Fares
      tags:
      - fare
    post:
      consumes:
      - application/json
      description: API for creating fare
      parameters:
      - description: fare
        in: body
        name: fare
        required: true
        schema:
          $ref: '#/definitions/models.CreateFareModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetFareModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create Fare
      tags:
      - fare
    put:
      consumes:
      - application/json
      description: API for updating fare
      parameters:
      - description: fare
        in: body
        name: fare
        required: true
        schema:
          $ref: '#/definitions/models.UpdateFareModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetFareModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update Fare
      tags:
      - fare
  /v1/fares/{fare_id}:
    delete:
      consumes:
      - application/json
      description: API for deleting fare
      parameters:
      - description: fare_id
        in: path
        name: fare_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Delete Fare
      tags:
      - fare
    get:
      consumes:
      - application/json
      description: API for getting fare
      parameters:
      - description: fare_id
        in: path
        name: fare_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetFareModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Fare
      tags:
      - fare
  /v1/order:
    get:
      consumes:
      - application/json
      description: API for getting orders
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetOrders'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Orders
      tags:
      - order
  /v1/order/:
    post:
      consumes:
      - application/json
      description: API for creating order
      parameters:
      - description: order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.CreateOrder'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create Order
      tags:
      - order
  /v1/order/{order_id}:
    get:
      consumes:
      - application/json
      description: API for getting order
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetOrder'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Order
      tags:
      - order
  /v1/order/{order_id}/change-status:
    patch:
      consumes:
      - application/json
      description: API for changing order status
      parameters:
      - description: ORDER ID
        in: path
        name: order_id
        required: true
        type: string
      - description: status
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/models.ChangeStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Change Order Status
      tags:
      - order
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
