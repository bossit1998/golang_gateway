definitions:
  models.AddCourierRequest:
    properties:
      courier_id:
        type: string
    type: object
  models.CalcDeliveryCostRequest:
    properties:
      min_distance:
        type: number
      min_price:
        type: number
      per_km_price:
        type: number
      tripsDataModel:
        $ref: '#/definitions/models.TripsDataModel'
        type: object
    type: object
  models.CalcDeliveryCostResponse:
    properties:
      distance:
        type: number
      price:
        type: number
    type: object
  models.ChangeLoginPasswordRequest:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  models.ChangeStatusRequest:
    properties:
      status_id:
        type: string
    type: object
  models.CheckExistsResponse:
    type: object
  models.CheckLoginRequest:
    properties:
      login:
        type: string
    required:
    - login
    type: object
  models.CheckLoginResponse:
    properties:
      code:
        type: string
      phone:
        type: string
    type: object
  models.CheckNameRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  models.CheckUserLoginRequest:
    properties:
      phone:
        type: string
    type: object
  models.CheckUserLoginResponse:
    properties:
      code:
        type: string
      phone:
        type: string
    type: object
  models.CheckVendorLoginRequest:
    properties:
      phone:
        type: string
    type: object
  models.CheckVendorLoginResponse:
    properties:
      code:
        type: string
      phone:
        type: string
    type: object
  models.ConfirmLoginRequest:
    properties:
      code:
        type: string
      phone:
        type: string
    type: object
  models.ConfirmUserLoginRequest:
    properties:
      code:
        type: string
      phone:
        type: string
    type: object
  models.ConfirmVendorLoginRequest:
    properties:
      code:
        type: string
      phone:
        type: string
    type: object
  models.CourierDetailsModel:
    properties:
      address:
        type: string
      birth_date:
        type: string
      courier_id:
        type: string
      gender:
        type: string
      img:
        type: string
      lisense_expiry_date:
        type: string
      lisense_given_date:
        type: string
      lisense_number:
        type: string
      passport_number:
        type: string
    type: object
  models.CreateCargoOwner:
    properties:
      description:
        type: string
      login:
        type: string
      logo:
        type: string
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
    required:
    - login
    - logo
    - name
    - password
    type: object
  models.CreateCategoryModel:
    properties:
      description:
        type: string
      name:
        type: string
      order_no:
        example: "0"
        type: string
      parent_id:
        type: string
    type: object
  models.CreateCourierModel:
    properties:
      distributor_id:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone:
        type: string
    type: object
  models.CreateCourierVehicleModel:
    properties:
      model:
        type: string
      vehicle_number:
        type: string
    type: object
  models.CreateDistributorModel:
    properties:
      name:
        type: string
      phone:
        type: string
    type: object
  models.CreateFareModel:
    properties:
      delivery_time:
        type: integer
      min_distance:
        type: number
      min_price:
        type: number
      name:
        type: string
      price_per_km:
        type: number
    type: object
  models.CreateMeasureModel:
    properties:
      description:
        type: string
      name:
        type: string
      order_no:
        example: "0"
        type: string
      product_kind_id:
        type: string
      short_name:
        type: string
    type: object
  models.CreateOrder:
    properties:
      co_delivery_price:
        example: 10000
        type: number
      customer_id:
        type: string
      customer_name:
        example: Oybek
        type: string
      customer_phone_number:
        example: "998998765432"
        type: string
      description:
        type: string
      external_order_id:
        type: integer
      fare_id:
        example: a010f178-da52-4373-aacd-e477d871e27a
        type: string
      steps:
        items:
          $ref: '#/definitions/models.stepModel'
        type: array
      to_address:
        example: Hamid Olimjon maydoni 10A dom 40-kvartira
        type: string
      to_location:
        $ref: '#/definitions/models.Location'
        type: object
      vendor_id:
        type: string
    type: object
  models.CreateParkModel:
    properties:
      address:
        type: string
      distributor_id:
        type: string
      location:
        $ref: '#/definitions/models.LocationModel'
        type: object
      name:
        type: string
    type: object
  models.CreateProductKindModel:
    properties:
      description:
        type: string
      name:
        type: string
      order_no:
        example: "0"
        type: string
    type: object
  models.CreateProductModel:
    properties:
      category_id:
        type: string
      code:
        type: string
      description:
        type: string
      measure_id:
        type: string
      name:
        type: string
      order_no:
        example: "0"
        type: string
      preview_text:
        type: string
      price:
        example: "0"
        type: string
      product_kind_id:
        type: string
      short_name:
        type: string
    type: object
  models.CreateUserModel:
    properties:
      name:
        type: string
      phone:
        type: string
    type: object
  models.CreateVendorModel:
    properties:
      address:
        type: string
      cargo_owner_id:
        type: string
      location:
        $ref: '#/definitions/models.Location'
        type: object
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      user_name:
        type: string
    type: object
  models.GeoDrivingLegs:
    properties:
      distance:
        type: number
      duration:
        type: number
      steps:
        items:
          type: string
        type: array
      summary:
        type: string
      weight:
        type: number
    type: object
  models.GetAllCategoriesModel:
    properties:
      categories:
        items:
          $ref: '#/definitions/models.GetCategoryModel'
        type: array
      count:
        example: "0"
        type: string
    type: object
  models.GetAllCourierVehiclesModel:
    properties:
      count:
        type: integer
      courier_vehicles:
        items:
          $ref: '#/definitions/models.GetCourierVehicleModel'
        type: array
    type: object
  models.GetAllCouriersModel:
    properties:
      count:
        type: integer
      couriers:
        items:
          $ref: '#/definitions/models.GetCourierModel'
        type: array
    type: object
  models.GetAllDistributorsModel:
    properties:
      count:
        type: integer
      distributors:
        items:
          $ref: '#/definitions/models.GetDistributorModel'
        type: array
    type: object
  models.GetAllFaresModel:
    properties:
      count:
        type: integer
      fares:
        items:
          $ref: '#/definitions/models.GetFareModel'
        type: array
    type: object
  models.GetAllMeasuresModel:
    properties:
      count:
        example: "0"
        type: string
      measures:
        items:
          $ref: '#/definitions/models.GetMeasureModel'
        type: array
    type: object
  models.GetAllParksModel:
    properties:
      count:
        type: integer
      parks:
        items:
          $ref: '#/definitions/models.GetParkModel'
        type: array
    type: object
  models.GetAllProductKindsModel:
    properties:
      count:
        example: "0"
        type: string
      product_kinds:
        items:
          $ref: '#/definitions/models.GetProductKindModel'
        type: array
    type: object
  models.GetAllProductsModel:
    properties:
      count:
        example: "0"
        type: string
      products:
        items:
          $ref: '#/definitions/models.GetProductModel'
        type: array
    type: object
  models.GetAllUsersModel:
    properties:
      count:
        type: integer
      users:
        items:
          $ref: '#/definitions/models.GetUserModel'
        type: array
    type: object
  models.GetAllVendorsModel:
    properties:
      count:
        type: integer
      vendors:
        items:
          $ref: '#/definitions/models.GetVendorModel'
        type: array
    type: object
  models.GetCO:
    properties:
      description:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      login:
        type: string
      logo:
        type: string
      name:
        type: string
      phone_number:
        type: string
      token:
        type: string
    type: object
  models.GetCategoryModel:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      parent_id:
        type: string
      slug:
        type: string
    type: object
  models.GetCourierModel:
    properties:
      access_token:
        type: string
      created_at:
        type: string
      first_name:
        type: string
      id:
        type: string
      is_active:
        type: string
      last_name:
        type: string
      phone:
        type: string
    type: object
  models.GetCourierVehicleModel:
    properties:
      created_at:
        type: string
      id:
        type: string
      model:
        type: string
      vehicle_number:
        type: string
    type: object
  models.GetDistributorModel:
    properties:
      access_token:
        type: string
      created_at:
        type: string
      id:
        type: string
      is_active:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  models.GetFareModel:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      delivery_time:
        type: integer
      id:
        type: string
      min_distance:
        type: number
      min_price:
        type: number
      name:
        type: string
      price_per_km:
        type: number
      updated_at:
        type: string
    type: object
  models.GetMeasureModel:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      product_kind_id:
        type: string
      short_name:
        type: string
      slug:
        type: string
    type: object
  models.GetOrder:
    properties:
      co_delivery_price:
        example: 10000
        type: number
      customer_id:
        type: string
      customer_name:
        example: Oybek
        type: string
      customer_phone_number:
        example: "998998765432"
        type: string
      description:
        type: string
      external_order_id:
        type: integer
      fare_id:
        example: a010f178-da52-4373-aacd-e477d871e27a
        type: string
      id:
        example: 701dc270-0adc-4d00-ae78-4f2f78d794cc
        type: string
      products:
        items:
          $ref: '#/definitions/models.getOrderProductModel'
        type: array
      status_id:
        example: 52f248b4-23a0-4350-80b7-1704eaff6c8c
        type: string
      to_address:
        example: Hamid Olimjon maydoni 10A dom 40-kvartira
        type: string
      to_location:
        $ref: '#/definitions/models.Location'
        type: object
      vendor_id:
        type: string
    type: object
  models.GetOrders:
    properties:
      count:
        type: integer
      orders:
        items:
          $ref: '#/definitions/models.getOrderModel'
        type: array
    type: object
  models.GetParkModel:
    properties:
      address:
        type: string
      created_at:
        type: string
      distributor_id:
        type: string
      id:
        type: string
      is_active:
        type: string
      location:
        $ref: '#/definitions/models.LocationModel'
        type: object
      name:
        type: string
    type: object
  models.GetProductKindModel:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      slug:
        type: string
    type: object
  models.GetProductModel:
    properties:
      category_id:
        type: string
      code:
        type: string
      description:
        type: string
      id:
        type: string
      measure_id:
        type: string
      name:
        type: string
      preview_text:
        type: string
      price:
        example: "0"
        type: string
      product_kind_id:
        type: string
      short_name:
        type: string
      slug:
        type: string
    type: object
  models.GetStatuses:
    properties:
      statuses:
        items:
          $ref: '#/definitions/models.Status'
        type: array
    type: object
  models.GetUserModel:
    properties:
      access_token:
        type: string
      created_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      phone:
        type: string
    type: object
  models.GetVendorModel:
    properties:
      address:
        type: string
      cargo_owner_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      location:
        $ref: '#/definitions/models.Location'
        type: object
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      user_name:
        type: string
    type: object
  models.Location:
    properties:
      lat:
        example: 40.123
        type: number
      long:
        example: 60.123
        type: number
    type: object
  models.LocationModel:
    properties:
      lat:
        type: number
      long:
        type: number
    type: object
  models.OptimizedTrips:
    properties:
      code:
        type: string
      trips:
        items:
          $ref: '#/definitions/models.Trips'
        type: array
      waypoints:
        items:
          $ref: '#/definitions/models.TripsWaypoint'
        type: array
    type: object
  models.RefreshTokenResponse:
    properties:
      token:
        type: string
    type: object
  models.RegisterConfirmModel:
    properties:
      activation_code:
        type: string
      phone:
        type: string
    type: object
  models.RegisterModel:
    properties:
      name:
        type: string
      phone:
        type: string
    type: object
  models.Response:
    properties:
      id:
        type: object
    type: object
  models.ResponseError:
    properties:
      error:
        type: object
    type: object
  models.ResponseOK:
    properties:
      message:
        type: object
    type: object
  models.SaveCourierVendorsModel:
    properties:
      courier_id:
        type: string
      vendor_ids:
        items:
          type: string
        type: array
    type: object
  models.SearchCouriersByPhoneModel:
    properties:
      couriers:
        items:
          $ref: '#/definitions/models.GetCourierModel'
        type: array
    type: object
  models.Status:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  models.Trips:
    properties:
      distance:
        type: number
      duration:
        type: number
      geometry:
        type: string
      legs:
        items:
          $ref: '#/definitions/models.GeoDrivingLegs'
        type: array
      weight:
        type: string
      weight_name:
        type: string
    type: object
  models.TripsDataModel:
    properties:
      current_location:
        $ref: '#/definitions/models.Location'
        type: object
      destination:
        $ref: '#/definitions/models.Location'
        type: object
      origins:
        items:
          $ref: '#/definitions/models.Location'
        type: array
    type: object
  models.TripsWaypoint:
    properties:
      distance:
        type: string
      location:
        items:
          type: number
        type: array
      name:
        type: string
      trip_index:
        type: integer
      waypoint_index:
        type: integer
    type: object
  models.UpdateCourierModel:
    properties:
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      phone:
        type: string
    type: object
  models.UpdateCourierVehicleModel:
    properties:
      id:
        type: string
      model:
        type: string
      vehicle_number:
        type: string
    type: object
  models.UpdateDistributorModel:
    properties:
      id:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  models.UpdateFareModel:
    properties:
      delivery_time:
        type: integer
      id:
        type: string
      min_distance:
        type: number
      min_price:
        type: number
      name:
        type: string
      price_per_km:
        type: number
    type: object
  models.UpdateOrder:
    properties:
      co_delivery_price:
        example: 10000
        type: number
      customer_id:
        type: string
      customer_name:
        example: Oybek
        type: string
      customer_phone_number:
        example: "998998765432"
        type: string
      description:
        type: string
      external_order_id:
        type: integer
      fare_id:
        example: a010f178-da52-4373-aacd-e477d871e27a
        type: string
      id:
        type: string
      to_address:
        example: Hamid Olimjon maydoni 10A dom 40-kvartira
        type: string
      to_location:
        $ref: '#/definitions/models.Location'
        type: object
      vendor_id:
        type: string
    type: object
  models.UpdateParkModel:
    properties:
      address:
        type: string
      id:
        type: string
      location:
        $ref: '#/definitions/models.LocationModel'
        type: object
      name:
        type: string
    type: object
  models.UpdateUserModel:
    properties:
      id:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  models.UpdateVendorModel:
    properties:
      address:
        type: string
      cargo_owner_id:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      location:
        $ref: '#/definitions/models.Location'
        type: object
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      user_name:
        type: string
    type: object
  models.getOrderModel:
    properties:
      co_delivery_price:
        example: 10000
        type: number
      customer_id:
        type: string
      customer_name:
        example: Oybek
        type: string
      customer_phone_number:
        example: "998998765432"
        type: string
      description:
        type: string
      external_order_id:
        type: integer
      fare_id:
        example: a010f178-da52-4373-aacd-e477d871e27a
        type: string
      id:
        example: 701dc270-0adc-4d00-ae78-4f2f78d794cc
        type: string
      status_id:
        example: 52f248b4-23a0-4350-80b7-1704eaff6c8c
        type: string
      to_address:
        example: Hamid Olimjon maydoni 10A dom 40-kvartira
        type: string
      to_location:
        $ref: '#/definitions/models.Location'
        type: object
      vendor_id:
        type: string
    type: object
  models.getOrderProductModel:
    properties:
      id:
        type: string
      name:
        example: Choyxona Osh
        type: string
      price:
        example: 25000
        type: number
      product_id:
        example: a010f178-da52-4373-aacd-e477d871e27a
        type: string
      quantity:
        example: 2
        type: number
      total_amount:
        type: number
    type: object
  models.productModel:
    properties:
      name:
        example: Choyxona Osh
        type: string
      price:
        example: 25000
        type: number
      product_id:
        example: a010f178-da52-4373-aacd-e477d871e27a
        type: string
      quantity:
        example: 2
        type: number
    type: object
  models.stepModel:
    properties:
      address:
        type: string
      branch_name:
        type: string
      description:
        type: string
      destination_address:
        type: string
      location:
        $ref: '#/definitions/models.Location'
        type: object
      phone_number:
        type: string
      products:
        items:
          $ref: '#/definitions/models.productModel'
        type: array
    type: object
info:
  contact: {}
  license: {}
paths:
  /v1/calc-delivery-cost:
    post:
      consumes:
      - application/json
      description: API for getting total delivery cost
      parameters:
      - description: calc-delivery-cost
        in: body
        name: calc
        required: true
        schema:
          $ref: '#/definitions/models.CalcDeliveryCostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CalcDeliveryCostResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Calculate Delivery Price For Clients
      tags:
      - geo
  /v1/cargo-owner:
    get:
      consumes:
      - application/json
      description: API for creating cargo owner
      parameters:
      - description: co_id
        in: query
        name: co_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetCO'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create Cargo Owner
      tags:
      - cargo-owner
    post:
      consumes:
      - application/json
      description: API for creating cargo owner
      parameters:
      - description: cargo_owner
        in: body
        name: cargo_owner
        required: true
        schema:
          $ref: '#/definitions/models.CreateCargoOwner'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create Cargo Owner
      tags:
      - cargo-owner
  /v1/cargo-owner/change-credentials:
    post:
      consumes:
      - application/json
      description: API for changing cargo owner login and password
      parameters:
      - description: cargo_owner_credentials
        in: body
        name: cargo_owner_credentials
        required: true
        schema:
          $ref: '#/definitions/models.ChangeLoginPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Change Cargo Owner Login And Password
      tags:
      - cargo-owner
  /v1/cargo-owner/check-login:
    post:
      consumes:
      - application/json
      description: API for checking cargo owner login exists or not in the table
      parameters:
      - description: cargo_owner_login
        in: body
        name: cargo_owner_login
        required: true
        schema:
          $ref: '#/definitions/models.CheckLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CheckExistsResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Check Cargo Owner Login
      tags:
      - cargo-owner
  /v1/cargo-owner/check-name:
    post:
      consumes:
      - application/json
      description: API for checking cargo owner name exists or not in the table
      parameters:
      - description: cargo_owner_name
        in: body
        name: cargo_owner_name
        required: true
        schema:
          $ref: '#/definitions/models.CheckNameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CheckExistsResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Check Cargo Owner Name
      tags:
      - cargo-owner
  /v1/cargo-owner/refresh-token:
    post:
      consumes:
      - application/json
      description: API for refreshing cargo owner token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RefreshTokenResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Refresh Cargo Owner Token
      tags:
      - cargo-owner
  /v1/category:
    get:
      consumes:
      - application/json
      description: API for getting all category
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllCategoriesModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get All Category
      tags:
      - category
    post:
      consumes:
      - application/json
      description: API for creating category
      parameters:
      - description: category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategoryModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create Category
      tags:
      - category
  /v1/courier/order:
    get:
      consumes:
      - application/json
      description: API for getting courier orders
      parameters:
      - description: courier_id
        in: query
        name: courier_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetOrders'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get Courier Orders
      tags:
      - order
  /v1/couriers:
    get:
      consumes:
      - application/json
      description: API for getting couriers
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllCouriersModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Couriers
      tags:
      - courier
    post:
      consumes:
      - application/json
      description: API for creating courier
      parameters:
      - description: courier
        in: body
        name: courier
        required: true
        schema:
          $ref: '#/definitions/models.CreateCourierModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetCourierModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create Courier
      tags:
      - courier
    put:
      consumes:
      - application/json
      description: API for updating courier
      parameters:
      - description: courier
        in: body
        name: courier
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCourierModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetCourierModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update Courier
      tags:
      - courier
  /v1/couriers/{courier_id}:
    delete:
      consumes:
      - application/json
      description: API for deleting courier
      parameters:
      - description: courier_id
        in: path
        name: courier_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Delete Courier
      tags:
      - courier
  /v1/couriers/{courier_id}/block:
    post:
      consumes:
      - application/json
      description: API for blocking courier
      parameters:
      - description: courier_id
        in: path
        name: courier_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Blocking Courier
      tags:
      - courier
  /v1/couriers/{courier_id}/courier-details:
    get:
      consumes:
      - application/json
      description: API for getting courier details
      parameters:
      - description: courier_id
        in: path
        name: courier_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CourierDetailsModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Courier Details
      tags:
      - courier
  /v1/couriers/{courier_id}/unblock:
    post:
      consumes:
      - application/json
      description: API for unblocking courier
      parameters:
      - description: courier_id
        in: path
        name: courier_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Unblocking Courier
      tags:
      - courier
  /v1/couriers/{courier_id}/vehicles:
    get:
      consumes:
      - application/json
      description: API for getting courier's vehicles
      parameters:
      - description: courier_id
        in: path
        name: courier_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllCourierVehiclesModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get All Courier Vehicles
      tags:
      - courier
  /v1/couriers/check-login/:
    post:
      consumes:
      - application/json
      description: |-
        API that checks whether courier exists
        and if exists sends sms to their number
      parameters:
      - description: check login
        in: body
        name: check_login
        required: true
        schema:
          $ref: '#/definitions/models.CheckLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CheckLoginResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Check Courier Login
      tags:
      - courier
  /v1/couriers/confirm-login/:
    post:
      consumes:
      - application/json
      description: |-
        API that checks whether courier entered
        valid token
      parameters:
      - description: confirm login
        in: body
        name: confirm_login
        required: true
        schema:
          $ref: '#/definitions/models.ConfirmLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Confirm Courier Login
      tags:
      - courier
  /v1/couriers/courier-details:
    post:
      consumes:
      - application/json
      description: API for creating courier details
      parameters:
      - description: courier_details
        in: body
        name: courier
        required: true
        schema:
          $ref: '#/definitions/models.CourierDetailsModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CourierDetailsModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create Courier Details
      tags:
      - courier
    put:
      consumes:
      - application/json
      description: API for updating courier details
      parameters:
      - description: courier_details
        in: body
        name: courier_details
        required: true
        schema:
          $ref: '#/definitions/models.CourierDetailsModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CourierDetailsModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update Courier Details
      tags:
      - courier
  /v1/couriers/save-vendors:
    post:
      consumes:
      - application/json
      description: API for creating courier vendor
      parameters:
      - description: courier
        in: body
        name: courier
        required: true
        schema:
          $ref: '#/definitions/models.SaveCourierVendorsModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetCourierModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create Courier
      tags:
      - courier
  /v1/distributors:
    get:
      consumes:
      - application/json
      description: API for getting all distributors
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllDistributorsModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get All Distributors
      tags:
      - distributor
    post:
      consumes:
      - application/json
      description: API for creating distributor
      parameters:
      - description: distributor
        in: body
        name: distirbutor
        required: true
        schema:
          $ref: '#/definitions/models.CreateDistributorModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetDistributorModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create Distributor
      tags:
      - distributor
    put:
      consumes:
      - application/json
      description: API for updating distributor
      parameters:
      - description: distributor
        in: body
        name: distributor
        required: true
        schema:
          $ref: '#/definitions/models.UpdateDistributorModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetDistributorModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update Distributor
      tags:
      - distributor
  /v1/distributors/{distributor_id}:
    delete:
      consumes:
      - application/json
      description: API for deleting distributor
      parameters:
      - description: distributor_id
        in: path
        name: distributor_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Delete Distributor
      tags:
      - distributor
    get:
      consumes:
      - application/json
      description: API for getting distributor
      parameters:
      - description: distributor Id
        in: path
        name: distributor_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetDistributorModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Distributor
      tags:
      - distributor
  /v1/distributors/{distributor_id}/couriers:
    get:
      consumes:
      - application/json
      description: API for getting all distributor couriers
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllCouriersModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Distributor Couriers
      tags:
      - distributor
  /v1/distributors/{distributor_id}/parks:
    get:
      consumes:
      - application/json
      description: API for getting all distributor parks
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllParksModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get All Distributor Parks
      tags:
      - distributor
  /v1/fares:
    get:
      consumes:
      - application/json
      description: API for getting fares
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllFaresModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Fares
      tags:
      - fare
    post:
      consumes:
      - application/json
      description: API for creating fare
      parameters:
      - description: fare
        in: body
        name: fare
        required: true
        schema:
          $ref: '#/definitions/models.CreateFareModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetFareModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create Fare
      tags:
      - fare
    put:
      consumes:
      - application/json
      description: API for updating fare
      parameters:
      - description: fare
        in: body
        name: fare
        required: true
        schema:
          $ref: '#/definitions/models.UpdateFareModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetFareModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update Fare
      tags:
      - fare
  /v1/fares/{fare_id}:
    delete:
      consumes:
      - application/json
      description: API for deleting fare
      parameters:
      - description: fare_id
        in: path
        name: fare_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Delete Fare
      tags:
      - fare
    get:
      consumes:
      - application/json
      description: API for getting fare
      parameters:
      - description: fare_id
        in: path
        name: fare_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetFareModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Fare
      tags:
      - fare
  /v1/measure:
    get:
      consumes:
      - application/json
      description: API for getting all measure
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllMeasuresModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get All Measure
      tags:
      - measure
    post:
      consumes:
      - application/json
      description: API for creating measure
      parameters:
      - description: measure
        in: body
        name: measure
        required: true
        schema:
          $ref: '#/definitions/models.CreateMeasureModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create Measure
      tags:
      - measure
  /v1/new-order:
    get:
      consumes:
      - application/json
      description: API for getting new orders
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetOrders'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get New Orders
      tags:
      - order
  /v1/optimized-trip:
    post:
      consumes:
      - application/json
      description: API for getting optimized trip
      parameters:
      - description: Current location
        in: body
        name: tripdata
        required: true
        schema:
          $ref: '#/definitions/models.TripsDataModel'
      - description: Current location
        in: body
        name: tripdata
        required: true
        schema:
          $ref: '#/definitions/models.TripsDataModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OptimizedTrips'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Optimized Trip location with index
      tags:
      - geo
  /v1/order:
    get:
      consumes:
      - application/json
      description: API for getting orders
      parameters:
      - description: status_id
        in: query
        name: status_id
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetOrders'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Orders
      tags:
      - order
  /v1/order-statuses:
    get:
      consumes:
      - application/json
      description: API for getting order statuses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetStatuses'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get All Possible Order Statuses
      tags:
      - order
  /v1/order-step/{step_id}/take:
    patch:
      consumes:
      - application/json
      description: API for taking order step
      parameters:
      - description: step_id
        in: path
        name: step_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Take Order Steps
      tags:
      - order
  /v1/order/:
    post:
      consumes:
      - application/json
      description: API for creating order
      parameters:
      - description: order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.CreateOrder'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create Order
      tags:
      - order
  /v1/order/{order_id}:
    get:
      consumes:
      - application/json
      description: API for getting order
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetOrder'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Order
      tags:
      - order
    put:
      consumes:
      - application/json
      description: API for updating order
      parameters:
      - description: order_id
        in: path
        name: order_id
        required: true
        type: string
      - description: order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.UpdateOrder'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update Order
      tags:
      - order
  /v1/order/{order_id}/add-courier:
    patch:
      consumes:
      - application/json
      description: API for adding order courier
      parameters:
      - description: ORDER ID
        in: path
        name: order_id
        required: true
        type: string
      - description: courier
        in: body
        name: courier
        required: true
        schema:
          $ref: '#/definitions/models.AddCourierRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Add Order Courier
      tags:
      - order
  /v1/order/{order_id}/change-status:
    patch:
      consumes:
      - application/json
      description: API for changing order status
      parameters:
      - description: ORDER ID
        in: path
        name: order_id
        required: true
        type: string
      - description: status
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/models.ChangeStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Change Order Status
      tags:
      - order
  /v1/order/{order_id}/remove-courier:
    patch:
      consumes:
      - application/json
      description: API for changing order courier
      parameters:
      - description: ORDER ID
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Remove Order Courier
      tags:
      - order
  /v1/parks:
    post:
      consumes:
      - application/json
      description: API for creating park
      parameters:
      - description: park
        in: body
        name: distirbutor
        required: true
        schema:
          $ref: '#/definitions/models.CreateParkModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetParkModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create Park
      tags:
      - park
    put:
      consumes:
      - application/json
      description: API for updating park
      parameters:
      - description: park
        in: body
        name: distirbutor
        required: true
        schema:
          $ref: '#/definitions/models.UpdateParkModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetParkModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update Park
      tags:
      - park
  /v1/parks/{park_id}:
    delete:
      consumes:
      - application/json
      description: API for deleting park
      parameters:
      - description: park_id
        in: path
        name: park_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Delete Park
      tags:
      - park
    get:
      consumes:
      - application/json
      description: API for getting park
      parameters:
      - description: ' Id'
        in: path
        name: park_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetParkModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Park
      tags:
      - park
  /v1/product:
    get:
      consumes:
      - application/json
      description: API for getting all product
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllProductsModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get All Product
      tags:
      - product
    post:
      consumes:
      - application/json
      description: API for creating product
      parameters:
      - description: product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.CreateProductModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create Product
      tags:
      - product
  /v1/product-kind:
    get:
      consumes:
      - application/json
      description: API for getting all product kind
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllProductKindsModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get All Product Kind
      tags:
      - product-kind
    post:
      consumes:
      - application/json
      description: API for creating product kind
      parameters:
      - description: product_kind
        in: body
        name: product_kind
        required: true
        schema:
          $ref: '#/definitions/models.CreateProductKindModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create Product Kind
      tags:
      - product-kind
  /v1/search-couriers:
    get:
      consumes:
      - application/json
      description: API for getting phones
      parameters:
      - description: phone
        in: query
        name: phone
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SearchCouriersByPhoneModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Search by phone
      tags:
      - courier
  /v1/users:
    get:
      consumes:
      - application/json
      description: API for getting users
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllUsersModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get All Users
      tags:
      - user
    post:
      consumes:
      - application/json
      description: API for creating user
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetUserModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create User
      tags:
      - user
    put:
      consumes:
      - application/json
      description: API for updating user
      parameters:
      - description: user
        in: body
        name: courier
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetUserModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update User
      tags:
      - user
  /v1/users/{user_id}:
    delete:
      consumes:
      - application/json
      description: API for deleting user
      parameters:
      - description: user_id
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Delete User
      tags:
      - user
    get:
      consumes:
      - application/json
      description: API for getting user info
      parameters:
      - description: user_id
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetUserModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get User
      tags:
      - user
  /v1/users/check-login/:
    post:
      consumes:
      - application/json
      description: |-
        API that checks whether user exists
        and if exists sends sms to their number
      parameters:
      - description: check login
        in: body
        name: check_login
        required: true
        schema:
          $ref: '#/definitions/models.CheckUserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CheckUserLoginResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Check User Login
      tags:
      - user
  /v1/users/confirm-login/:
    post:
      consumes:
      - application/json
      description: |-
        API that checks whether user entered
        valid token
      parameters:
      - description: confirm login
        in: body
        name: confirm_phone
        required: true
        schema:
          $ref: '#/definitions/models.ConfirmUserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetUserModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Confirm User Login
      tags:
      - user
  /v1/users/register-confirm/:
    post:
      consumes:
      - application/json
      description: Register - API for confirming and inserting user to DB
      parameters:
      - description: register_confirm
        in: body
        name: register_confirm
        required: true
        schema:
          $ref: '#/definitions/models.RegisterConfirmModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetUserModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Register confirm
      tags:
      - register
  /v1/users/register/:
    post:
      consumes:
      - application/json
      description: Register - API for registering users
      parameters:
      - description: register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/models.RegisterModel'
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Register
      tags:
      - register
  /v1/vehicle:
    post:
      consumes:
      - application/json
      description: API for creating courier vehicle
      parameters:
      - description: courier_vehicle
        in: body
        name: courier_vehicle
        required: true
        schema:
          $ref: '#/definitions/models.CreateCourierVehicleModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetCourierVehicleModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create Courier Vehicle
      tags:
      - vehicle
    put:
      consumes:
      - application/json
      description: API for updating courier vehicle
      parameters:
      - description: courier_vehicle
        in: body
        name: courier_vehicle
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCourierVehicleModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetCourierVehicleModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update Courier Vehicle
      tags:
      - vehicle
  /v1/vehicle/{vehicle_id}:
    get:
      consumes:
      - application/json
      description: API for getting courier vehicle
      parameters:
      - description: vehicle_id
        in: path
        name: vehicle_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetCourierVehicleModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Courier Vehicle
      tags:
      - vehicle
  /v1/vehicles:
    get:
      consumes:
      - application/json
      description: API for getting all vehicles
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllCourierVehiclesModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get All Vehicles
      tags:
      - vehicle
  /v1/vehicles/{vehicle_id}:
    delete:
      consumes:
      - application/json
      description: API for deleting courier vehicle
      parameters:
      - description: vehicle_id
        in: path
        name: vehicle_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Delete Courier Vehicle
      tags:
      - vehicle
  /v1/vendors:
    get:
      consumes:
      - application/json
      description: API for getting vendors
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllVendorsModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get All Vendors
      tags:
      - vendor
    post:
      consumes:
      - application/json
      description: API for creating vendor
      parameters:
      - description: vendor
        in: body
        name: vendor
        required: true
        schema:
          $ref: '#/definitions/models.CreateVendorModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetVendorModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create Vendor
      tags:
      - vendor
    put:
      consumes:
      - application/json
      description: API for updating vendor
      parameters:
      - description: vendor
        in: body
        name: vendor
        required: true
        schema:
          $ref: '#/definitions/models.UpdateVendorModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetVendorModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update Vendor
      tags:
      - vendor
  /v1/vendors/{vendor_id}:
    delete:
      consumes:
      - application/json
      description: API for deleting vendor
      parameters:
      - description: vendor_id
        in: path
        name: vendor_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Delete Vendor
      tags:
      - vendor
    get:
      consumes:
      - application/json
      description: API for getting vendor info
      parameters:
      - description: vendor_id
        in: path
        name: vendor_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetVendorModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Vendor
      tags:
      - vendor
  /v1/vendors/check-login/:
    post:
      consumes:
      - application/json
      description: |-
        API that checks whether vendor exists
        and if exists sends sms to their number
      parameters:
      - description: check login
        in: body
        name: check_login
        required: true
        schema:
          $ref: '#/definitions/models.CheckVendorLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CheckVendorLoginResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Check Vendor Login
      tags:
      - vendor
  /v1/vendors/confirm-login/:
    post:
      consumes:
      - application/json
      description: |-
        API that checks whether - vendor entered
        valid token
      parameters:
      - description: confirm login
        in: body
        name: confirm_phone
        required: true
        schema:
          $ref: '#/definitions/models.ConfirmVendorLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetVendorModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Confirm Vendor Login
      tags:
      - vendor
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
