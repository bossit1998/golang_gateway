// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user_type_service.proto

package auth_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("user_type_service.proto", fileDescriptor_0df5299ec2b5726f) }

var fileDescriptor_0df5299ec2b5726f = []byte{
	// 186 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x8f, 0xbd, 0x0a, 0xc2, 0x30,
	0x14, 0x85, 0xeb, 0x52, 0x24, 0x8b, 0x10, 0xd0, 0x4a, 0xdc, 0xfa, 0x00, 0x29, 0xe8, 0x22, 0xb8,
	0xf9, 0xf3, 0x02, 0x55, 0x17, 0x97, 0xd2, 0xca, 0xb1, 0x0a, 0xb5, 0x89, 0xc9, 0x8d, 0xd0, 0x37,
	0xf0, 0xb1, 0xa5, 0x0d, 0xa1, 0xdb, 0xc9, 0xe1, 0xcb, 0xe1, 0xbb, 0x2c, 0x71, 0x16, 0xa6, 0xa0,
	0x4e, 0xa3, 0xb0, 0x30, 0xdf, 0xd7, 0x1d, 0x52, 0x1b, 0x45, 0x8a, 0x4f, 0x6b, 0xb4, 0x43, 0x12,
	0xab, 0x5a, 0xa9, 0xba, 0x41, 0x36, 0xbc, 0x2a, 0xf7, 0xc8, 0xf0, 0xd6, 0xd4, 0x79, 0x4c, 0xb0,
	0xd2, 0xd1, 0xd3, 0xe7, 0xf5, 0x6f, 0xc2, 0x66, 0x57, 0x0b, 0x73, 0xe9, 0x34, 0xce, 0x7e, 0x8c,
	0x6f, 0x59, 0x7c, 0x30, 0x28, 0x09, 0x9c, 0xcb, 0xb0, 0x28, 0x03, 0x24, 0x96, 0x63, 0xe7, 0xa9,
	0x1c, 0x56, 0xab, 0xd6, 0x22, 0x8d, 0xf8, 0x8e, 0xc5, 0x47, 0x34, 0x20, 0xf0, 0x64, 0xa4, 0x7c,
	0x93, 0xe3, 0xe3, 0x60, 0x49, 0x2c, 0xa4, 0x57, 0x93, 0x41, 0x4d, 0x9e, 0x7a, 0xb5, 0x34, 0xda,
	0x27, 0xb7, 0x79, 0xf8, 0x93, 0xf5, 0x86, 0xe1, 0xb8, 0x2a, 0x1e, 0xba, 0xcd, 0x3f, 0x00, 0x00,
	0xff, 0xff, 0x3a, 0x09, 0x40, 0xf3, 0xf8, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserTypeServiceClient is the client API for UserTypeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserTypeServiceClient interface {
	Create(ctx context.Context, in *UserType, opts ...grpc.CallOption) (*CreateResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type userTypeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserTypeServiceClient(cc grpc.ClientConnInterface) UserTypeServiceClient {
	return &userTypeServiceClient{cc}
}

func (c *userTypeServiceClient) Create(ctx context.Context, in *UserType, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/genproto.UserTypeService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userTypeServiceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.UserTypeService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserTypeServiceServer is the server API for UserTypeService service.
type UserTypeServiceServer interface {
	Create(context.Context, *UserType) (*CreateResponse, error)
	Delete(context.Context, *DeleteRequest) (*empty.Empty, error)
}

// UnimplementedUserTypeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserTypeServiceServer struct {
}

func (*UnimplementedUserTypeServiceServer) Create(ctx context.Context, req *UserType) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedUserTypeServiceServer) Delete(ctx context.Context, req *DeleteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterUserTypeServiceServer(s *grpc.Server, srv UserTypeServiceServer) {
	s.RegisterService(&_UserTypeService_serviceDesc, srv)
}

func _UserTypeService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserType)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserTypeServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.UserTypeService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserTypeServiceServer).Create(ctx, req.(*UserType))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserTypeService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserTypeServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.UserTypeService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserTypeServiceServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserTypeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.UserTypeService",
	HandlerType: (*UserTypeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _UserTypeService_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _UserTypeService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user_type_service.proto",
}
