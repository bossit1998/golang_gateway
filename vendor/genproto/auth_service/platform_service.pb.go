// Code generated by protoc-gen-go. DO NOT EDIT.
// source: platform_service.proto

package auth_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("platform_service.proto", fileDescriptor_f1587c64a8dc09cd) }

var fileDescriptor_f1587c64a8dc09cd = []byte{
	// 184 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2b, 0xc8, 0x49, 0x2c,
	0x49, 0xcb, 0x2f, 0xca, 0x8d, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0xe2, 0x48, 0x4f, 0xcd, 0x03, 0xb3, 0xa4, 0xa4, 0xd3, 0xf3, 0xf3, 0xd3, 0x73,
	0x52, 0xf5, 0xc1, 0xbc, 0xa4, 0xd2, 0x34, 0xfd, 0xd4, 0xdc, 0x82, 0x92, 0x4a, 0x88, 0x32, 0x29,
	0xae, 0xc4, 0xd2, 0x92, 0x0c, 0x08, 0xdb, 0xa8, 0x83, 0x91, 0x8b, 0x3f, 0x00, 0x6a, 0x5a, 0x30,
	0xc4, 0x30, 0x21, 0x0b, 0x2e, 0x36, 0xe7, 0xa2, 0xd4, 0xc4, 0x92, 0x54, 0x21, 0x21, 0x3d, 0x98,
	0x89, 0x7a, 0x30, 0x45, 0x52, 0x12, 0x08, 0x31, 0x88, 0xaa, 0xa0, 0xd4, 0xe2, 0x82, 0xfc, 0xbc,
	0xe2, 0x54, 0x25, 0x06, 0x21, 0x6b, 0x2e, 0x36, 0x97, 0xd4, 0x9c, 0xd4, 0x92, 0x54, 0x21, 0x71,
	0x84, 0x2a, 0x88, 0x48, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x94, 0x98, 0x1e, 0xc4, 0x69,
	0x7a, 0x30, 0xa7, 0xe9, 0xb9, 0x82, 0x9c, 0xa6, 0xc4, 0xe0, 0x24, 0x1e, 0x25, 0x0a, 0xd3, 0xa3,
	0x0f, 0x72, 0x21, 0xcc, 0x73, 0x49, 0x6c, 0x60, 0x31, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x2b, 0x36, 0x00, 0x5a, 0xf7, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PlatformServiceClient is the client API for PlatformService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlatformServiceClient interface {
	Create(ctx context.Context, in *Platform, opts ...grpc.CallOption) (*CreateResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type platformServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPlatformServiceClient(cc grpc.ClientConnInterface) PlatformServiceClient {
	return &platformServiceClient{cc}
}

func (c *platformServiceClient) Create(ctx context.Context, in *Platform, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/genproto.PlatformService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *platformServiceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.PlatformService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlatformServiceServer is the server API for PlatformService service.
type PlatformServiceServer interface {
	Create(context.Context, *Platform) (*CreateResponse, error)
	Delete(context.Context, *DeleteRequest) (*empty.Empty, error)
}

// UnimplementedPlatformServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPlatformServiceServer struct {
}

func (*UnimplementedPlatformServiceServer) Create(ctx context.Context, req *Platform) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedPlatformServiceServer) Delete(ctx context.Context, req *DeleteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterPlatformServiceServer(s *grpc.Server, srv PlatformServiceServer) {
	s.RegisterService(&_PlatformService_serviceDesc, srv)
}

func _PlatformService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Platform)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.PlatformService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformServiceServer).Create(ctx, req.(*Platform))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlatformService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlatformServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.PlatformService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlatformServiceServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PlatformService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.PlatformService",
	HandlerType: (*PlatformServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _PlatformService_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _PlatformService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "platform_service.proto",
}
