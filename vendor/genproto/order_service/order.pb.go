// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order.proto

package order_service

import (
	fmt "fmt"
	courier_service "genproto/courier_service"
	fare_service "genproto/fare_service"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Location struct {
	Long                 float32  `protobuf:"fixed32,1,opt,name=long,proto3" json:"long,omitempty"`
	Lat                  float32  `protobuf:"fixed32,2,opt,name=lat,proto3" json:"lat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{0}
}

func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (m *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(m, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetLong() float32 {
	if m != nil {
		return m.Long
	}
	return 0
}

func (m *Location) GetLat() float32 {
	if m != nil {
		return m.Lat
	}
	return 0
}

type Order struct {
	Id                   string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BranchId             string                   `protobuf:"bytes,2,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	FromLocation         *Location                `protobuf:"bytes,3,opt,name=from_location,json=fromLocation,proto3" json:"from_location,omitempty"`
	FromAddress          string                   `protobuf:"bytes,4,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	ToLocation           *Location                `protobuf:"bytes,5,opt,name=to_location,json=toLocation,proto3" json:"to_location,omitempty"`
	ToAddress            string                   `protobuf:"bytes,6,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	PhoneNumber          string                   `protobuf:"bytes,7,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	CourierId            *wrappers.StringValue    `protobuf:"bytes,8,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
	FareId               string                   `protobuf:"bytes,9,opt,name=fare_id,json=fareId,proto3" json:"fare_id,omitempty"`
	StatusId             string                   `protobuf:"bytes,10,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`
	CreatedAt            string                   `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Description          string                   `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	CoId                 string                   `protobuf:"bytes,13,opt,name=co_id,json=coId,proto3" json:"co_id,omitempty"`
	CreatorTypeId        string                   `protobuf:"bytes,14,opt,name=creator_type_id,json=creatorTypeId,proto3" json:"creator_type_id,omitempty"`
	UserId               string                   `protobuf:"bytes,15,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Products             []*Product               `protobuf:"bytes,16,rep,name=products,proto3" json:"products,omitempty"`
	Fare                 *fare_service.Fare       `protobuf:"bytes,17,opt,name=fare,proto3" json:"fare,omitempty"`
	PickupDate           string                   `protobuf:"bytes,18,opt,name=pickup_date,json=pickupDate,proto3" json:"pickup_date,omitempty"`
	DeliverPrice         float32                  `protobuf:"fixed32,19,opt,name=deliver_price,json=deliverPrice,proto3" json:"deliver_price,omitempty"`
	DeliverTotalPrice    float32                  `protobuf:"fixed32,20,opt,name=deliver_total_price,json=deliverTotalPrice,proto3" json:"deliver_total_price,omitempty"`
	Courier              *courier_service.Courier `protobuf:"bytes,21,opt,name=courier,proto3" json:"courier,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{1}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Order) GetBranchId() string {
	if m != nil {
		return m.BranchId
	}
	return ""
}

func (m *Order) GetFromLocation() *Location {
	if m != nil {
		return m.FromLocation
	}
	return nil
}

func (m *Order) GetFromAddress() string {
	if m != nil {
		return m.FromAddress
	}
	return ""
}

func (m *Order) GetToLocation() *Location {
	if m != nil {
		return m.ToLocation
	}
	return nil
}

func (m *Order) GetToAddress() string {
	if m != nil {
		return m.ToAddress
	}
	return ""
}

func (m *Order) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *Order) GetCourierId() *wrappers.StringValue {
	if m != nil {
		return m.CourierId
	}
	return nil
}

func (m *Order) GetFareId() string {
	if m != nil {
		return m.FareId
	}
	return ""
}

func (m *Order) GetStatusId() string {
	if m != nil {
		return m.StatusId
	}
	return ""
}

func (m *Order) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Order) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Order) GetCoId() string {
	if m != nil {
		return m.CoId
	}
	return ""
}

func (m *Order) GetCreatorTypeId() string {
	if m != nil {
		return m.CreatorTypeId
	}
	return ""
}

func (m *Order) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Order) GetProducts() []*Product {
	if m != nil {
		return m.Products
	}
	return nil
}

func (m *Order) GetFare() *fare_service.Fare {
	if m != nil {
		return m.Fare
	}
	return nil
}

func (m *Order) GetPickupDate() string {
	if m != nil {
		return m.PickupDate
	}
	return ""
}

func (m *Order) GetDeliverPrice() float32 {
	if m != nil {
		return m.DeliverPrice
	}
	return 0
}

func (m *Order) GetDeliverTotalPrice() float32 {
	if m != nil {
		return m.DeliverTotalPrice
	}
	return 0
}

func (m *Order) GetCourier() *courier_service.Courier {
	if m != nil {
		return m.Courier
	}
	return nil
}

type Product struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Quantity             float32  `protobuf:"fixed32,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price                float32  `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	TotalAmount          float32  `protobuf:"fixed32,5,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Product) Reset()         { *m = Product{} }
func (m *Product) String() string { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()    {}
func (*Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{2}
}

func (m *Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Product.Unmarshal(m, b)
}
func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
}
func (m *Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Product.Merge(m, src)
}
func (m *Product) XXX_Size() int {
	return xxx_messageInfo_Product.Size(m)
}
func (m *Product) XXX_DiscardUnknown() {
	xxx_messageInfo_Product.DiscardUnknown(m)
}

var xxx_messageInfo_Product proto.InternalMessageInfo

func (m *Product) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Product) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Product) GetQuantity() float32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *Product) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Product) GetTotalAmount() float32 {
	if m != nil {
		return m.TotalAmount
	}
	return 0
}

func init() {
	proto.RegisterType((*Location)(nil), "genproto.Location")
	proto.RegisterType((*Order)(nil), "genproto.Order")
	proto.RegisterType((*Product)(nil), "genproto.Product")
}

func init() { proto.RegisterFile("order.proto", fileDescriptor_cd01338c35d87077) }

var fileDescriptor_cd01338c35d87077 = []byte{
	// 604 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x54, 0xdf, 0x6f, 0xd3, 0x3c,
	0x14, 0x55, 0xbb, 0xb4, 0x4d, 0x6e, 0xda, 0xfd, 0xf0, 0xf6, 0x7d, 0xb3, 0x06, 0x83, 0xae, 0x48,
	0x68, 0x12, 0x22, 0x45, 0xdb, 0x03, 0x0f, 0x3c, 0x0d, 0x10, 0x52, 0x24, 0x04, 0x53, 0x98, 0x78,
	0xe0, 0x25, 0x72, 0x63, 0xaf, 0xb3, 0x48, 0xe3, 0xe0, 0x38, 0x43, 0x7b, 0xe5, 0x85, 0x7f, 0x1b,
	0xf9, 0xda, 0xc9, 0x26, 0x21, 0xde, 0x7c, 0xcf, 0x39, 0x39, 0x3e, 0xf7, 0xda, 0x0e, 0xc4, 0x4a,
	0x73, 0xa1, 0x93, 0x5a, 0x2b, 0xa3, 0x48, 0xb8, 0x16, 0x15, 0xae, 0x8e, 0x9e, 0xac, 0x95, 0x5a,
	0x97, 0x62, 0x89, 0xd5, 0xaa, 0xbd, 0x5e, 0xfe, 0xd4, 0xac, 0xae, 0x85, 0x6e, 0x9c, 0xf2, 0xe8,
	0xf0, 0x9a, 0x69, 0x91, 0x37, 0x42, 0xdf, 0xca, 0x42, 0x2c, 0x6d, 0xe1, 0x89, 0xe3, 0x42, 0xb5,
	0x5a, 0x0a, 0xdd, 0x73, 0xbe, 0x76, 0xf4, 0xe2, 0x15, 0x84, 0x1f, 0x55, 0xc1, 0x8c, 0x54, 0x15,
	0x21, 0x10, 0x94, 0xaa, 0x5a, 0xd3, 0xc1, 0x7c, 0x70, 0x3a, 0xcc, 0x70, 0x4d, 0x76, 0x61, 0xab,
	0x64, 0x86, 0x0e, 0x11, 0xb2, 0xcb, 0xc5, 0xef, 0x31, 0x8c, 0x3e, 0xdb, 0x8c, 0x64, 0x1b, 0x86,
	0x92, 0xa3, 0x3a, 0xca, 0x86, 0x92, 0x93, 0x47, 0x10, 0xad, 0x34, 0xab, 0x8a, 0x9b, 0x5c, 0x72,
	0xfc, 0x22, 0xca, 0x42, 0x07, 0xa4, 0x9c, 0xbc, 0x86, 0xd9, 0xb5, 0x56, 0x9b, 0xbc, 0xf4, 0xbb,
	0xd1, 0xad, 0xf9, 0xe0, 0x34, 0x3e, 0x23, 0x49, 0xd7, 0x62, 0xd2, 0xe5, 0xc8, 0xa6, 0x56, 0xd8,
	0xa7, 0x3a, 0x01, 0xac, 0x73, 0xc6, 0xb9, 0x16, 0x4d, 0x43, 0x03, 0x34, 0x8e, 0x2d, 0x76, 0xe1,
	0x20, 0x72, 0x0e, 0xb1, 0x51, 0xf7, 0xce, 0xa3, 0x7f, 0x3a, 0x83, 0x51, 0xbd, 0xef, 0x31, 0x80,
	0x51, 0xbd, 0xeb, 0x18, 0x5d, 0x23, 0xa3, 0x3a, 0xcf, 0x13, 0x98, 0xd6, 0x37, 0xaa, 0x12, 0x79,
	0xd5, 0x6e, 0x56, 0x42, 0xd3, 0x89, 0xdb, 0x16, 0xb1, 0x4f, 0x08, 0x91, 0x37, 0x00, 0xdd, 0x70,
	0x25, 0xa7, 0x21, 0xee, 0xfa, 0x38, 0x71, 0x07, 0x95, 0x74, 0x07, 0x95, 0x7c, 0x31, 0x5a, 0x56,
	0xeb, 0xaf, 0xac, 0x6c, 0x45, 0x16, 0x79, 0x7d, 0xca, 0xc9, 0x21, 0x4c, 0xf0, 0xc8, 0x24, 0xa7,
	0x11, 0x5a, 0x8f, 0x6d, 0x99, 0xe2, 0x14, 0x1b, 0xc3, 0x4c, 0xdb, 0x58, 0x0a, 0xdc, 0x14, 0x1d,
	0x90, 0x72, 0x1b, 0xba, 0xd0, 0x82, 0x19, 0xc1, 0x73, 0x66, 0x68, 0xec, 0x42, 0x7b, 0xe4, 0xc2,
	0x90, 0x39, 0xc4, 0x5c, 0x34, 0x85, 0x96, 0x35, 0x0e, 0x62, 0xea, 0x32, 0x3f, 0x80, 0xc8, 0x3e,
	0x8c, 0x0a, 0x65, 0x9d, 0x67, 0xc8, 0x05, 0x85, 0x4a, 0x39, 0x79, 0x0e, 0x3b, 0xe8, 0xa1, 0x74,
	0x6e, 0xee, 0x6a, 0xcc, 0xb4, 0x8d, 0xf4, 0xcc, 0xc3, 0x57, 0x77, 0xb5, 0x70, 0x99, 0xdb, 0xc6,
	0x75, 0xbb, 0xe3, 0x32, 0xdb, 0x32, 0xe5, 0xe4, 0x25, 0x84, 0xb5, 0x56, 0xbc, 0x2d, 0x4c, 0x43,
	0x77, 0xe7, 0x5b, 0xa7, 0xf1, 0xd9, 0xde, 0xfd, 0xf4, 0x2f, 0x1d, 0x93, 0xf5, 0x12, 0xb2, 0x80,
	0xc0, 0x36, 0x4b, 0xf7, 0x70, 0x64, 0xdb, 0xf7, 0xd2, 0x0f, 0x4c, 0x8b, 0x0c, 0x39, 0xf2, 0x14,
	0xe2, 0x5a, 0x16, 0xdf, 0xdb, 0x3a, 0xe7, 0xcc, 0x08, 0x4a, 0x70, 0x3f, 0x70, 0xd0, 0x7b, 0x66,
	0x04, 0x79, 0x06, 0x33, 0x2e, 0x4a, 0x79, 0x2b, 0x74, 0x5e, 0x6b, 0x59, 0x08, 0xba, 0x8f, 0x77,
	0x74, 0xea, 0xc1, 0x4b, 0x8b, 0x91, 0x04, 0xf6, 0x3b, 0x91, 0x51, 0x86, 0x95, 0x5e, 0x7a, 0x80,
	0xd2, 0x3d, 0x4f, 0x5d, 0x59, 0xc6, 0xe9, 0x5f, 0xc0, 0xc4, 0x1f, 0x11, 0xfd, 0x0f, 0xc3, 0x3d,
	0xe8, 0xe3, 0x9d, 0x23, 0xb2, 0x4e, 0xb1, 0xf8, 0x35, 0x80, 0x89, 0x6f, 0xee, 0xaf, 0xb7, 0x40,
	0x20, 0xa8, 0xd8, 0x46, 0xf8, 0x67, 0x80, 0x6b, 0x72, 0x04, 0xe1, 0x8f, 0x96, 0x55, 0x46, 0x9a,
	0x3b, 0xbc, 0xfd, 0xc3, 0xac, 0xaf, 0xc9, 0x01, 0x8c, 0x5c, 0xb4, 0x00, 0x09, 0x57, 0xd8, 0x4b,
	0xe8, 0x62, 0xb3, 0x8d, 0x6a, 0x2b, 0x83, 0x37, 0x7b, 0x98, 0xc5, 0x88, 0x5d, 0x20, 0xf4, 0x96,
	0x7e, 0xfb, 0xbf, 0x4b, 0xb8, 0xc4, 0x5f, 0x47, 0xf7, 0xd0, 0x57, 0x63, 0x04, 0xcf, 0xff, 0x04,
	0x00, 0x00, 0xff, 0xff, 0x04, 0x71, 0x55, 0x53, 0x52, 0x04, 0x00, 0x00,
}
