// Code generated by protoc-gen-go. DO NOT EDIT.
// source: co_branch.proto

package co_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetBranchRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBranchRequest) Reset()         { *m = GetBranchRequest{} }
func (m *GetBranchRequest) String() string { return proto.CompactTextString(m) }
func (*GetBranchRequest) ProtoMessage()    {}
func (*GetBranchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_af09dd6fd8c48e77, []int{0}
}

func (m *GetBranchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBranchRequest.Unmarshal(m, b)
}
func (m *GetBranchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBranchRequest.Marshal(b, m, deterministic)
}
func (m *GetBranchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBranchRequest.Merge(m, src)
}
func (m *GetBranchRequest) XXX_Size() int {
	return xxx_messageInfo_GetBranchRequest.Size(m)
}
func (m *GetBranchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBranchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBranchRequest proto.InternalMessageInfo

func (m *GetBranchRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteBranchRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteBranchRequest) Reset()         { *m = DeleteBranchRequest{} }
func (m *DeleteBranchRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteBranchRequest) ProtoMessage()    {}
func (*DeleteBranchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_af09dd6fd8c48e77, []int{1}
}

func (m *DeleteBranchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBranchRequest.Unmarshal(m, b)
}
func (m *DeleteBranchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBranchRequest.Marshal(b, m, deterministic)
}
func (m *DeleteBranchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBranchRequest.Merge(m, src)
}
func (m *DeleteBranchRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteBranchRequest.Size(m)
}
func (m *DeleteBranchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBranchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBranchRequest proto.InternalMessageInfo

func (m *DeleteBranchRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetAllBranchRequest struct {
	Page                 uint64   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit                uint64   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllBranchRequest) Reset()         { *m = GetAllBranchRequest{} }
func (m *GetAllBranchRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllBranchRequest) ProtoMessage()    {}
func (*GetAllBranchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_af09dd6fd8c48e77, []int{2}
}

func (m *GetAllBranchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllBranchRequest.Unmarshal(m, b)
}
func (m *GetAllBranchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllBranchRequest.Marshal(b, m, deterministic)
}
func (m *GetAllBranchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllBranchRequest.Merge(m, src)
}
func (m *GetAllBranchRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllBranchRequest.Size(m)
}
func (m *GetAllBranchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllBranchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllBranchRequest proto.InternalMessageInfo

func (m *GetAllBranchRequest) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAllBranchRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type GetAllBranchResponse struct {
	Branches             []*CargoOwnerBranch `protobuf:"bytes,1,rep,name=branches,proto3" json:"branches,omitempty"`
	Count                uint64              `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetAllBranchResponse) Reset()         { *m = GetAllBranchResponse{} }
func (m *GetAllBranchResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllBranchResponse) ProtoMessage()    {}
func (*GetAllBranchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_af09dd6fd8c48e77, []int{3}
}

func (m *GetAllBranchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllBranchResponse.Unmarshal(m, b)
}
func (m *GetAllBranchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllBranchResponse.Marshal(b, m, deterministic)
}
func (m *GetAllBranchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllBranchResponse.Merge(m, src)
}
func (m *GetAllBranchResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllBranchResponse.Size(m)
}
func (m *GetAllBranchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllBranchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllBranchResponse proto.InternalMessageInfo

func (m *GetAllBranchResponse) GetBranches() []*CargoOwnerBranch {
	if m != nil {
		return m.Branches
	}
	return nil
}

func (m *GetAllBranchResponse) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type CheckExistsBranchRequest struct {
	Column               string   `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckExistsBranchRequest) Reset()         { *m = CheckExistsBranchRequest{} }
func (m *CheckExistsBranchRequest) String() string { return proto.CompactTextString(m) }
func (*CheckExistsBranchRequest) ProtoMessage()    {}
func (*CheckExistsBranchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_af09dd6fd8c48e77, []int{4}
}

func (m *CheckExistsBranchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckExistsBranchRequest.Unmarshal(m, b)
}
func (m *CheckExistsBranchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckExistsBranchRequest.Marshal(b, m, deterministic)
}
func (m *CheckExistsBranchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckExistsBranchRequest.Merge(m, src)
}
func (m *CheckExistsBranchRequest) XXX_Size() int {
	return xxx_messageInfo_CheckExistsBranchRequest.Size(m)
}
func (m *CheckExistsBranchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckExistsBranchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckExistsBranchRequest proto.InternalMessageInfo

func (m *CheckExistsBranchRequest) GetColumn() string {
	if m != nil {
		return m.Column
	}
	return ""
}

func (m *CheckExistsBranchRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type CheckExistsBranchResponse struct {
	IsExists             bool     `protobuf:"varint,1,opt,name=is_exists,json=isExists,proto3" json:"is_exists,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckExistsBranchResponse) Reset()         { *m = CheckExistsBranchResponse{} }
func (m *CheckExistsBranchResponse) String() string { return proto.CompactTextString(m) }
func (*CheckExistsBranchResponse) ProtoMessage()    {}
func (*CheckExistsBranchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_af09dd6fd8c48e77, []int{5}
}

func (m *CheckExistsBranchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckExistsBranchResponse.Unmarshal(m, b)
}
func (m *CheckExistsBranchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckExistsBranchResponse.Marshal(b, m, deterministic)
}
func (m *CheckExistsBranchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckExistsBranchResponse.Merge(m, src)
}
func (m *CheckExistsBranchResponse) XXX_Size() int {
	return xxx_messageInfo_CheckExistsBranchResponse.Size(m)
}
func (m *CheckExistsBranchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckExistsBranchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckExistsBranchResponse proto.InternalMessageInfo

func (m *CheckExistsBranchResponse) GetIsExists() bool {
	if m != nil {
		return m.IsExists
	}
	return false
}

func init() {
	proto.RegisterType((*GetBranchRequest)(nil), "genproto.GetBranchRequest")
	proto.RegisterType((*DeleteBranchRequest)(nil), "genproto.DeleteBranchRequest")
	proto.RegisterType((*GetAllBranchRequest)(nil), "genproto.GetAllBranchRequest")
	proto.RegisterType((*GetAllBranchResponse)(nil), "genproto.GetAllBranchResponse")
	proto.RegisterType((*CheckExistsBranchRequest)(nil), "genproto.CheckExistsBranchRequest")
	proto.RegisterType((*CheckExistsBranchResponse)(nil), "genproto.CheckExistsBranchResponse")
}

func init() { proto.RegisterFile("co_branch.proto", fileDescriptor_af09dd6fd8c48e77) }

var fileDescriptor_af09dd6fd8c48e77 = []byte{
	// 381 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0x41, 0x0f, 0xd2, 0x30,
	0x14, 0x86, 0x81, 0xcb, 0x78, 0x26, 0x6a, 0x0a, 0x92, 0x39, 0xa2, 0x21, 0x4d, 0x4c, 0x38, 0x8d,
	0x04, 0x13, 0xe3, 0x49, 0x02, 0x93, 0xa0, 0x27, 0x92, 0x25, 0x5e, 0xbc, 0x90, 0xd1, 0x3d, 0x47,
	0xe3, 0x58, 0xe7, 0xda, 0xa1, 0xfe, 0x54, 0xff, 0x8d, 0x59, 0x3b, 0x08, 0x23, 0xc0, 0xc1, 0xdb,
	0xfb, 0xda, 0xef, 0xfb, 0xfa, 0xbe, 0xbe, 0x07, 0xcf, 0x99, 0xd8, 0xee, 0x8a, 0x28, 0x63, 0x7b,
	0x3f, 0x2f, 0x84, 0x12, 0xc4, 0x49, 0x30, 0xd3, 0x95, 0x37, 0x4a, 0x84, 0x48, 0x52, 0x9c, 0x6a,
	0xb4, 0x2b, 0xbf, 0x4f, 0xf1, 0x90, 0xab, 0x3f, 0x86, 0xe6, 0x39, 0x4c, 0x98, 0x8a, 0x52, 0x78,
	0xb1, 0x46, 0xb5, 0xd4, 0x1e, 0x21, 0xfe, 0x2c, 0x51, 0x2a, 0xf2, 0x0c, 0x2c, 0x1e, 0xbb, 0xed,
	0x71, 0x7b, 0xd2, 0x0b, 0x2d, 0x1e, 0xd3, 0xb7, 0xd0, 0xff, 0x84, 0x29, 0x2a, 0x7c, 0x4c, 0x9b,
	0x43, 0x7f, 0x8d, 0x6a, 0x91, 0xa6, 0x4d, 0x1a, 0x81, 0x6e, 0x1e, 0x25, 0xa8, 0x89, 0xdd, 0x50,
	0xd7, 0x64, 0x00, 0x4f, 0x52, 0x7e, 0xe0, 0xca, 0xb5, 0xf4, 0xa1, 0x01, 0x34, 0x86, 0x41, 0xd3,
	0x40, 0xe6, 0x22, 0x93, 0x48, 0xde, 0x83, 0x63, 0x42, 0xa2, 0x74, 0xdb, 0xe3, 0xce, 0xe4, 0xe9,
	0xcc, 0xf3, 0x4f, 0x39, 0xfd, 0x20, 0x2a, 0x12, 0xb1, 0xf9, 0x95, 0x61, 0x51, 0xab, 0xce, 0xdc,
	0xea, 0x15, 0x26, 0xca, 0xec, 0xfc, 0x8a, 0x06, 0xf4, 0x33, 0xb8, 0xc1, 0x1e, 0xd9, 0x8f, 0xd5,
	0x6f, 0x2e, 0x95, 0x6c, 0xf6, 0x3a, 0x04, 0x9b, 0x89, 0xb4, 0x3c, 0x64, 0x75, 0xac, 0x1a, 0x55,
	0x4e, 0xc7, 0x28, 0x2d, 0x51, 0x3b, 0xf5, 0x42, 0x03, 0xe8, 0x07, 0x78, 0x75, 0xc3, 0xa9, 0x6e,
	0x7a, 0x04, 0x3d, 0x2e, 0xb7, 0xa8, 0xaf, 0xb4, 0x9b, 0x13, 0x3a, 0x5c, 0x1a, 0xea, 0xec, 0xaf,
	0x05, 0x4e, 0xb0, 0x31, 0x0a, 0xf2, 0x11, 0xec, 0xa0, 0xc0, 0x48, 0x21, 0x79, 0x10, 0xcb, 0x1b,
	0xfa, 0x66, 0xa0, 0xfe, 0x69, 0xa0, 0xfe, 0xaa, 0x1a, 0x28, 0x6d, 0x55, 0xfa, 0xaf, 0x79, 0xfc,
	0xff, 0xfa, 0x39, 0x74, 0xd6, 0xa8, 0x2e, 0xc5, 0xd7, 0x1b, 0xe1, 0x3d, 0x30, 0xa6, 0x2d, 0xf2,
	0x05, 0x6c, 0x33, 0x37, 0xf2, 0xba, 0xe1, 0x71, 0xbd, 0x0a, 0xde, 0x9b, 0x7b, 0xd7, 0xe6, 0xcf,
	0x68, 0x8b, 0x2c, 0xc0, 0x36, 0xab, 0x76, 0x69, 0x75, 0x63, 0xf9, 0xee, 0xc7, 0x59, 0xbe, 0xfc,
	0xd6, 0x3f, 0x29, 0xa7, 0x4c, 0x6c, 0x25, 0x16, 0x47, 0xce, 0x70, 0x67, 0xeb, 0x93, 0x77, 0xff,
	0x02, 0x00, 0x00, 0xff, 0xff, 0x03, 0x02, 0x45, 0x52, 0x33, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// COBranchClient is the client API for COBranch service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type COBranchClient interface {
	Create(ctx context.Context, in *CargoOwnerBranch, opts ...grpc.CallOption) (*empty.Empty, error)
	Update(ctx context.Context, in *CargoOwnerBranch, opts ...grpc.CallOption) (*empty.Empty, error)
	Get(ctx context.Context, in *GetBranchRequest, opts ...grpc.CallOption) (*CargoOwnerBranch, error)
	GetAll(ctx context.Context, in *GetAllBranchRequest, opts ...grpc.CallOption) (*GetAllBranchResponse, error)
	Delete(ctx context.Context, in *DeleteBranchRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type cOBranchClient struct {
	cc *grpc.ClientConn
}

func NewCOBranchClient(cc *grpc.ClientConn) COBranchClient {
	return &cOBranchClient{cc}
}

func (c *cOBranchClient) Create(ctx context.Context, in *CargoOwnerBranch, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.COBranch/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cOBranchClient) Update(ctx context.Context, in *CargoOwnerBranch, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.COBranch/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cOBranchClient) Get(ctx context.Context, in *GetBranchRequest, opts ...grpc.CallOption) (*CargoOwnerBranch, error) {
	out := new(CargoOwnerBranch)
	err := c.cc.Invoke(ctx, "/genproto.COBranch/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cOBranchClient) GetAll(ctx context.Context, in *GetAllBranchRequest, opts ...grpc.CallOption) (*GetAllBranchResponse, error) {
	out := new(GetAllBranchResponse)
	err := c.cc.Invoke(ctx, "/genproto.COBranch/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cOBranchClient) Delete(ctx context.Context, in *DeleteBranchRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.COBranch/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// COBranchServer is the server API for COBranch service.
type COBranchServer interface {
	Create(context.Context, *CargoOwnerBranch) (*empty.Empty, error)
	Update(context.Context, *CargoOwnerBranch) (*empty.Empty, error)
	Get(context.Context, *GetBranchRequest) (*CargoOwnerBranch, error)
	GetAll(context.Context, *GetAllBranchRequest) (*GetAllBranchResponse, error)
	Delete(context.Context, *DeleteBranchRequest) (*empty.Empty, error)
}

// UnimplementedCOBranchServer can be embedded to have forward compatible implementations.
type UnimplementedCOBranchServer struct {
}

func (*UnimplementedCOBranchServer) Create(ctx context.Context, req *CargoOwnerBranch) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedCOBranchServer) Update(ctx context.Context, req *CargoOwnerBranch) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedCOBranchServer) Get(ctx context.Context, req *GetBranchRequest) (*CargoOwnerBranch, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedCOBranchServer) GetAll(ctx context.Context, req *GetAllBranchRequest) (*GetAllBranchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedCOBranchServer) Delete(ctx context.Context, req *DeleteBranchRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterCOBranchServer(s *grpc.Server, srv COBranchServer) {
	s.RegisterService(&_COBranch_serviceDesc, srv)
}

func _COBranch_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CargoOwnerBranch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(COBranchServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.COBranch/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(COBranchServer).Create(ctx, req.(*CargoOwnerBranch))
	}
	return interceptor(ctx, in, info, handler)
}

func _COBranch_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CargoOwnerBranch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(COBranchServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.COBranch/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(COBranchServer).Update(ctx, req.(*CargoOwnerBranch))
	}
	return interceptor(ctx, in, info, handler)
}

func _COBranch_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBranchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(COBranchServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.COBranch/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(COBranchServer).Get(ctx, req.(*GetBranchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _COBranch_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllBranchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(COBranchServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.COBranch/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(COBranchServer).GetAll(ctx, req.(*GetAllBranchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _COBranch_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBranchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(COBranchServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.COBranch/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(COBranchServer).Delete(ctx, req.(*DeleteBranchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _COBranch_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.COBranch",
	HandlerType: (*COBranchServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _COBranch_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _COBranch_Update_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _COBranch_Get_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _COBranch_GetAll_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _COBranch_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "co_branch.proto",
}
