// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vendor_service.proto

package user_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateVendorRequest struct {
	Vendor               *Vendor  `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVendorRequest) Reset()         { *m = CreateVendorRequest{} }
func (m *CreateVendorRequest) String() string { return proto.CompactTextString(m) }
func (*CreateVendorRequest) ProtoMessage()    {}
func (*CreateVendorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62c6bb5a724124b7, []int{0}
}

func (m *CreateVendorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVendorRequest.Unmarshal(m, b)
}
func (m *CreateVendorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVendorRequest.Marshal(b, m, deterministic)
}
func (m *CreateVendorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVendorRequest.Merge(m, src)
}
func (m *CreateVendorRequest) XXX_Size() int {
	return xxx_messageInfo_CreateVendorRequest.Size(m)
}
func (m *CreateVendorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVendorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVendorRequest proto.InternalMessageInfo

func (m *CreateVendorRequest) GetVendor() *Vendor {
	if m != nil {
		return m.Vendor
	}
	return nil
}

type CreateVendorResponse struct {
	Vendor               *Vendor  `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVendorResponse) Reset()         { *m = CreateVendorResponse{} }
func (m *CreateVendorResponse) String() string { return proto.CompactTextString(m) }
func (*CreateVendorResponse) ProtoMessage()    {}
func (*CreateVendorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62c6bb5a724124b7, []int{1}
}

func (m *CreateVendorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVendorResponse.Unmarshal(m, b)
}
func (m *CreateVendorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVendorResponse.Marshal(b, m, deterministic)
}
func (m *CreateVendorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVendorResponse.Merge(m, src)
}
func (m *CreateVendorResponse) XXX_Size() int {
	return xxx_messageInfo_CreateVendorResponse.Size(m)
}
func (m *CreateVendorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVendorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVendorResponse proto.InternalMessageInfo

func (m *CreateVendorResponse) GetVendor() *Vendor {
	if m != nil {
		return m.Vendor
	}
	return nil
}

type UpdateVendorRequest struct {
	Vendor               *Vendor  `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateVendorRequest) Reset()         { *m = UpdateVendorRequest{} }
func (m *UpdateVendorRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateVendorRequest) ProtoMessage()    {}
func (*UpdateVendorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62c6bb5a724124b7, []int{2}
}

func (m *UpdateVendorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateVendorRequest.Unmarshal(m, b)
}
func (m *UpdateVendorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateVendorRequest.Marshal(b, m, deterministic)
}
func (m *UpdateVendorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateVendorRequest.Merge(m, src)
}
func (m *UpdateVendorRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateVendorRequest.Size(m)
}
func (m *UpdateVendorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateVendorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateVendorRequest proto.InternalMessageInfo

func (m *UpdateVendorRequest) GetVendor() *Vendor {
	if m != nil {
		return m.Vendor
	}
	return nil
}

type UpdateVendorResponse struct {
	Vendor               *Vendor  `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateVendorResponse) Reset()         { *m = UpdateVendorResponse{} }
func (m *UpdateVendorResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateVendorResponse) ProtoMessage()    {}
func (*UpdateVendorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62c6bb5a724124b7, []int{3}
}

func (m *UpdateVendorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateVendorResponse.Unmarshal(m, b)
}
func (m *UpdateVendorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateVendorResponse.Marshal(b, m, deterministic)
}
func (m *UpdateVendorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateVendorResponse.Merge(m, src)
}
func (m *UpdateVendorResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateVendorResponse.Size(m)
}
func (m *UpdateVendorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateVendorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateVendorResponse proto.InternalMessageInfo

func (m *UpdateVendorResponse) GetVendor() *Vendor {
	if m != nil {
		return m.Vendor
	}
	return nil
}

type DeleteVendorRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVendorRequest) Reset()         { *m = DeleteVendorRequest{} }
func (m *DeleteVendorRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteVendorRequest) ProtoMessage()    {}
func (*DeleteVendorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62c6bb5a724124b7, []int{4}
}

func (m *DeleteVendorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVendorRequest.Unmarshal(m, b)
}
func (m *DeleteVendorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVendorRequest.Marshal(b, m, deterministic)
}
func (m *DeleteVendorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVendorRequest.Merge(m, src)
}
func (m *DeleteVendorRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteVendorRequest.Size(m)
}
func (m *DeleteVendorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVendorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVendorRequest proto.InternalMessageInfo

func (m *DeleteVendorRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetVendorRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVendorRequest) Reset()         { *m = GetVendorRequest{} }
func (m *GetVendorRequest) String() string { return proto.CompactTextString(m) }
func (*GetVendorRequest) ProtoMessage()    {}
func (*GetVendorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62c6bb5a724124b7, []int{5}
}

func (m *GetVendorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVendorRequest.Unmarshal(m, b)
}
func (m *GetVendorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVendorRequest.Marshal(b, m, deterministic)
}
func (m *GetVendorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVendorRequest.Merge(m, src)
}
func (m *GetVendorRequest) XXX_Size() int {
	return xxx_messageInfo_GetVendorRequest.Size(m)
}
func (m *GetVendorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVendorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVendorRequest proto.InternalMessageInfo

func (m *GetVendorRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetVendorResponse struct {
	Vendor               *Vendor  `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVendorResponse) Reset()         { *m = GetVendorResponse{} }
func (m *GetVendorResponse) String() string { return proto.CompactTextString(m) }
func (*GetVendorResponse) ProtoMessage()    {}
func (*GetVendorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62c6bb5a724124b7, []int{6}
}

func (m *GetVendorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVendorResponse.Unmarshal(m, b)
}
func (m *GetVendorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVendorResponse.Marshal(b, m, deterministic)
}
func (m *GetVendorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVendorResponse.Merge(m, src)
}
func (m *GetVendorResponse) XXX_Size() int {
	return xxx_messageInfo_GetVendorResponse.Size(m)
}
func (m *GetVendorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVendorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVendorResponse proto.InternalMessageInfo

func (m *GetVendorResponse) GetVendor() *Vendor {
	if m != nil {
		return m.Vendor
	}
	return nil
}

type GetAllVendorsRequest struct {
	Page                 uint64   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit                uint64   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllVendorsRequest) Reset()         { *m = GetAllVendorsRequest{} }
func (m *GetAllVendorsRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllVendorsRequest) ProtoMessage()    {}
func (*GetAllVendorsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62c6bb5a724124b7, []int{7}
}

func (m *GetAllVendorsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllVendorsRequest.Unmarshal(m, b)
}
func (m *GetAllVendorsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllVendorsRequest.Marshal(b, m, deterministic)
}
func (m *GetAllVendorsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllVendorsRequest.Merge(m, src)
}
func (m *GetAllVendorsRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllVendorsRequest.Size(m)
}
func (m *GetAllVendorsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllVendorsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllVendorsRequest proto.InternalMessageInfo

func (m *GetAllVendorsRequest) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAllVendorsRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type GetAllVendorsResponse struct {
	Vendor               []*Vendor `protobuf:"bytes,1,rep,name=vendor,proto3" json:"vendor,omitempty"`
	Count                uint64    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetAllVendorsResponse) Reset()         { *m = GetAllVendorsResponse{} }
func (m *GetAllVendorsResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllVendorsResponse) ProtoMessage()    {}
func (*GetAllVendorsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62c6bb5a724124b7, []int{8}
}

func (m *GetAllVendorsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllVendorsResponse.Unmarshal(m, b)
}
func (m *GetAllVendorsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllVendorsResponse.Marshal(b, m, deterministic)
}
func (m *GetAllVendorsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllVendorsResponse.Merge(m, src)
}
func (m *GetAllVendorsResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllVendorsResponse.Size(m)
}
func (m *GetAllVendorsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllVendorsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllVendorsResponse proto.InternalMessageInfo

func (m *GetAllVendorsResponse) GetVendor() []*Vendor {
	if m != nil {
		return m.Vendor
	}
	return nil
}

func (m *GetAllVendorsResponse) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ExistsVendorRequest struct {
	Phone                string   `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExistsVendorRequest) Reset()         { *m = ExistsVendorRequest{} }
func (m *ExistsVendorRequest) String() string { return proto.CompactTextString(m) }
func (*ExistsVendorRequest) ProtoMessage()    {}
func (*ExistsVendorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62c6bb5a724124b7, []int{9}
}

func (m *ExistsVendorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistsVendorRequest.Unmarshal(m, b)
}
func (m *ExistsVendorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistsVendorRequest.Marshal(b, m, deterministic)
}
func (m *ExistsVendorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistsVendorRequest.Merge(m, src)
}
func (m *ExistsVendorRequest) XXX_Size() int {
	return xxx_messageInfo_ExistsVendorRequest.Size(m)
}
func (m *ExistsVendorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistsVendorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExistsVendorRequest proto.InternalMessageInfo

func (m *ExistsVendorRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type ExistsVendorResponse struct {
	Exists               bool     `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExistsVendorResponse) Reset()         { *m = ExistsVendorResponse{} }
func (m *ExistsVendorResponse) String() string { return proto.CompactTextString(m) }
func (*ExistsVendorResponse) ProtoMessage()    {}
func (*ExistsVendorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62c6bb5a724124b7, []int{10}
}

func (m *ExistsVendorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistsVendorResponse.Unmarshal(m, b)
}
func (m *ExistsVendorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistsVendorResponse.Marshal(b, m, deterministic)
}
func (m *ExistsVendorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistsVendorResponse.Merge(m, src)
}
func (m *ExistsVendorResponse) XXX_Size() int {
	return xxx_messageInfo_ExistsVendorResponse.Size(m)
}
func (m *ExistsVendorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistsVendorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExistsVendorResponse proto.InternalMessageInfo

func (m *ExistsVendorResponse) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

func init() {
	proto.RegisterType((*CreateVendorRequest)(nil), "genproto.CreateVendorRequest")
	proto.RegisterType((*CreateVendorResponse)(nil), "genproto.CreateVendorResponse")
	proto.RegisterType((*UpdateVendorRequest)(nil), "genproto.UpdateVendorRequest")
	proto.RegisterType((*UpdateVendorResponse)(nil), "genproto.UpdateVendorResponse")
	proto.RegisterType((*DeleteVendorRequest)(nil), "genproto.DeleteVendorRequest")
	proto.RegisterType((*GetVendorRequest)(nil), "genproto.GetVendorRequest")
	proto.RegisterType((*GetVendorResponse)(nil), "genproto.GetVendorResponse")
	proto.RegisterType((*GetAllVendorsRequest)(nil), "genproto.GetAllVendorsRequest")
	proto.RegisterType((*GetAllVendorsResponse)(nil), "genproto.GetAllVendorsResponse")
	proto.RegisterType((*ExistsVendorRequest)(nil), "genproto.ExistsVendorRequest")
	proto.RegisterType((*ExistsVendorResponse)(nil), "genproto.ExistsVendorResponse")
}

func init() { proto.RegisterFile("vendor_service.proto", fileDescriptor_62c6bb5a724124b7) }

var fileDescriptor_62c6bb5a724124b7 = []byte{
	// 424 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xdf, 0xcf, 0xd2, 0x30,
	0x14, 0xdd, 0xc7, 0xf7, 0x7d, 0x04, 0xae, 0x60, 0xb0, 0x1b, 0x48, 0x46, 0x44, 0xd3, 0xc4, 0x84,
	0xc4, 0x64, 0x24, 0xf8, 0x6c, 0xc0, 0x1f, 0xc8, 0xa3, 0xc9, 0x8c, 0x9a, 0xf8, 0x62, 0x80, 0x5d,
	0xe7, 0x92, 0xb1, 0xce, 0xb5, 0x23, 0xfa, 0x17, 0xfb, 0x6f, 0x18, 0xda, 0x6d, 0x74, 0x58, 0x48,
	0x88, 0x6f, 0xbd, 0xf7, 0x9c, 0x9e, 0x9e, 0xdd, 0x9e, 0x0e, 0x9c, 0x3d, 0x26, 0x01, 0xcb, 0xbe,
	0x71, 0xcc, 0xf6, 0xd1, 0x16, 0xbd, 0x34, 0x63, 0x82, 0x91, 0x56, 0x88, 0x89, 0x5c, 0xb9, 0x1d,
	0x85, 0xab, 0xbe, 0x3b, 0x0a, 0x19, 0x0b, 0x63, 0x9c, 0xca, 0x6a, 0x93, 0x7f, 0x9f, 0xe2, 0x2e,
	0x15, 0xbf, 0x15, 0x48, 0xe7, 0x60, 0xbf, 0xcd, 0x70, 0x2d, 0xf0, 0xb3, 0xdc, 0xe2, 0xe3, 0xcf,
	0x1c, 0xb9, 0x20, 0x13, 0x68, 0x2a, 0x8d, 0xe1, 0xcd, 0xb3, 0x9b, 0xc9, 0x83, 0x59, 0xcf, 0x2b,
	0xc5, 0xbd, 0x82, 0x58, 0xe0, 0x74, 0x01, 0x4e, 0x5d, 0x80, 0xa7, 0x2c, 0xe1, 0x78, 0x85, 0xc2,
	0x1c, 0xec, 0x4f, 0x69, 0xf0, 0x7f, 0x16, 0xea, 0x02, 0x57, 0x5b, 0x78, 0x0e, 0xf6, 0x3b, 0x8c,
	0xf1, 0xd4, 0xc2, 0x43, 0x68, 0x44, 0x81, 0xdc, 0xdc, 0xf6, 0x1b, 0x51, 0x40, 0x29, 0xf4, 0x56,
	0x28, 0x2e, 0x73, 0x5e, 0xc1, 0x23, 0x8d, 0x73, 0xb5, 0x93, 0x05, 0x38, 0x2b, 0x14, 0xaf, 0xe3,
	0x58, 0xf5, 0x79, 0x79, 0x0c, 0x81, 0xbb, 0x74, 0x1d, 0xa2, 0xdc, 0x7f, 0xe7, 0xcb, 0x35, 0x71,
	0xe0, 0x3e, 0x8e, 0x76, 0x91, 0x18, 0x36, 0x64, 0x53, 0x15, 0xf4, 0x0b, 0xf4, 0x4f, 0x14, 0x0c,
	0x26, 0x6e, 0x2f, 0x99, 0x38, 0x08, 0x6f, 0x59, 0x9e, 0x54, 0xc2, 0xb2, 0xa0, 0x2f, 0xc0, 0x5e,
	0xfe, 0x8a, 0xb8, 0xe0, 0xf5, 0x01, 0x38, 0x70, 0x9f, 0xfe, 0x60, 0x09, 0x16, 0x33, 0x50, 0x05,
	0xf5, 0xc0, 0xa9, 0x93, 0x0b, 0x13, 0x03, 0x68, 0xa2, 0xec, 0x4b, 0x7a, 0xcb, 0x2f, 0xaa, 0xd9,
	0x9f, 0x5b, 0xe8, 0x2a, 0xea, 0x47, 0x15, 0x6a, 0xf2, 0x01, 0x3a, 0x7a, 0xb0, 0xc8, 0x93, 0xa3,
	0x5d, 0x43, 0x62, 0xdd, 0xf1, 0x39, 0x58, 0x1d, 0x4c, 0xad, 0x83, 0xa0, 0x1e, 0x13, 0x5d, 0xd0,
	0x90, 0x3f, 0x5d, 0xd0, 0x94, 0x2e, 0x6a, 0x91, 0x15, 0x74, 0xf4, 0xd4, 0xe8, 0x82, 0x86, 0x34,
	0xb9, 0x03, 0x4f, 0x3d, 0x44, 0xaf, 0x7c, 0x88, 0xde, 0xf2, 0xf0, 0x10, 0xa9, 0x45, 0xde, 0x43,
	0xbb, 0xca, 0x0c, 0x71, 0x8f, 0x2a, 0xa7, 0x61, 0x73, 0x47, 0x46, 0xac, 0x32, 0xe4, 0x43, 0xb7,
	0x76, 0xf5, 0x64, 0x5c, 0xe3, 0xff, 0x93, 0x2a, 0xf7, 0xe9, 0x59, 0x5c, 0x9f, 0x9a, 0x7e, 0x91,
	0xfa, 0x47, 0x1a, 0xd2, 0xa0, 0x4f, 0xcd, 0x74, 0xff, 0xd4, 0x7a, 0xf3, 0xf8, 0x6b, 0xbf, 0xa4,
	0x4c, 0x73, 0x8e, 0xd5, 0x5f, 0x6c, 0xd3, 0x94, 0xbd, 0x97, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff,
	0x4b, 0xae, 0x70, 0x09, 0xde, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VendorServiceClient is the client API for VendorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VendorServiceClient interface {
	CreateVendor(ctx context.Context, in *CreateVendorRequest, opts ...grpc.CallOption) (*CreateVendorResponse, error)
	UpdateVendor(ctx context.Context, in *UpdateVendorRequest, opts ...grpc.CallOption) (*UpdateVendorResponse, error)
	DeleteVendor(ctx context.Context, in *DeleteVendorRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetVendor(ctx context.Context, in *GetVendorRequest, opts ...grpc.CallOption) (*GetVendorResponse, error)
	GetAllVendors(ctx context.Context, in *GetAllVendorsRequest, opts ...grpc.CallOption) (*GetAllVendorsResponse, error)
	ExistsVendor(ctx context.Context, in *ExistsVendorRequest, opts ...grpc.CallOption) (*ExistsVendorResponse, error)
}

type vendorServiceClient struct {
	cc *grpc.ClientConn
}

func NewVendorServiceClient(cc *grpc.ClientConn) VendorServiceClient {
	return &vendorServiceClient{cc}
}

func (c *vendorServiceClient) CreateVendor(ctx context.Context, in *CreateVendorRequest, opts ...grpc.CallOption) (*CreateVendorResponse, error) {
	out := new(CreateVendorResponse)
	err := c.cc.Invoke(ctx, "/genproto.VendorService/CreateVendor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vendorServiceClient) UpdateVendor(ctx context.Context, in *UpdateVendorRequest, opts ...grpc.CallOption) (*UpdateVendorResponse, error) {
	out := new(UpdateVendorResponse)
	err := c.cc.Invoke(ctx, "/genproto.VendorService/UpdateVendor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vendorServiceClient) DeleteVendor(ctx context.Context, in *DeleteVendorRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.VendorService/DeleteVendor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vendorServiceClient) GetVendor(ctx context.Context, in *GetVendorRequest, opts ...grpc.CallOption) (*GetVendorResponse, error) {
	out := new(GetVendorResponse)
	err := c.cc.Invoke(ctx, "/genproto.VendorService/GetVendor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vendorServiceClient) GetAllVendors(ctx context.Context, in *GetAllVendorsRequest, opts ...grpc.CallOption) (*GetAllVendorsResponse, error) {
	out := new(GetAllVendorsResponse)
	err := c.cc.Invoke(ctx, "/genproto.VendorService/GetAllVendors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vendorServiceClient) ExistsVendor(ctx context.Context, in *ExistsVendorRequest, opts ...grpc.CallOption) (*ExistsVendorResponse, error) {
	out := new(ExistsVendorResponse)
	err := c.cc.Invoke(ctx, "/genproto.VendorService/ExistsVendor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VendorServiceServer is the server API for VendorService service.
type VendorServiceServer interface {
	CreateVendor(context.Context, *CreateVendorRequest) (*CreateVendorResponse, error)
	UpdateVendor(context.Context, *UpdateVendorRequest) (*UpdateVendorResponse, error)
	DeleteVendor(context.Context, *DeleteVendorRequest) (*empty.Empty, error)
	GetVendor(context.Context, *GetVendorRequest) (*GetVendorResponse, error)
	GetAllVendors(context.Context, *GetAllVendorsRequest) (*GetAllVendorsResponse, error)
	ExistsVendor(context.Context, *ExistsVendorRequest) (*ExistsVendorResponse, error)
}

// UnimplementedVendorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVendorServiceServer struct {
}

func (*UnimplementedVendorServiceServer) CreateVendor(ctx context.Context, req *CreateVendorRequest) (*CreateVendorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVendor not implemented")
}
func (*UnimplementedVendorServiceServer) UpdateVendor(ctx context.Context, req *UpdateVendorRequest) (*UpdateVendorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateVendor not implemented")
}
func (*UnimplementedVendorServiceServer) DeleteVendor(ctx context.Context, req *DeleteVendorRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVendor not implemented")
}
func (*UnimplementedVendorServiceServer) GetVendor(ctx context.Context, req *GetVendorRequest) (*GetVendorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVendor not implemented")
}
func (*UnimplementedVendorServiceServer) GetAllVendors(ctx context.Context, req *GetAllVendorsRequest) (*GetAllVendorsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllVendors not implemented")
}
func (*UnimplementedVendorServiceServer) ExistsVendor(ctx context.Context, req *ExistsVendorRequest) (*ExistsVendorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExistsVendor not implemented")
}

func RegisterVendorServiceServer(s *grpc.Server, srv VendorServiceServer) {
	s.RegisterService(&_VendorService_serviceDesc, srv)
}

func _VendorService_CreateVendor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVendorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VendorServiceServer).CreateVendor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.VendorService/CreateVendor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VendorServiceServer).CreateVendor(ctx, req.(*CreateVendorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VendorService_UpdateVendor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateVendorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VendorServiceServer).UpdateVendor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.VendorService/UpdateVendor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VendorServiceServer).UpdateVendor(ctx, req.(*UpdateVendorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VendorService_DeleteVendor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVendorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VendorServiceServer).DeleteVendor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.VendorService/DeleteVendor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VendorServiceServer).DeleteVendor(ctx, req.(*DeleteVendorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VendorService_GetVendor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVendorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VendorServiceServer).GetVendor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.VendorService/GetVendor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VendorServiceServer).GetVendor(ctx, req.(*GetVendorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VendorService_GetAllVendors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllVendorsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VendorServiceServer).GetAllVendors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.VendorService/GetAllVendors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VendorServiceServer).GetAllVendors(ctx, req.(*GetAllVendorsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VendorService_ExistsVendor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExistsVendorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VendorServiceServer).ExistsVendor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.VendorService/ExistsVendor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VendorServiceServer).ExistsVendor(ctx, req.(*ExistsVendorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VendorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.VendorService",
	HandlerType: (*VendorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateVendor",
			Handler:    _VendorService_CreateVendor_Handler,
		},
		{
			MethodName: "UpdateVendor",
			Handler:    _VendorService_UpdateVendor_Handler,
		},
		{
			MethodName: "DeleteVendor",
			Handler:    _VendorService_DeleteVendor_Handler,
		},
		{
			MethodName: "GetVendor",
			Handler:    _VendorService_GetVendor_Handler,
		},
		{
			MethodName: "GetAllVendors",
			Handler:    _VendorService_GetAllVendors_Handler,
		},
		{
			MethodName: "ExistsVendor",
			Handler:    _VendorService_ExistsVendor_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vendor_service.proto",
}
