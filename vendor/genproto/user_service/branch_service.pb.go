// Code generated by protoc-gen-go. DO NOT EDIT.
// source: branch_service.proto

package user_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateBranchRequest struct {
	Branch               *Branch  `protobuf:"bytes,1,opt,name=branch,proto3" json:"branch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateBranchRequest) Reset()         { *m = CreateBranchRequest{} }
func (m *CreateBranchRequest) String() string { return proto.CompactTextString(m) }
func (*CreateBranchRequest) ProtoMessage()    {}
func (*CreateBranchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e611f01043432822, []int{0}
}

func (m *CreateBranchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBranchRequest.Unmarshal(m, b)
}
func (m *CreateBranchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBranchRequest.Marshal(b, m, deterministic)
}
func (m *CreateBranchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBranchRequest.Merge(m, src)
}
func (m *CreateBranchRequest) XXX_Size() int {
	return xxx_messageInfo_CreateBranchRequest.Size(m)
}
func (m *CreateBranchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBranchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBranchRequest proto.InternalMessageInfo

func (m *CreateBranchRequest) GetBranch() *Branch {
	if m != nil {
		return m.Branch
	}
	return nil
}

type CreateBranchResponse struct {
	Branch               *Branch  `protobuf:"bytes,1,opt,name=branch,proto3" json:"branch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateBranchResponse) Reset()         { *m = CreateBranchResponse{} }
func (m *CreateBranchResponse) String() string { return proto.CompactTextString(m) }
func (*CreateBranchResponse) ProtoMessage()    {}
func (*CreateBranchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e611f01043432822, []int{1}
}

func (m *CreateBranchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBranchResponse.Unmarshal(m, b)
}
func (m *CreateBranchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBranchResponse.Marshal(b, m, deterministic)
}
func (m *CreateBranchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBranchResponse.Merge(m, src)
}
func (m *CreateBranchResponse) XXX_Size() int {
	return xxx_messageInfo_CreateBranchResponse.Size(m)
}
func (m *CreateBranchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBranchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBranchResponse proto.InternalMessageInfo

func (m *CreateBranchResponse) GetBranch() *Branch {
	if m != nil {
		return m.Branch
	}
	return nil
}

type GetBranchRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBranchRequest) Reset()         { *m = GetBranchRequest{} }
func (m *GetBranchRequest) String() string { return proto.CompactTextString(m) }
func (*GetBranchRequest) ProtoMessage()    {}
func (*GetBranchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e611f01043432822, []int{2}
}

func (m *GetBranchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBranchRequest.Unmarshal(m, b)
}
func (m *GetBranchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBranchRequest.Marshal(b, m, deterministic)
}
func (m *GetBranchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBranchRequest.Merge(m, src)
}
func (m *GetBranchRequest) XXX_Size() int {
	return xxx_messageInfo_GetBranchRequest.Size(m)
}
func (m *GetBranchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBranchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBranchRequest proto.InternalMessageInfo

func (m *GetBranchRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetBranchResponse struct {
	Branch               *Branch  `protobuf:"bytes,1,opt,name=branch,proto3" json:"branch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBranchResponse) Reset()         { *m = GetBranchResponse{} }
func (m *GetBranchResponse) String() string { return proto.CompactTextString(m) }
func (*GetBranchResponse) ProtoMessage()    {}
func (*GetBranchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e611f01043432822, []int{3}
}

func (m *GetBranchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBranchResponse.Unmarshal(m, b)
}
func (m *GetBranchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBranchResponse.Marshal(b, m, deterministic)
}
func (m *GetBranchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBranchResponse.Merge(m, src)
}
func (m *GetBranchResponse) XXX_Size() int {
	return xxx_messageInfo_GetBranchResponse.Size(m)
}
func (m *GetBranchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBranchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBranchResponse proto.InternalMessageInfo

func (m *GetBranchResponse) GetBranch() *Branch {
	if m != nil {
		return m.Branch
	}
	return nil
}

type GetAllBranchesRequest struct {
	Page                 uint64   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit                uint64   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	ShipperId            string   `protobuf:"bytes,3,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllBranchesRequest) Reset()         { *m = GetAllBranchesRequest{} }
func (m *GetAllBranchesRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllBranchesRequest) ProtoMessage()    {}
func (*GetAllBranchesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e611f01043432822, []int{4}
}

func (m *GetAllBranchesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllBranchesRequest.Unmarshal(m, b)
}
func (m *GetAllBranchesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllBranchesRequest.Marshal(b, m, deterministic)
}
func (m *GetAllBranchesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllBranchesRequest.Merge(m, src)
}
func (m *GetAllBranchesRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllBranchesRequest.Size(m)
}
func (m *GetAllBranchesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllBranchesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllBranchesRequest proto.InternalMessageInfo

func (m *GetAllBranchesRequest) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAllBranchesRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetAllBranchesRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

type GetAllBranchesResponse struct {
	Branches             []*Branch `protobuf:"bytes,1,rep,name=branches,proto3" json:"branches,omitempty"`
	Count                uint64    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetAllBranchesResponse) Reset()         { *m = GetAllBranchesResponse{} }
func (m *GetAllBranchesResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllBranchesResponse) ProtoMessage()    {}
func (*GetAllBranchesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e611f01043432822, []int{5}
}

func (m *GetAllBranchesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllBranchesResponse.Unmarshal(m, b)
}
func (m *GetAllBranchesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllBranchesResponse.Marshal(b, m, deterministic)
}
func (m *GetAllBranchesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllBranchesResponse.Merge(m, src)
}
func (m *GetAllBranchesResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllBranchesResponse.Size(m)
}
func (m *GetAllBranchesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllBranchesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllBranchesResponse proto.InternalMessageInfo

func (m *GetAllBranchesResponse) GetBranches() []*Branch {
	if m != nil {
		return m.Branches
	}
	return nil
}

func (m *GetAllBranchesResponse) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type UpdateBranchRequest struct {
	Branch               *Branch  `protobuf:"bytes,1,opt,name=branch,proto3" json:"branch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateBranchRequest) Reset()         { *m = UpdateBranchRequest{} }
func (m *UpdateBranchRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateBranchRequest) ProtoMessage()    {}
func (*UpdateBranchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e611f01043432822, []int{6}
}

func (m *UpdateBranchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBranchRequest.Unmarshal(m, b)
}
func (m *UpdateBranchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBranchRequest.Marshal(b, m, deterministic)
}
func (m *UpdateBranchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBranchRequest.Merge(m, src)
}
func (m *UpdateBranchRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateBranchRequest.Size(m)
}
func (m *UpdateBranchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBranchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBranchRequest proto.InternalMessageInfo

func (m *UpdateBranchRequest) GetBranch() *Branch {
	if m != nil {
		return m.Branch
	}
	return nil
}

type UpdateBranchResponse struct {
	Branch               *Branch  `protobuf:"bytes,1,opt,name=branch,proto3" json:"branch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateBranchResponse) Reset()         { *m = UpdateBranchResponse{} }
func (m *UpdateBranchResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateBranchResponse) ProtoMessage()    {}
func (*UpdateBranchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e611f01043432822, []int{7}
}

func (m *UpdateBranchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBranchResponse.Unmarshal(m, b)
}
func (m *UpdateBranchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBranchResponse.Marshal(b, m, deterministic)
}
func (m *UpdateBranchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBranchResponse.Merge(m, src)
}
func (m *UpdateBranchResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateBranchResponse.Size(m)
}
func (m *UpdateBranchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBranchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBranchResponse proto.InternalMessageInfo

func (m *UpdateBranchResponse) GetBranch() *Branch {
	if m != nil {
		return m.Branch
	}
	return nil
}

type DeleteBranchRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteBranchRequest) Reset()         { *m = DeleteBranchRequest{} }
func (m *DeleteBranchRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteBranchRequest) ProtoMessage()    {}
func (*DeleteBranchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e611f01043432822, []int{8}
}

func (m *DeleteBranchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBranchRequest.Unmarshal(m, b)
}
func (m *DeleteBranchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBranchRequest.Marshal(b, m, deterministic)
}
func (m *DeleteBranchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBranchRequest.Merge(m, src)
}
func (m *DeleteBranchRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteBranchRequest.Size(m)
}
func (m *DeleteBranchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBranchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBranchRequest proto.InternalMessageInfo

func (m *DeleteBranchRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ExistsBranchRequest struct {
	Phone                string   `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExistsBranchRequest) Reset()         { *m = ExistsBranchRequest{} }
func (m *ExistsBranchRequest) String() string { return proto.CompactTextString(m) }
func (*ExistsBranchRequest) ProtoMessage()    {}
func (*ExistsBranchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e611f01043432822, []int{9}
}

func (m *ExistsBranchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistsBranchRequest.Unmarshal(m, b)
}
func (m *ExistsBranchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistsBranchRequest.Marshal(b, m, deterministic)
}
func (m *ExistsBranchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistsBranchRequest.Merge(m, src)
}
func (m *ExistsBranchRequest) XXX_Size() int {
	return xxx_messageInfo_ExistsBranchRequest.Size(m)
}
func (m *ExistsBranchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistsBranchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExistsBranchRequest proto.InternalMessageInfo

func (m *ExistsBranchRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type ExistsBranchResponse struct {
	Exists               bool     `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExistsBranchResponse) Reset()         { *m = ExistsBranchResponse{} }
func (m *ExistsBranchResponse) String() string { return proto.CompactTextString(m) }
func (*ExistsBranchResponse) ProtoMessage()    {}
func (*ExistsBranchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e611f01043432822, []int{10}
}

func (m *ExistsBranchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistsBranchResponse.Unmarshal(m, b)
}
func (m *ExistsBranchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistsBranchResponse.Marshal(b, m, deterministic)
}
func (m *ExistsBranchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistsBranchResponse.Merge(m, src)
}
func (m *ExistsBranchResponse) XXX_Size() int {
	return xxx_messageInfo_ExistsBranchResponse.Size(m)
}
func (m *ExistsBranchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistsBranchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExistsBranchResponse proto.InternalMessageInfo

func (m *ExistsBranchResponse) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

type GetNearestBranchRequest struct {
	Location             *Location `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetNearestBranchRequest) Reset()         { *m = GetNearestBranchRequest{} }
func (m *GetNearestBranchRequest) String() string { return proto.CompactTextString(m) }
func (*GetNearestBranchRequest) ProtoMessage()    {}
func (*GetNearestBranchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e611f01043432822, []int{11}
}

func (m *GetNearestBranchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNearestBranchRequest.Unmarshal(m, b)
}
func (m *GetNearestBranchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNearestBranchRequest.Marshal(b, m, deterministic)
}
func (m *GetNearestBranchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNearestBranchRequest.Merge(m, src)
}
func (m *GetNearestBranchRequest) XXX_Size() int {
	return xxx_messageInfo_GetNearestBranchRequest.Size(m)
}
func (m *GetNearestBranchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNearestBranchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNearestBranchRequest proto.InternalMessageInfo

func (m *GetNearestBranchRequest) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

type GetNearestBranchResponse struct {
	Branches             []*Branch `protobuf:"bytes,1,rep,name=branches,proto3" json:"branches,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetNearestBranchResponse) Reset()         { *m = GetNearestBranchResponse{} }
func (m *GetNearestBranchResponse) String() string { return proto.CompactTextString(m) }
func (*GetNearestBranchResponse) ProtoMessage()    {}
func (*GetNearestBranchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e611f01043432822, []int{12}
}

func (m *GetNearestBranchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNearestBranchResponse.Unmarshal(m, b)
}
func (m *GetNearestBranchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNearestBranchResponse.Marshal(b, m, deterministic)
}
func (m *GetNearestBranchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNearestBranchResponse.Merge(m, src)
}
func (m *GetNearestBranchResponse) XXX_Size() int {
	return xxx_messageInfo_GetNearestBranchResponse.Size(m)
}
func (m *GetNearestBranchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNearestBranchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNearestBranchResponse proto.InternalMessageInfo

func (m *GetNearestBranchResponse) GetBranches() []*Branch {
	if m != nil {
		return m.Branches
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateBranchRequest)(nil), "genproto.CreateBranchRequest")
	proto.RegisterType((*CreateBranchResponse)(nil), "genproto.CreateBranchResponse")
	proto.RegisterType((*GetBranchRequest)(nil), "genproto.GetBranchRequest")
	proto.RegisterType((*GetBranchResponse)(nil), "genproto.GetBranchResponse")
	proto.RegisterType((*GetAllBranchesRequest)(nil), "genproto.GetAllBranchesRequest")
	proto.RegisterType((*GetAllBranchesResponse)(nil), "genproto.GetAllBranchesResponse")
	proto.RegisterType((*UpdateBranchRequest)(nil), "genproto.UpdateBranchRequest")
	proto.RegisterType((*UpdateBranchResponse)(nil), "genproto.UpdateBranchResponse")
	proto.RegisterType((*DeleteBranchRequest)(nil), "genproto.DeleteBranchRequest")
	proto.RegisterType((*ExistsBranchRequest)(nil), "genproto.ExistsBranchRequest")
	proto.RegisterType((*ExistsBranchResponse)(nil), "genproto.ExistsBranchResponse")
	proto.RegisterType((*GetNearestBranchRequest)(nil), "genproto.GetNearestBranchRequest")
	proto.RegisterType((*GetNearestBranchResponse)(nil), "genproto.GetNearestBranchResponse")
}

func init() { proto.RegisterFile("branch_service.proto", fileDescriptor_e611f01043432822) }

var fileDescriptor_e611f01043432822 = []byte{
	// 516 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x61, 0x6f, 0xd3, 0x30,
	0x10, 0x6d, 0xbb, 0xae, 0x6a, 0x8f, 0x32, 0x0d, 0x37, 0xeb, 0xa2, 0x4c, 0x83, 0x62, 0x09, 0x69,
	0x12, 0x28, 0x95, 0xc6, 0x67, 0x04, 0x0c, 0x46, 0x99, 0x84, 0x98, 0x14, 0xb4, 0x2f, 0x80, 0x34,
	0xd2, 0xe6, 0x68, 0x23, 0x65, 0x49, 0x88, 0x5d, 0x04, 0xbf, 0x90, 0xbf, 0x85, 0x6a, 0x3b, 0xa9,
	0x9d, 0xb9, 0x48, 0x65, 0xdf, 0x72, 0x77, 0xcf, 0xef, 0x9e, 0xe3, 0x77, 0x07, 0xce, 0xb4, 0x08,
	0xd3, 0xd9, 0xe2, 0x9a, 0x61, 0xf1, 0x33, 0x9e, 0xa1, 0x9f, 0x17, 0x19, 0xcf, 0x48, 0x77, 0x8e,
	0xa9, 0xf8, 0xf2, 0xfa, 0xb2, 0x2e, 0xf3, 0xde, 0xd1, 0x3c, 0xcb, 0xe6, 0x09, 0x8e, 0x45, 0x34,
	0x5d, 0x7e, 0x1f, 0xe3, 0x4d, 0xce, 0x7f, 0xcb, 0x22, 0x7d, 0x09, 0x83, 0x37, 0x05, 0x86, 0x1c,
	0xcf, 0xc4, 0x91, 0x00, 0x7f, 0x2c, 0x91, 0x71, 0x72, 0x02, 0x1d, 0xc9, 0xe1, 0x36, 0x47, 0xcd,
	0x93, 0x7b, 0xa7, 0xfb, 0x7e, 0x49, 0xee, 0x2b, 0xa0, 0xaa, 0xd3, 0x57, 0xe0, 0x98, 0x04, 0x2c,
	0xcf, 0x52, 0x86, 0x5b, 0x30, 0x50, 0xd8, 0x9f, 0x20, 0x37, 0xfb, 0xef, 0x41, 0x2b, 0x8e, 0xc4,
	0xc9, 0x5e, 0xd0, 0x8a, 0x23, 0xfa, 0x02, 0x1e, 0x68, 0x98, 0xad, 0x5b, 0x7c, 0x83, 0x83, 0x09,
	0xf2, 0xd7, 0x49, 0x22, 0xf3, 0xc8, 0xca, 0x3e, 0x04, 0xda, 0x79, 0x38, 0x47, 0x41, 0xd0, 0x0e,
	0xc4, 0x37, 0x71, 0x60, 0x37, 0x89, 0x6f, 0x62, 0xee, 0xb6, 0x44, 0x52, 0x06, 0xe4, 0x18, 0x80,
	0x2d, 0xe2, 0x3c, 0xc7, 0xe2, 0x3a, 0x8e, 0xdc, 0x1d, 0xa1, 0xac, 0xa7, 0x32, 0x17, 0x11, 0xfd,
	0x0a, 0xc3, 0x7a, 0x07, 0xa5, 0xf2, 0x19, 0x74, 0xa7, 0x2a, 0xe7, 0x36, 0x47, 0x3b, 0x56, 0x9d,
	0x15, 0x62, 0xd5, 0x7c, 0x96, 0x2d, 0xd3, 0xaa, 0xb9, 0x08, 0x56, 0xaf, 0x74, 0x95, 0x47, 0x77,
	0x7b, 0x25, 0x93, 0x60, 0xeb, 0x5f, 0xf8, 0x04, 0x06, 0x6f, 0x31, 0xc1, 0xba, 0x84, 0xfa, 0x43,
	0x3d, 0x85, 0xc1, 0xf9, 0xaf, 0x98, 0x71, 0x66, 0xc2, 0x1c, 0xd8, 0xcd, 0x17, 0x59, 0x8a, 0x0a,
	0x29, 0x03, 0xea, 0x83, 0x63, 0x82, 0x95, 0xaa, 0x21, 0x74, 0x50, 0xe4, 0x05, 0xbc, 0x1b, 0xa8,
	0x88, 0x5e, 0xc0, 0xe1, 0x04, 0xf9, 0x47, 0x0c, 0x0b, 0x64, 0x35, 0xc3, 0xf8, 0xd0, 0x4d, 0xb2,
	0x59, 0xc8, 0xe3, 0x2c, 0x55, 0x57, 0x21, 0xeb, 0xab, 0x7c, 0x50, 0x95, 0xa0, 0xc2, 0xd0, 0xf7,
	0xe0, 0xde, 0xa6, 0xfa, 0x9f, 0x17, 0x3b, 0xfd, 0xd3, 0x86, 0xfb, 0x32, 0xf9, 0x49, 0x8e, 0x23,
	0xb9, 0x84, 0xbe, 0x3e, 0x12, 0xe4, 0x78, 0x7d, 0xda, 0x32, 0x6b, 0xde, 0xc3, 0x4d, 0x65, 0x29,
	0x87, 0x36, 0xc8, 0x3b, 0xe8, 0x55, 0xee, 0x27, 0xde, 0x1a, 0x5e, 0x1f, 0x1b, 0xef, 0xc8, 0x5a,
	0xab, 0x78, 0xae, 0x60, 0xcf, 0x34, 0x29, 0x79, 0x64, 0x1c, 0xb8, 0x3d, 0x20, 0xde, 0x68, 0x33,
	0xa0, 0xa2, 0xbd, 0x84, 0xbe, 0x6e, 0x2e, 0xfd, 0xbe, 0x16, 0xd7, 0xea, 0xf7, 0xb5, 0x79, 0x92,
	0x36, 0xc8, 0x04, 0xfa, 0xba, 0xd7, 0x74, 0x42, 0x8b, 0x07, 0xbd, 0xa1, 0x2f, 0x37, 0x9c, 0x5f,
	0x6e, 0x38, 0xff, 0x7c, 0xb5, 0xe1, 0xa4, 0x32, 0xdd, 0x60, 0x3a, 0x91, 0xc5, 0xa5, 0xba, 0x32,
	0x9b, 0x2f, 0x69, 0x83, 0x7c, 0x11, 0xbb, 0xca, 0xb0, 0x0d, 0x79, 0x6c, 0xfc, 0x22, 0x9b, 0x3b,
	0x3d, 0xfa, 0x2f, 0x48, 0x49, 0x7e, 0x76, 0xf8, 0xf9, 0xa0, 0x84, 0x8d, 0x97, 0x0c, 0x8b, 0x72,
	0xbf, 0x4f, 0x3b, 0x22, 0xf7, 0xfc, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb2, 0x74, 0x3a, 0x99,
	0xf8, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BranchServiceClient is the client API for BranchService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BranchServiceClient interface {
	CreateBranch(ctx context.Context, in *CreateBranchRequest, opts ...grpc.CallOption) (*CreateBranchResponse, error)
	GetBranch(ctx context.Context, in *GetBranchRequest, opts ...grpc.CallOption) (*GetBranchResponse, error)
	GetAllBranches(ctx context.Context, in *GetAllBranchesRequest, opts ...grpc.CallOption) (*GetAllBranchesResponse, error)
	UpdateBranch(ctx context.Context, in *UpdateBranchRequest, opts ...grpc.CallOption) (*UpdateBranchResponse, error)
	DeleteBranch(ctx context.Context, in *DeleteBranchRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ExistsBranch(ctx context.Context, in *ExistsBranchRequest, opts ...grpc.CallOption) (*ExistsBranchResponse, error)
	GetNearestBranch(ctx context.Context, in *GetNearestBranchRequest, opts ...grpc.CallOption) (*GetNearestBranchResponse, error)
}

type branchServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBranchServiceClient(cc grpc.ClientConnInterface) BranchServiceClient {
	return &branchServiceClient{cc}
}

func (c *branchServiceClient) CreateBranch(ctx context.Context, in *CreateBranchRequest, opts ...grpc.CallOption) (*CreateBranchResponse, error) {
	out := new(CreateBranchResponse)
	err := c.cc.Invoke(ctx, "/genproto.BranchService/CreateBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *branchServiceClient) GetBranch(ctx context.Context, in *GetBranchRequest, opts ...grpc.CallOption) (*GetBranchResponse, error) {
	out := new(GetBranchResponse)
	err := c.cc.Invoke(ctx, "/genproto.BranchService/GetBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *branchServiceClient) GetAllBranches(ctx context.Context, in *GetAllBranchesRequest, opts ...grpc.CallOption) (*GetAllBranchesResponse, error) {
	out := new(GetAllBranchesResponse)
	err := c.cc.Invoke(ctx, "/genproto.BranchService/GetAllBranches", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *branchServiceClient) UpdateBranch(ctx context.Context, in *UpdateBranchRequest, opts ...grpc.CallOption) (*UpdateBranchResponse, error) {
	out := new(UpdateBranchResponse)
	err := c.cc.Invoke(ctx, "/genproto.BranchService/UpdateBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *branchServiceClient) DeleteBranch(ctx context.Context, in *DeleteBranchRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.BranchService/DeleteBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *branchServiceClient) ExistsBranch(ctx context.Context, in *ExistsBranchRequest, opts ...grpc.CallOption) (*ExistsBranchResponse, error) {
	out := new(ExistsBranchResponse)
	err := c.cc.Invoke(ctx, "/genproto.BranchService/ExistsBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *branchServiceClient) GetNearestBranch(ctx context.Context, in *GetNearestBranchRequest, opts ...grpc.CallOption) (*GetNearestBranchResponse, error) {
	out := new(GetNearestBranchResponse)
	err := c.cc.Invoke(ctx, "/genproto.BranchService/GetNearestBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BranchServiceServer is the server API for BranchService service.
type BranchServiceServer interface {
	CreateBranch(context.Context, *CreateBranchRequest) (*CreateBranchResponse, error)
	GetBranch(context.Context, *GetBranchRequest) (*GetBranchResponse, error)
	GetAllBranches(context.Context, *GetAllBranchesRequest) (*GetAllBranchesResponse, error)
	UpdateBranch(context.Context, *UpdateBranchRequest) (*UpdateBranchResponse, error)
	DeleteBranch(context.Context, *DeleteBranchRequest) (*empty.Empty, error)
	ExistsBranch(context.Context, *ExistsBranchRequest) (*ExistsBranchResponse, error)
	GetNearestBranch(context.Context, *GetNearestBranchRequest) (*GetNearestBranchResponse, error)
}

// UnimplementedBranchServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBranchServiceServer struct {
}

func (*UnimplementedBranchServiceServer) CreateBranch(ctx context.Context, req *CreateBranchRequest) (*CreateBranchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBranch not implemented")
}
func (*UnimplementedBranchServiceServer) GetBranch(ctx context.Context, req *GetBranchRequest) (*GetBranchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBranch not implemented")
}
func (*UnimplementedBranchServiceServer) GetAllBranches(ctx context.Context, req *GetAllBranchesRequest) (*GetAllBranchesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllBranches not implemented")
}
func (*UnimplementedBranchServiceServer) UpdateBranch(ctx context.Context, req *UpdateBranchRequest) (*UpdateBranchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBranch not implemented")
}
func (*UnimplementedBranchServiceServer) DeleteBranch(ctx context.Context, req *DeleteBranchRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBranch not implemented")
}
func (*UnimplementedBranchServiceServer) ExistsBranch(ctx context.Context, req *ExistsBranchRequest) (*ExistsBranchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExistsBranch not implemented")
}
func (*UnimplementedBranchServiceServer) GetNearestBranch(ctx context.Context, req *GetNearestBranchRequest) (*GetNearestBranchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNearestBranch not implemented")
}

func RegisterBranchServiceServer(s *grpc.Server, srv BranchServiceServer) {
	s.RegisterService(&_BranchService_serviceDesc, srv)
}

func _BranchService_CreateBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBranchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BranchServiceServer).CreateBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.BranchService/CreateBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BranchServiceServer).CreateBranch(ctx, req.(*CreateBranchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BranchService_GetBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBranchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BranchServiceServer).GetBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.BranchService/GetBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BranchServiceServer).GetBranch(ctx, req.(*GetBranchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BranchService_GetAllBranches_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllBranchesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BranchServiceServer).GetAllBranches(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.BranchService/GetAllBranches",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BranchServiceServer).GetAllBranches(ctx, req.(*GetAllBranchesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BranchService_UpdateBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBranchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BranchServiceServer).UpdateBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.BranchService/UpdateBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BranchServiceServer).UpdateBranch(ctx, req.(*UpdateBranchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BranchService_DeleteBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBranchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BranchServiceServer).DeleteBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.BranchService/DeleteBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BranchServiceServer).DeleteBranch(ctx, req.(*DeleteBranchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BranchService_ExistsBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExistsBranchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BranchServiceServer).ExistsBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.BranchService/ExistsBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BranchServiceServer).ExistsBranch(ctx, req.(*ExistsBranchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BranchService_GetNearestBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNearestBranchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BranchServiceServer).GetNearestBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.BranchService/GetNearestBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BranchServiceServer).GetNearestBranch(ctx, req.(*GetNearestBranchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BranchService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.BranchService",
	HandlerType: (*BranchServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBranch",
			Handler:    _BranchService_CreateBranch_Handler,
		},
		{
			MethodName: "GetBranch",
			Handler:    _BranchService_GetBranch_Handler,
		},
		{
			MethodName: "GetAllBranches",
			Handler:    _BranchService_GetAllBranches_Handler,
		},
		{
			MethodName: "UpdateBranch",
			Handler:    _BranchService_UpdateBranch_Handler,
		},
		{
			MethodName: "DeleteBranch",
			Handler:    _BranchService_DeleteBranch_Handler,
		},
		{
			MethodName: "ExistsBranch",
			Handler:    _BranchService_ExistsBranch_Handler,
		},
		{
			MethodName: "GetNearestBranch",
			Handler:    _BranchService_GetNearestBranch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "branch_service.proto",
}
