// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.6.1
// source: system_user_service.proto

package user_service

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CreateSystemUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemUser *SystemUser `protobuf:"bytes,1,opt,name=system_user,json=systemUser,proto3" json:"system_user,omitempty"`
}

func (x *CreateSystemUserRequest) Reset() {
	*x = CreateSystemUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_user_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSystemUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSystemUserRequest) ProtoMessage() {}

func (x *CreateSystemUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_user_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSystemUserRequest.ProtoReflect.Descriptor instead.
func (*CreateSystemUserRequest) Descriptor() ([]byte, []int) {
	return file_system_user_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSystemUserRequest) GetSystemUser() *SystemUser {
	if x != nil {
		return x.SystemUser
	}
	return nil
}

type CreateSystemUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemUser *SystemUser `protobuf:"bytes,1,opt,name=system_user,json=systemUser,proto3" json:"system_user,omitempty"`
}

func (x *CreateSystemUserResponse) Reset() {
	*x = CreateSystemUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_user_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSystemUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSystemUserResponse) ProtoMessage() {}

func (x *CreateSystemUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_user_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSystemUserResponse.ProtoReflect.Descriptor instead.
func (*CreateSystemUserResponse) Descriptor() ([]byte, []int) {
	return file_system_user_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSystemUserResponse) GetSystemUser() *SystemUser {
	if x != nil {
		return x.SystemUser
	}
	return nil
}

type GetSystemUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSystemUserRequest) Reset() {
	*x = GetSystemUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_user_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemUserRequest) ProtoMessage() {}

func (x *GetSystemUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_user_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemUserRequest.ProtoReflect.Descriptor instead.
func (*GetSystemUserRequest) Descriptor() ([]byte, []int) {
	return file_system_user_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetSystemUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSystemUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemUser *SystemUser `protobuf:"bytes,1,opt,name=system_user,json=systemUser,proto3" json:"system_user,omitempty"`
}

func (x *GetSystemUserResponse) Reset() {
	*x = GetSystemUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_user_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemUserResponse) ProtoMessage() {}

func (x *GetSystemUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_user_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemUserResponse.ProtoReflect.Descriptor instead.
func (*GetSystemUserResponse) Descriptor() ([]byte, []int) {
	return file_system_user_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetSystemUserResponse) GetSystemUser() *SystemUser {
	if x != nil {
		return x.SystemUser
	}
	return nil
}

type GetAllSystemUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit      uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	ShipperId  string `protobuf:"bytes,3,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	UserRoleId string `protobuf:"bytes,4,opt,name=user_role_id,json=userRoleId,proto3" json:"user_role_id,omitempty"`
}

func (x *GetAllSystemUsersRequest) Reset() {
	*x = GetAllSystemUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_user_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllSystemUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllSystemUsersRequest) ProtoMessage() {}

func (x *GetAllSystemUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_user_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllSystemUsersRequest.ProtoReflect.Descriptor instead.
func (*GetAllSystemUsersRequest) Descriptor() ([]byte, []int) {
	return file_system_user_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetAllSystemUsersRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAllSystemUsersRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAllSystemUsersRequest) GetShipperId() string {
	if x != nil {
		return x.ShipperId
	}
	return ""
}

func (x *GetAllSystemUsersRequest) GetUserRoleId() string {
	if x != nil {
		return x.UserRoleId
	}
	return ""
}

type GetAllSystemUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemUsers []*SystemUser `protobuf:"bytes,1,rep,name=system_users,json=systemUsers,proto3" json:"system_users,omitempty"`
	Count       uint64        `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetAllSystemUsersResponse) Reset() {
	*x = GetAllSystemUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_user_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllSystemUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllSystemUsersResponse) ProtoMessage() {}

func (x *GetAllSystemUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_user_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllSystemUsersResponse.ProtoReflect.Descriptor instead.
func (*GetAllSystemUsersResponse) Descriptor() ([]byte, []int) {
	return file_system_user_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllSystemUsersResponse) GetSystemUsers() []*SystemUser {
	if x != nil {
		return x.SystemUsers
	}
	return nil
}

func (x *GetAllSystemUsersResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type UpdateSystemUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemUser *SystemUser `protobuf:"bytes,1,opt,name=system_user,json=systemUser,proto3" json:"system_user,omitempty"`
}

func (x *UpdateSystemUserRequest) Reset() {
	*x = UpdateSystemUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_user_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSystemUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSystemUserRequest) ProtoMessage() {}

func (x *UpdateSystemUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_user_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSystemUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateSystemUserRequest) Descriptor() ([]byte, []int) {
	return file_system_user_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateSystemUserRequest) GetSystemUser() *SystemUser {
	if x != nil {
		return x.SystemUser
	}
	return nil
}

type UpdateSystemUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemUser *SystemUser `protobuf:"bytes,1,opt,name=system_user,json=systemUser,proto3" json:"system_user,omitempty"`
}

func (x *UpdateSystemUserResponse) Reset() {
	*x = UpdateSystemUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_user_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSystemUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSystemUserResponse) ProtoMessage() {}

func (x *UpdateSystemUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_user_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSystemUserResponse.ProtoReflect.Descriptor instead.
func (*UpdateSystemUserResponse) Descriptor() ([]byte, []int) {
	return file_system_user_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateSystemUserResponse) GetSystemUser() *SystemUser {
	if x != nil {
		return x.SystemUser
	}
	return nil
}

type DeleteSystemUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteSystemUserRequest) Reset() {
	*x = DeleteSystemUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_user_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSystemUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSystemUserRequest) ProtoMessage() {}

func (x *DeleteSystemUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_user_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSystemUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteSystemUserRequest) Descriptor() ([]byte, []int) {
	return file_system_user_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteSystemUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ExistsSystemUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *ExistsSystemUserRequest) Reset() {
	*x = ExistsSystemUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_user_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistsSystemUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistsSystemUserRequest) ProtoMessage() {}

func (x *ExistsSystemUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_user_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistsSystemUserRequest.ProtoReflect.Descriptor instead.
func (*ExistsSystemUserRequest) Descriptor() ([]byte, []int) {
	return file_system_user_service_proto_rawDescGZIP(), []int{9}
}

func (x *ExistsSystemUserRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type ExistsSystemUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *ExistsSystemUserResponse) Reset() {
	*x = ExistsSystemUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_user_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistsSystemUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistsSystemUserResponse) ProtoMessage() {}

func (x *ExistsSystemUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_user_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistsSystemUserResponse.ProtoReflect.Descriptor instead.
func (*ExistsSystemUserResponse) Descriptor() ([]byte, []int) {
	return file_system_user_service_proto_rawDescGZIP(), []int{10}
}

func (x *ExistsSystemUserResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

var File_system_user_service_proto protoreflect.FileDescriptor

var file_system_user_service_proto_rawDesc = []byte{
	0x0a, 0x19, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x65, 0x6e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x50, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x35, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0a, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x22, 0x51, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0a,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x4e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73,
	0x65, 0x72, 0x22, 0x85, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x69,
	0x70, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x50, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x35, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0a, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x22, 0x51, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x22, 0x29, 0x0a, 0x17, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2f, 0x0a, 0x17, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x32, 0x0a, 0x18, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x32, 0xef, 0x05, 0x0a, 0x11,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x5b, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x1e, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x22, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5b, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4f, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x5b, 0x0a, 0x10, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x2e, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65,
	0x72, 0x1a, 0x14, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x14, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55,
	0x73, 0x65, 0x72, 0x1a, 0x14, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55,
	0x73, 0x65, 0x72, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x17, 0x5a,
	0x15, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_system_user_service_proto_rawDescOnce sync.Once
	file_system_user_service_proto_rawDescData = file_system_user_service_proto_rawDesc
)

func file_system_user_service_proto_rawDescGZIP() []byte {
	file_system_user_service_proto_rawDescOnce.Do(func() {
		file_system_user_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_system_user_service_proto_rawDescData)
	})
	return file_system_user_service_proto_rawDescData
}

var file_system_user_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_system_user_service_proto_goTypes = []interface{}{
	(*CreateSystemUserRequest)(nil),   // 0: genproto.CreateSystemUserRequest
	(*CreateSystemUserResponse)(nil),  // 1: genproto.CreateSystemUserResponse
	(*GetSystemUserRequest)(nil),      // 2: genproto.GetSystemUserRequest
	(*GetSystemUserResponse)(nil),     // 3: genproto.GetSystemUserResponse
	(*GetAllSystemUsersRequest)(nil),  // 4: genproto.GetAllSystemUsersRequest
	(*GetAllSystemUsersResponse)(nil), // 5: genproto.GetAllSystemUsersResponse
	(*UpdateSystemUserRequest)(nil),   // 6: genproto.UpdateSystemUserRequest
	(*UpdateSystemUserResponse)(nil),  // 7: genproto.UpdateSystemUserResponse
	(*DeleteSystemUserRequest)(nil),   // 8: genproto.DeleteSystemUserRequest
	(*ExistsSystemUserRequest)(nil),   // 9: genproto.ExistsSystemUserRequest
	(*ExistsSystemUserResponse)(nil),  // 10: genproto.ExistsSystemUserResponse
	(*SystemUser)(nil),                // 11: genproto.SystemUser
	(*empty.Empty)(nil),               // 12: google.protobuf.Empty
}
var file_system_user_service_proto_depIdxs = []int32{
	11, // 0: genproto.CreateSystemUserRequest.system_user:type_name -> genproto.SystemUser
	11, // 1: genproto.CreateSystemUserResponse.system_user:type_name -> genproto.SystemUser
	11, // 2: genproto.GetSystemUserResponse.system_user:type_name -> genproto.SystemUser
	11, // 3: genproto.GetAllSystemUsersResponse.system_users:type_name -> genproto.SystemUser
	11, // 4: genproto.UpdateSystemUserRequest.system_user:type_name -> genproto.SystemUser
	11, // 5: genproto.UpdateSystemUserResponse.system_user:type_name -> genproto.SystemUser
	0,  // 6: genproto.SystemUserService.CreateSystemUser:input_type -> genproto.CreateSystemUserRequest
	2,  // 7: genproto.SystemUserService.GetSystemUser:input_type -> genproto.GetSystemUserRequest
	4,  // 8: genproto.SystemUserService.GetAllSystemUsers:input_type -> genproto.GetAllSystemUsersRequest
	6,  // 9: genproto.SystemUserService.UpdateSystemUser:input_type -> genproto.UpdateSystemUserRequest
	8,  // 10: genproto.SystemUserService.DeleteSystemUser:input_type -> genproto.DeleteSystemUserRequest
	9,  // 11: genproto.SystemUserService.ExistsSystemUser:input_type -> genproto.ExistsSystemUserRequest
	11, // 12: genproto.SystemUserService.GetByLogin:input_type -> genproto.SystemUser
	11, // 13: genproto.SystemUserService.GetByCredentials:input_type -> genproto.SystemUser
	11, // 14: genproto.SystemUserService.ChangePassword:input_type -> genproto.SystemUser
	1,  // 15: genproto.SystemUserService.CreateSystemUser:output_type -> genproto.CreateSystemUserResponse
	3,  // 16: genproto.SystemUserService.GetSystemUser:output_type -> genproto.GetSystemUserResponse
	5,  // 17: genproto.SystemUserService.GetAllSystemUsers:output_type -> genproto.GetAllSystemUsersResponse
	7,  // 18: genproto.SystemUserService.UpdateSystemUser:output_type -> genproto.UpdateSystemUserResponse
	12, // 19: genproto.SystemUserService.DeleteSystemUser:output_type -> google.protobuf.Empty
	10, // 20: genproto.SystemUserService.ExistsSystemUser:output_type -> genproto.ExistsSystemUserResponse
	11, // 21: genproto.SystemUserService.GetByLogin:output_type -> genproto.SystemUser
	11, // 22: genproto.SystemUserService.GetByCredentials:output_type -> genproto.SystemUser
	12, // 23: genproto.SystemUserService.ChangePassword:output_type -> google.protobuf.Empty
	15, // [15:24] is the sub-list for method output_type
	6,  // [6:15] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_system_user_service_proto_init() }
func file_system_user_service_proto_init() {
	if File_system_user_service_proto != nil {
		return
	}
	file_system_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_system_user_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSystemUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_user_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSystemUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_user_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_user_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_user_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllSystemUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_user_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllSystemUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_user_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSystemUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_user_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSystemUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_user_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSystemUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_user_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistsSystemUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_user_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistsSystemUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_system_user_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_system_user_service_proto_goTypes,
		DependencyIndexes: file_system_user_service_proto_depIdxs,
		MessageInfos:      file_system_user_service_proto_msgTypes,
	}.Build()
	File_system_user_service_proto = out.File
	file_system_user_service_proto_rawDesc = nil
	file_system_user_service_proto_goTypes = nil
	file_system_user_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SystemUserServiceClient is the client API for SystemUserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SystemUserServiceClient interface {
	CreateSystemUser(ctx context.Context, in *CreateSystemUserRequest, opts ...grpc.CallOption) (*CreateSystemUserResponse, error)
	GetSystemUser(ctx context.Context, in *GetSystemUserRequest, opts ...grpc.CallOption) (*GetSystemUserResponse, error)
	GetAllSystemUsers(ctx context.Context, in *GetAllSystemUsersRequest, opts ...grpc.CallOption) (*GetAllSystemUsersResponse, error)
	UpdateSystemUser(ctx context.Context, in *UpdateSystemUserRequest, opts ...grpc.CallOption) (*UpdateSystemUserResponse, error)
	DeleteSystemUser(ctx context.Context, in *DeleteSystemUserRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ExistsSystemUser(ctx context.Context, in *ExistsSystemUserRequest, opts ...grpc.CallOption) (*ExistsSystemUserResponse, error)
	GetByLogin(ctx context.Context, in *SystemUser, opts ...grpc.CallOption) (*SystemUser, error)
	GetByCredentials(ctx context.Context, in *SystemUser, opts ...grpc.CallOption) (*SystemUser, error)
	ChangePassword(ctx context.Context, in *SystemUser, opts ...grpc.CallOption) (*empty.Empty, error)
}

type systemUserServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSystemUserServiceClient(cc grpc.ClientConnInterface) SystemUserServiceClient {
	return &systemUserServiceClient{cc}
}

func (c *systemUserServiceClient) CreateSystemUser(ctx context.Context, in *CreateSystemUserRequest, opts ...grpc.CallOption) (*CreateSystemUserResponse, error) {
	out := new(CreateSystemUserResponse)
	err := c.cc.Invoke(ctx, "/genproto.SystemUserService/CreateSystemUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemUserServiceClient) GetSystemUser(ctx context.Context, in *GetSystemUserRequest, opts ...grpc.CallOption) (*GetSystemUserResponse, error) {
	out := new(GetSystemUserResponse)
	err := c.cc.Invoke(ctx, "/genproto.SystemUserService/GetSystemUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemUserServiceClient) GetAllSystemUsers(ctx context.Context, in *GetAllSystemUsersRequest, opts ...grpc.CallOption) (*GetAllSystemUsersResponse, error) {
	out := new(GetAllSystemUsersResponse)
	err := c.cc.Invoke(ctx, "/genproto.SystemUserService/GetAllSystemUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemUserServiceClient) UpdateSystemUser(ctx context.Context, in *UpdateSystemUserRequest, opts ...grpc.CallOption) (*UpdateSystemUserResponse, error) {
	out := new(UpdateSystemUserResponse)
	err := c.cc.Invoke(ctx, "/genproto.SystemUserService/UpdateSystemUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemUserServiceClient) DeleteSystemUser(ctx context.Context, in *DeleteSystemUserRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.SystemUserService/DeleteSystemUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemUserServiceClient) ExistsSystemUser(ctx context.Context, in *ExistsSystemUserRequest, opts ...grpc.CallOption) (*ExistsSystemUserResponse, error) {
	out := new(ExistsSystemUserResponse)
	err := c.cc.Invoke(ctx, "/genproto.SystemUserService/ExistsSystemUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemUserServiceClient) GetByLogin(ctx context.Context, in *SystemUser, opts ...grpc.CallOption) (*SystemUser, error) {
	out := new(SystemUser)
	err := c.cc.Invoke(ctx, "/genproto.SystemUserService/GetByLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemUserServiceClient) GetByCredentials(ctx context.Context, in *SystemUser, opts ...grpc.CallOption) (*SystemUser, error) {
	out := new(SystemUser)
	err := c.cc.Invoke(ctx, "/genproto.SystemUserService/GetByCredentials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemUserServiceClient) ChangePassword(ctx context.Context, in *SystemUser, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.SystemUserService/ChangePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SystemUserServiceServer is the server API for SystemUserService service.
type SystemUserServiceServer interface {
	CreateSystemUser(context.Context, *CreateSystemUserRequest) (*CreateSystemUserResponse, error)
	GetSystemUser(context.Context, *GetSystemUserRequest) (*GetSystemUserResponse, error)
	GetAllSystemUsers(context.Context, *GetAllSystemUsersRequest) (*GetAllSystemUsersResponse, error)
	UpdateSystemUser(context.Context, *UpdateSystemUserRequest) (*UpdateSystemUserResponse, error)
	DeleteSystemUser(context.Context, *DeleteSystemUserRequest) (*empty.Empty, error)
	ExistsSystemUser(context.Context, *ExistsSystemUserRequest) (*ExistsSystemUserResponse, error)
	GetByLogin(context.Context, *SystemUser) (*SystemUser, error)
	GetByCredentials(context.Context, *SystemUser) (*SystemUser, error)
	ChangePassword(context.Context, *SystemUser) (*empty.Empty, error)
}

// UnimplementedSystemUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSystemUserServiceServer struct {
}

func (*UnimplementedSystemUserServiceServer) CreateSystemUser(context.Context, *CreateSystemUserRequest) (*CreateSystemUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSystemUser not implemented")
}
func (*UnimplementedSystemUserServiceServer) GetSystemUser(context.Context, *GetSystemUserRequest) (*GetSystemUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSystemUser not implemented")
}
func (*UnimplementedSystemUserServiceServer) GetAllSystemUsers(context.Context, *GetAllSystemUsersRequest) (*GetAllSystemUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllSystemUsers not implemented")
}
func (*UnimplementedSystemUserServiceServer) UpdateSystemUser(context.Context, *UpdateSystemUserRequest) (*UpdateSystemUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSystemUser not implemented")
}
func (*UnimplementedSystemUserServiceServer) DeleteSystemUser(context.Context, *DeleteSystemUserRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSystemUser not implemented")
}
func (*UnimplementedSystemUserServiceServer) ExistsSystemUser(context.Context, *ExistsSystemUserRequest) (*ExistsSystemUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExistsSystemUser not implemented")
}
func (*UnimplementedSystemUserServiceServer) GetByLogin(context.Context, *SystemUser) (*SystemUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByLogin not implemented")
}
func (*UnimplementedSystemUserServiceServer) GetByCredentials(context.Context, *SystemUser) (*SystemUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByCredentials not implemented")
}
func (*UnimplementedSystemUserServiceServer) ChangePassword(context.Context, *SystemUser) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangePassword not implemented")
}

func RegisterSystemUserServiceServer(s *grpc.Server, srv SystemUserServiceServer) {
	s.RegisterService(&_SystemUserService_serviceDesc, srv)
}

func _SystemUserService_CreateSystemUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSystemUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemUserServiceServer).CreateSystemUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.SystemUserService/CreateSystemUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemUserServiceServer).CreateSystemUser(ctx, req.(*CreateSystemUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemUserService_GetSystemUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSystemUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemUserServiceServer).GetSystemUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.SystemUserService/GetSystemUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemUserServiceServer).GetSystemUser(ctx, req.(*GetSystemUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemUserService_GetAllSystemUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllSystemUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemUserServiceServer).GetAllSystemUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.SystemUserService/GetAllSystemUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemUserServiceServer).GetAllSystemUsers(ctx, req.(*GetAllSystemUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemUserService_UpdateSystemUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSystemUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemUserServiceServer).UpdateSystemUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.SystemUserService/UpdateSystemUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemUserServiceServer).UpdateSystemUser(ctx, req.(*UpdateSystemUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemUserService_DeleteSystemUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSystemUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemUserServiceServer).DeleteSystemUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.SystemUserService/DeleteSystemUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemUserServiceServer).DeleteSystemUser(ctx, req.(*DeleteSystemUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemUserService_ExistsSystemUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExistsSystemUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemUserServiceServer).ExistsSystemUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.SystemUserService/ExistsSystemUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemUserServiceServer).ExistsSystemUser(ctx, req.(*ExistsSystemUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemUserService_GetByLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemUserServiceServer).GetByLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.SystemUserService/GetByLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemUserServiceServer).GetByLogin(ctx, req.(*SystemUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemUserService_GetByCredentials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemUserServiceServer).GetByCredentials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.SystemUserService/GetByCredentials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemUserServiceServer).GetByCredentials(ctx, req.(*SystemUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemUserService_ChangePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemUserServiceServer).ChangePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.SystemUserService/ChangePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemUserServiceServer).ChangePassword(ctx, req.(*SystemUser))
	}
	return interceptor(ctx, in, info, handler)
}

var _SystemUserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.SystemUserService",
	HandlerType: (*SystemUserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSystemUser",
			Handler:    _SystemUserService_CreateSystemUser_Handler,
		},
		{
			MethodName: "GetSystemUser",
			Handler:    _SystemUserService_GetSystemUser_Handler,
		},
		{
			MethodName: "GetAllSystemUsers",
			Handler:    _SystemUserService_GetAllSystemUsers_Handler,
		},
		{
			MethodName: "UpdateSystemUser",
			Handler:    _SystemUserService_UpdateSystemUser_Handler,
		},
		{
			MethodName: "DeleteSystemUser",
			Handler:    _SystemUserService_DeleteSystemUser_Handler,
		},
		{
			MethodName: "ExistsSystemUser",
			Handler:    _SystemUserService_ExistsSystemUser_Handler,
		},
		{
			MethodName: "GetByLogin",
			Handler:    _SystemUserService_GetByLogin_Handler,
		},
		{
			MethodName: "GetByCredentials",
			Handler:    _SystemUserService_GetByCredentials_Handler,
		},
		{
			MethodName: "ChangePassword",
			Handler:    _SystemUserService_ChangePassword_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "system_user_service.proto",
}
