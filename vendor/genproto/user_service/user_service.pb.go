// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user_service.proto

package user_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateClientResponse struct {
	Client               *Client  `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateClientResponse) Reset()         { *m = CreateClientResponse{} }
func (m *CreateClientResponse) String() string { return proto.CompactTextString(m) }
func (*CreateClientResponse) ProtoMessage()    {}
func (*CreateClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{0}
}

func (m *CreateClientResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClientResponse.Unmarshal(m, b)
}
func (m *CreateClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClientResponse.Marshal(b, m, deterministic)
}
func (m *CreateClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClientResponse.Merge(m, src)
}
func (m *CreateClientResponse) XXX_Size() int {
	return xxx_messageInfo_CreateClientResponse.Size(m)
}
func (m *CreateClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClientResponse proto.InternalMessageInfo

func (m *CreateClientResponse) GetClient() *Client {
	if m != nil {
		return m.Client
	}
	return nil
}

type DeleteClientRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteClientRequest) Reset()         { *m = DeleteClientRequest{} }
func (m *DeleteClientRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteClientRequest) ProtoMessage()    {}
func (*DeleteClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{1}
}

func (m *DeleteClientRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteClientRequest.Unmarshal(m, b)
}
func (m *DeleteClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteClientRequest.Marshal(b, m, deterministic)
}
func (m *DeleteClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteClientRequest.Merge(m, src)
}
func (m *DeleteClientRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteClientRequest.Size(m)
}
func (m *DeleteClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteClientRequest proto.InternalMessageInfo

func (m *DeleteClientRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type UpdateClientResponse struct {
	Client               *Client  `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateClientResponse) Reset()         { *m = UpdateClientResponse{} }
func (m *UpdateClientResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateClientResponse) ProtoMessage()    {}
func (*UpdateClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{2}
}

func (m *UpdateClientResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateClientResponse.Unmarshal(m, b)
}
func (m *UpdateClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateClientResponse.Marshal(b, m, deterministic)
}
func (m *UpdateClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateClientResponse.Merge(m, src)
}
func (m *UpdateClientResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateClientResponse.Size(m)
}
func (m *UpdateClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateClientResponse proto.InternalMessageInfo

func (m *UpdateClientResponse) GetClient() *Client {
	if m != nil {
		return m.Client
	}
	return nil
}

type GetClientRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClientRequest) Reset()         { *m = GetClientRequest{} }
func (m *GetClientRequest) String() string { return proto.CompactTextString(m) }
func (*GetClientRequest) ProtoMessage()    {}
func (*GetClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{3}
}

func (m *GetClientRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClientRequest.Unmarshal(m, b)
}
func (m *GetClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClientRequest.Marshal(b, m, deterministic)
}
func (m *GetClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClientRequest.Merge(m, src)
}
func (m *GetClientRequest) XXX_Size() int {
	return xxx_messageInfo_GetClientRequest.Size(m)
}
func (m *GetClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetClientRequest proto.InternalMessageInfo

func (m *GetClientRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetClientResponse struct {
	Client               *Client  `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClientResponse) Reset()         { *m = GetClientResponse{} }
func (m *GetClientResponse) String() string { return proto.CompactTextString(m) }
func (*GetClientResponse) ProtoMessage()    {}
func (*GetClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{4}
}

func (m *GetClientResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClientResponse.Unmarshal(m, b)
}
func (m *GetClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClientResponse.Marshal(b, m, deterministic)
}
func (m *GetClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClientResponse.Merge(m, src)
}
func (m *GetClientResponse) XXX_Size() int {
	return xxx_messageInfo_GetClientResponse.Size(m)
}
func (m *GetClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetClientResponse proto.InternalMessageInfo

func (m *GetClientResponse) GetClient() *Client {
	if m != nil {
		return m.Client
	}
	return nil
}

type GetAllClientsRequest struct {
	Page                 uint64   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit                uint64   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllClientsRequest) Reset()         { *m = GetAllClientsRequest{} }
func (m *GetAllClientsRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllClientsRequest) ProtoMessage()    {}
func (*GetAllClientsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{5}
}

func (m *GetAllClientsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllClientsRequest.Unmarshal(m, b)
}
func (m *GetAllClientsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllClientsRequest.Marshal(b, m, deterministic)
}
func (m *GetAllClientsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllClientsRequest.Merge(m, src)
}
func (m *GetAllClientsRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllClientsRequest.Size(m)
}
func (m *GetAllClientsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllClientsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllClientsRequest proto.InternalMessageInfo

func (m *GetAllClientsRequest) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAllClientsRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type GetAllResponse struct {
	Clients              []*Client `protobuf:"bytes,1,rep,name=clients,proto3" json:"clients,omitempty"`
	Count                uint64    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetAllResponse) Reset()         { *m = GetAllResponse{} }
func (m *GetAllResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllResponse) ProtoMessage()    {}
func (*GetAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{6}
}

func (m *GetAllResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllResponse.Unmarshal(m, b)
}
func (m *GetAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllResponse.Marshal(b, m, deterministic)
}
func (m *GetAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllResponse.Merge(m, src)
}
func (m *GetAllResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllResponse.Size(m)
}
func (m *GetAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllResponse proto.InternalMessageInfo

func (m *GetAllResponse) GetClients() []*Client {
	if m != nil {
		return m.Clients
	}
	return nil
}

func (m *GetAllResponse) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ExistsClientRequest struct {
	Phone                string   `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExistsClientRequest) Reset()         { *m = ExistsClientRequest{} }
func (m *ExistsClientRequest) String() string { return proto.CompactTextString(m) }
func (*ExistsClientRequest) ProtoMessage()    {}
func (*ExistsClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{7}
}

func (m *ExistsClientRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistsClientRequest.Unmarshal(m, b)
}
func (m *ExistsClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistsClientRequest.Marshal(b, m, deterministic)
}
func (m *ExistsClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistsClientRequest.Merge(m, src)
}
func (m *ExistsClientRequest) XXX_Size() int {
	return xxx_messageInfo_ExistsClientRequest.Size(m)
}
func (m *ExistsClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistsClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExistsClientRequest proto.InternalMessageInfo

func (m *ExistsClientRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type ExistsClientResponse struct {
	Exists               bool     `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExistsClientResponse) Reset()         { *m = ExistsClientResponse{} }
func (m *ExistsClientResponse) String() string { return proto.CompactTextString(m) }
func (*ExistsClientResponse) ProtoMessage()    {}
func (*ExistsClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{8}
}

func (m *ExistsClientResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistsClientResponse.Unmarshal(m, b)
}
func (m *ExistsClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistsClientResponse.Marshal(b, m, deterministic)
}
func (m *ExistsClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistsClientResponse.Merge(m, src)
}
func (m *ExistsClientResponse) XXX_Size() int {
	return xxx_messageInfo_ExistsClientResponse.Size(m)
}
func (m *ExistsClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistsClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExistsClientResponse proto.InternalMessageInfo

func (m *ExistsClientResponse) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

func init() {
	proto.RegisterType((*CreateClientResponse)(nil), "genproto.CreateClientResponse")
	proto.RegisterType((*DeleteClientRequest)(nil), "genproto.DeleteClientRequest")
	proto.RegisterType((*UpdateClientResponse)(nil), "genproto.UpdateClientResponse")
	proto.RegisterType((*GetClientRequest)(nil), "genproto.GetClientRequest")
	proto.RegisterType((*GetClientResponse)(nil), "genproto.GetClientResponse")
	proto.RegisterType((*GetAllClientsRequest)(nil), "genproto.GetAllClientsRequest")
	proto.RegisterType((*GetAllResponse)(nil), "genproto.GetAllResponse")
	proto.RegisterType((*ExistsClientRequest)(nil), "genproto.ExistsClientRequest")
	proto.RegisterType((*ExistsClientResponse)(nil), "genproto.ExistsClientResponse")
}

func init() { proto.RegisterFile("user_service.proto", fileDescriptor_292f630cd9eb4c90) }

var fileDescriptor_292f630cd9eb4c90 = []byte{
	// 416 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x5d, 0x8b, 0xda, 0x40,
	0x14, 0x8d, 0x9f, 0xd5, 0xab, 0x15, 0x3b, 0xa6, 0x36, 0x44, 0x2a, 0x32, 0x50, 0x90, 0x16, 0x22,
	0xd8, 0xe7, 0x82, 0xd5, 0x5a, 0x1f, 0xfa, 0x50, 0x48, 0xf1, 0xa5, 0x2f, 0xc5, 0x8f, 0xdb, 0x34,
	0x10, 0x93, 0x34, 0x33, 0x59, 0x76, 0xff, 0xdf, 0xfe, 0xb0, 0x25, 0x33, 0x49, 0x9c, 0x68, 0x10,
	0x96, 0x7d, 0x9b, 0x7b, 0xee, 0x99, 0x73, 0xe6, 0xe6, 0x1e, 0x02, 0x24, 0x66, 0x18, 0xfd, 0x61,
	0x18, 0xdd, 0xb9, 0x07, 0xb4, 0xc2, 0x28, 0xe0, 0x01, 0x69, 0x39, 0xe8, 0x8b, 0x93, 0x09, 0x49,
	0x57, 0xa2, 0xe6, 0xc8, 0x09, 0x02, 0xc7, 0xc3, 0x99, 0xa8, 0xf6, 0xf1, 0xdf, 0x19, 0x9e, 0x42,
	0xfe, 0x20, 0x9b, 0x74, 0x01, 0xfa, 0x2a, 0xc2, 0x1d, 0xc7, 0x95, 0xe7, 0xa2, 0xcf, 0x6d, 0x64,
	0x61, 0xe0, 0x33, 0x24, 0x53, 0x68, 0x1e, 0x04, 0x62, 0x54, 0x26, 0x95, 0x69, 0x67, 0xde, 0xb7,
	0x32, 0x6d, 0x2b, 0x65, 0xa6, 0x7d, 0xfa, 0x01, 0x06, 0xdf, 0xd0, 0xc3, 0xb3, 0xc2, 0xff, 0x18,
	0x19, 0x27, 0x3d, 0xa8, 0xba, 0x47, 0x71, 0xb9, 0x6d, 0x57, 0xdd, 0x63, 0x62, 0xb4, 0x0d, 0x8f,
	0x2f, 0x31, 0xa2, 0xd0, 0xdf, 0x20, 0xbf, 0xed, 0xf2, 0x05, 0xde, 0x28, 0x9c, 0x67, 0x5b, 0x2c,
	0x40, 0xdf, 0x20, 0xff, 0xea, 0x79, 0x12, 0x67, 0x99, 0x0d, 0x81, 0x7a, 0xb8, 0x73, 0x50, 0xdc,
	0xaf, 0xdb, 0xe2, 0x4c, 0x74, 0x68, 0x78, 0xee, 0xc9, 0xe5, 0x46, 0x55, 0x80, 0xb2, 0xa0, 0x36,
	0xf4, 0xa4, 0x42, 0xee, 0xfe, 0x11, 0x5e, 0x49, 0x75, 0x66, 0x54, 0x26, 0xb5, 0x52, 0xfb, 0x8c,
	0x90, 0x68, 0x1e, 0x82, 0xd8, 0xcf, 0x35, 0x45, 0x41, 0x3f, 0xc1, 0x60, 0x7d, 0xef, 0x32, 0xce,
	0x8a, 0xb3, 0xeb, 0xd0, 0x08, 0xff, 0x05, 0x3e, 0xa6, 0xe3, 0xcb, 0x82, 0x5a, 0xa0, 0x17, 0xc9,
	0xe9, 0x33, 0x86, 0xd0, 0x44, 0x81, 0x0b, 0x7a, 0xcb, 0x4e, 0xab, 0xf9, 0x63, 0x0d, 0x3a, 0x5b,
	0x86, 0xd1, 0x2f, 0x99, 0x24, 0xb2, 0x84, 0xae, 0x1a, 0x08, 0x72, 0xf5, 0x5a, 0x73, 0xac, 0x20,
	0x25, 0xd1, 0xa1, 0x5a, 0xa2, 0xa1, 0xee, 0xfa, 0xb6, 0x46, 0x59, 0x2a, 0xa8, 0x46, 0x36, 0xd0,
	0x55, 0x63, 0x45, 0xde, 0x9f, 0x6f, 0x94, 0xc4, 0xcd, 0x1c, 0x5a, 0x32, 0xe5, 0x56, 0x96, 0x72,
	0x6b, 0x9d, 0xa4, 0x9c, 0x6a, 0xe4, 0x3b, 0xb4, 0xf3, 0x48, 0x10, 0xf3, 0xac, 0x72, 0x99, 0x25,
	0x73, 0x54, 0xda, 0xcb, 0x1f, 0xf4, 0x03, 0x5e, 0x17, 0xb2, 0x41, 0xc6, 0x05, 0xfe, 0x55, 0x68,
	0x4c, 0xe3, 0xb2, 0xaf, 0x88, 0xfd, 0x84, 0xae, 0xba, 0x25, 0x75, 0xba, 0x92, 0x55, 0xab, 0x9f,
	0xab, 0x6c, 0xb9, 0x54, 0x5b, 0xbe, 0xfb, 0xfd, 0x36, 0xa3, 0xcc, 0xd4, 0x3f, 0xc3, 0xbe, 0x29,
	0xb0, 0xcf, 0x4f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xbd, 0x65, 0xd8, 0xe5, 0x30, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	CreateClient(ctx context.Context, in *Client, opts ...grpc.CallOption) (*CreateClientResponse, error)
	UpdateClient(ctx context.Context, in *Client, opts ...grpc.CallOption) (*UpdateClientResponse, error)
	DeleteClient(ctx context.Context, in *DeleteClientRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetClient(ctx context.Context, in *GetClientRequest, opts ...grpc.CallOption) (*GetClientResponse, error)
	GetAllClients(ctx context.Context, in *GetAllClientsRequest, opts ...grpc.CallOption) (*GetAllResponse, error)
	ExistsClient(ctx context.Context, in *ExistsClientRequest, opts ...grpc.CallOption) (*ExistsClientResponse, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) CreateClient(ctx context.Context, in *Client, opts ...grpc.CallOption) (*CreateClientResponse, error) {
	out := new(CreateClientResponse)
	err := c.cc.Invoke(ctx, "/genproto.UserService/CreateClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateClient(ctx context.Context, in *Client, opts ...grpc.CallOption) (*UpdateClientResponse, error) {
	out := new(UpdateClientResponse)
	err := c.cc.Invoke(ctx, "/genproto.UserService/UpdateClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) DeleteClient(ctx context.Context, in *DeleteClientRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.UserService/DeleteClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetClient(ctx context.Context, in *GetClientRequest, opts ...grpc.CallOption) (*GetClientResponse, error) {
	out := new(GetClientResponse)
	err := c.cc.Invoke(ctx, "/genproto.UserService/GetClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetAllClients(ctx context.Context, in *GetAllClientsRequest, opts ...grpc.CallOption) (*GetAllResponse, error) {
	out := new(GetAllResponse)
	err := c.cc.Invoke(ctx, "/genproto.UserService/GetAllClients", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ExistsClient(ctx context.Context, in *ExistsClientRequest, opts ...grpc.CallOption) (*ExistsClientResponse, error) {
	out := new(ExistsClientResponse)
	err := c.cc.Invoke(ctx, "/genproto.UserService/ExistsClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	CreateClient(context.Context, *Client) (*CreateClientResponse, error)
	UpdateClient(context.Context, *Client) (*UpdateClientResponse, error)
	DeleteClient(context.Context, *DeleteClientRequest) (*empty.Empty, error)
	GetClient(context.Context, *GetClientRequest) (*GetClientResponse, error)
	GetAllClients(context.Context, *GetAllClientsRequest) (*GetAllResponse, error)
	ExistsClient(context.Context, *ExistsClientRequest) (*ExistsClientResponse, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) CreateClient(ctx context.Context, req *Client) (*CreateClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateClient not implemented")
}
func (*UnimplementedUserServiceServer) UpdateClient(ctx context.Context, req *Client) (*UpdateClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateClient not implemented")
}
func (*UnimplementedUserServiceServer) DeleteClient(ctx context.Context, req *DeleteClientRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteClient not implemented")
}
func (*UnimplementedUserServiceServer) GetClient(ctx context.Context, req *GetClientRequest) (*GetClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetClient not implemented")
}
func (*UnimplementedUserServiceServer) GetAllClients(ctx context.Context, req *GetAllClientsRequest) (*GetAllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllClients not implemented")
}
func (*UnimplementedUserServiceServer) ExistsClient(ctx context.Context, req *ExistsClientRequest) (*ExistsClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExistsClient not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_CreateClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Client)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CreateClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.UserService/CreateClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CreateClient(ctx, req.(*Client))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Client)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.UserService/UpdateClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateClient(ctx, req.(*Client))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_DeleteClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).DeleteClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.UserService/DeleteClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).DeleteClient(ctx, req.(*DeleteClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.UserService/GetClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetClient(ctx, req.(*GetClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetAllClients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllClientsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetAllClients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.UserService/GetAllClients",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetAllClients(ctx, req.(*GetAllClientsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ExistsClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExistsClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ExistsClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.UserService/ExistsClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ExistsClient(ctx, req.(*ExistsClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateClient",
			Handler:    _UserService_CreateClient_Handler,
		},
		{
			MethodName: "UpdateClient",
			Handler:    _UserService_UpdateClient_Handler,
		},
		{
			MethodName: "DeleteClient",
			Handler:    _UserService_DeleteClient_Handler,
		},
		{
			MethodName: "GetClient",
			Handler:    _UserService_GetClient_Handler,
		},
		{
			MethodName: "GetAllClients",
			Handler:    _UserService_GetAllClients_Handler,
		},
		{
			MethodName: "ExistsClient",
			Handler:    _UserService_ExistsClient_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user_service.proto",
}
