// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.12.2
// source: shipper_service.proto

package user_service

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CreateShipperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shipper *Shipper `protobuf:"bytes,1,opt,name=shipper,proto3" json:"shipper,omitempty"`
}

func (x *CreateShipperRequest) Reset() {
	*x = CreateShipperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipper_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateShipperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShipperRequest) ProtoMessage() {}

func (x *CreateShipperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shipper_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShipperRequest.ProtoReflect.Descriptor instead.
func (*CreateShipperRequest) Descriptor() ([]byte, []int) {
	return file_shipper_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateShipperRequest) GetShipper() *Shipper {
	if x != nil {
		return x.Shipper
	}
	return nil
}

type CreateShipperResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shipper *Shipper `protobuf:"bytes,1,opt,name=shipper,proto3" json:"shipper,omitempty"`
}

func (x *CreateShipperResponse) Reset() {
	*x = CreateShipperResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipper_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateShipperResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShipperResponse) ProtoMessage() {}

func (x *CreateShipperResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shipper_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShipperResponse.ProtoReflect.Descriptor instead.
func (*CreateShipperResponse) Descriptor() ([]byte, []int) {
	return file_shipper_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateShipperResponse) GetShipper() *Shipper {
	if x != nil {
		return x.Shipper
	}
	return nil
}

type GetShipperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetShipperRequest) Reset() {
	*x = GetShipperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipper_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShipperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShipperRequest) ProtoMessage() {}

func (x *GetShipperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shipper_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShipperRequest.ProtoReflect.Descriptor instead.
func (*GetShipperRequest) Descriptor() ([]byte, []int) {
	return file_shipper_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetShipperRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetShipperResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shipper *Shipper `protobuf:"bytes,1,opt,name=shipper,proto3" json:"shipper,omitempty"`
}

func (x *GetShipperResponse) Reset() {
	*x = GetShipperResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipper_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShipperResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShipperResponse) ProtoMessage() {}

func (x *GetShipperResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shipper_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShipperResponse.ProtoReflect.Descriptor instead.
func (*GetShipperResponse) Descriptor() ([]byte, []int) {
	return file_shipper_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetShipperResponse) GetShipper() *Shipper {
	if x != nil {
		return x.Shipper
	}
	return nil
}

type GetAllShippersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetAllShippersRequest) Reset() {
	*x = GetAllShippersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipper_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllShippersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllShippersRequest) ProtoMessage() {}

func (x *GetAllShippersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shipper_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllShippersRequest.ProtoReflect.Descriptor instead.
func (*GetAllShippersRequest) Descriptor() ([]byte, []int) {
	return file_shipper_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetAllShippersRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAllShippersRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAllShippersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shippers []*Shipper `protobuf:"bytes,1,rep,name=shippers,proto3" json:"shippers,omitempty"`
	Count    uint64     `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetAllShippersResponse) Reset() {
	*x = GetAllShippersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipper_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllShippersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllShippersResponse) ProtoMessage() {}

func (x *GetAllShippersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shipper_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllShippersResponse.ProtoReflect.Descriptor instead.
func (*GetAllShippersResponse) Descriptor() ([]byte, []int) {
	return file_shipper_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllShippersResponse) GetShippers() []*Shipper {
	if x != nil {
		return x.Shippers
	}
	return nil
}

func (x *GetAllShippersResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type UpdateShipperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shipper *Shipper `protobuf:"bytes,1,opt,name=shipper,proto3" json:"shipper,omitempty"`
}

func (x *UpdateShipperRequest) Reset() {
	*x = UpdateShipperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipper_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateShipperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShipperRequest) ProtoMessage() {}

func (x *UpdateShipperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shipper_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShipperRequest.ProtoReflect.Descriptor instead.
func (*UpdateShipperRequest) Descriptor() ([]byte, []int) {
	return file_shipper_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateShipperRequest) GetShipper() *Shipper {
	if x != nil {
		return x.Shipper
	}
	return nil
}

type UpdateShipperResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shipper *Shipper `protobuf:"bytes,1,opt,name=shipper,proto3" json:"shipper,omitempty"`
}

func (x *UpdateShipperResponse) Reset() {
	*x = UpdateShipperResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipper_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateShipperResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShipperResponse) ProtoMessage() {}

func (x *UpdateShipperResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shipper_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShipperResponse.ProtoReflect.Descriptor instead.
func (*UpdateShipperResponse) Descriptor() ([]byte, []int) {
	return file_shipper_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateShipperResponse) GetShipper() *Shipper {
	if x != nil {
		return x.Shipper
	}
	return nil
}

type DeleteShipperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteShipperRequest) Reset() {
	*x = DeleteShipperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipper_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShipperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShipperRequest) ProtoMessage() {}

func (x *DeleteShipperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shipper_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShipperRequest.ProtoReflect.Descriptor instead.
func (*DeleteShipperRequest) Descriptor() ([]byte, []int) {
	return file_shipper_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteShipperRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ExistsShipperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *ExistsShipperRequest) Reset() {
	*x = ExistsShipperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipper_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistsShipperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistsShipperRequest) ProtoMessage() {}

func (x *ExistsShipperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shipper_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistsShipperRequest.ProtoReflect.Descriptor instead.
func (*ExistsShipperRequest) Descriptor() ([]byte, []int) {
	return file_shipper_service_proto_rawDescGZIP(), []int{9}
}

func (x *ExistsShipperRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type ExistsShipperResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *ExistsShipperResponse) Reset() {
	*x = ExistsShipperResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shipper_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistsShipperResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistsShipperResponse) ProtoMessage() {}

func (x *ExistsShipperResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shipper_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistsShipperResponse.ProtoReflect.Descriptor instead.
func (*ExistsShipperResponse) Descriptor() ([]byte, []int) {
	return file_shipper_service_proto_rawDescGZIP(), []int{10}
}

func (x *ExistsShipperResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

var File_shipper_service_proto protoreflect.FileDescriptor

var file_shipper_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x43, 0x0a,
	0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x52, 0x07, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x65, 0x72, 0x22, 0x44, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x69, 0x70,
	0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x52,
	0x07, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53,
	0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x41, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x52, 0x07, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72,
	0x22, 0x41, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x22, 0x5d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x68, 0x69,
	0x70, 0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a,
	0x08, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70,
	0x65, 0x72, 0x52, 0x08, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x43, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x69, 0x70,
	0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x52, 0x07,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x22, 0x44, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2b, 0x0a, 0x07, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x69,
	0x70, 0x70, 0x65, 0x72, 0x52, 0x07, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x22, 0x26, 0x0a,
	0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2c, 0x0a, 0x14, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x53,
	0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x22, 0x2f, 0x0a, 0x15, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x53, 0x68, 0x69,
	0x70, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x32, 0xf9, 0x03, 0x0a, 0x0e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x68, 0x69, 0x70, 0x70,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a,
	0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x12, 0x1e,
	0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x49, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70,
	0x65, 0x72, 0x12, 0x1e, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0d,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x12, 0x1e, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x53,
	0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x53,
	0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x17, 0x5a, 0x15, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_shipper_service_proto_rawDescOnce sync.Once
	file_shipper_service_proto_rawDescData = file_shipper_service_proto_rawDesc
)

func file_shipper_service_proto_rawDescGZIP() []byte {
	file_shipper_service_proto_rawDescOnce.Do(func() {
		file_shipper_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_shipper_service_proto_rawDescData)
	})
	return file_shipper_service_proto_rawDescData
}

var file_shipper_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_shipper_service_proto_goTypes = []interface{}{
	(*CreateShipperRequest)(nil),   // 0: genproto.CreateShipperRequest
	(*CreateShipperResponse)(nil),  // 1: genproto.CreateShipperResponse
	(*GetShipperRequest)(nil),      // 2: genproto.GetShipperRequest
	(*GetShipperResponse)(nil),     // 3: genproto.GetShipperResponse
	(*GetAllShippersRequest)(nil),  // 4: genproto.GetAllShippersRequest
	(*GetAllShippersResponse)(nil), // 5: genproto.GetAllShippersResponse
	(*UpdateShipperRequest)(nil),   // 6: genproto.UpdateShipperRequest
	(*UpdateShipperResponse)(nil),  // 7: genproto.UpdateShipperResponse
	(*DeleteShipperRequest)(nil),   // 8: genproto.DeleteShipperRequest
	(*ExistsShipperRequest)(nil),   // 9: genproto.ExistsShipperRequest
	(*ExistsShipperResponse)(nil),  // 10: genproto.ExistsShipperResponse
	(*Shipper)(nil),                // 11: genproto.Shipper
	(*empty.Empty)(nil),            // 12: google.protobuf.Empty
}
var file_shipper_service_proto_depIdxs = []int32{
	11, // 0: genproto.CreateShipperRequest.shipper:type_name -> genproto.Shipper
	11, // 1: genproto.CreateShipperResponse.shipper:type_name -> genproto.Shipper
	11, // 2: genproto.GetShipperResponse.shipper:type_name -> genproto.Shipper
	11, // 3: genproto.GetAllShippersResponse.shippers:type_name -> genproto.Shipper
	11, // 4: genproto.UpdateShipperRequest.shipper:type_name -> genproto.Shipper
	11, // 5: genproto.UpdateShipperResponse.shipper:type_name -> genproto.Shipper
	0,  // 6: genproto.ShipperService.CreateShipper:input_type -> genproto.CreateShipperRequest
	2,  // 7: genproto.ShipperService.GetShipper:input_type -> genproto.GetShipperRequest
	4,  // 8: genproto.ShipperService.GetAllShippers:input_type -> genproto.GetAllShippersRequest
	6,  // 9: genproto.ShipperService.UpdateShipper:input_type -> genproto.UpdateShipperRequest
	8,  // 10: genproto.ShipperService.DeleteShipper:input_type -> genproto.DeleteShipperRequest
	9,  // 11: genproto.ShipperService.ExistsShipper:input_type -> genproto.ExistsShipperRequest
	1,  // 12: genproto.ShipperService.CreateShipper:output_type -> genproto.CreateShipperResponse
	3,  // 13: genproto.ShipperService.GetShipper:output_type -> genproto.GetShipperResponse
	5,  // 14: genproto.ShipperService.GetAllShippers:output_type -> genproto.GetAllShippersResponse
	7,  // 15: genproto.ShipperService.UpdateShipper:output_type -> genproto.UpdateShipperResponse
	12, // 16: genproto.ShipperService.DeleteShipper:output_type -> google.protobuf.Empty
	10, // 17: genproto.ShipperService.ExistsShipper:output_type -> genproto.ExistsShipperResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_shipper_service_proto_init() }
func file_shipper_service_proto_init() {
	if File_shipper_service_proto != nil {
		return
	}
	file_shipper_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_shipper_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateShipperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipper_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateShipperResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipper_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShipperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipper_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShipperResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipper_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllShippersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipper_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllShippersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipper_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateShipperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipper_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateShipperResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipper_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteShipperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipper_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistsShipperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shipper_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistsShipperResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shipper_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shipper_service_proto_goTypes,
		DependencyIndexes: file_shipper_service_proto_depIdxs,
		MessageInfos:      file_shipper_service_proto_msgTypes,
	}.Build()
	File_shipper_service_proto = out.File
	file_shipper_service_proto_rawDesc = nil
	file_shipper_service_proto_goTypes = nil
	file_shipper_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ShipperServiceClient is the client API for ShipperService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShipperServiceClient interface {
	CreateShipper(ctx context.Context, in *CreateShipperRequest, opts ...grpc.CallOption) (*CreateShipperResponse, error)
	GetShipper(ctx context.Context, in *GetShipperRequest, opts ...grpc.CallOption) (*GetShipperResponse, error)
	GetAllShippers(ctx context.Context, in *GetAllShippersRequest, opts ...grpc.CallOption) (*GetAllShippersResponse, error)
	UpdateShipper(ctx context.Context, in *UpdateShipperRequest, opts ...grpc.CallOption) (*UpdateShipperResponse, error)
	DeleteShipper(ctx context.Context, in *DeleteShipperRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ExistsShipper(ctx context.Context, in *ExistsShipperRequest, opts ...grpc.CallOption) (*ExistsShipperResponse, error)
}

type shipperServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewShipperServiceClient(cc grpc.ClientConnInterface) ShipperServiceClient {
	return &shipperServiceClient{cc}
}

func (c *shipperServiceClient) CreateShipper(ctx context.Context, in *CreateShipperRequest, opts ...grpc.CallOption) (*CreateShipperResponse, error) {
	out := new(CreateShipperResponse)
	err := c.cc.Invoke(ctx, "/genproto.ShipperService/CreateShipper", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperServiceClient) GetShipper(ctx context.Context, in *GetShipperRequest, opts ...grpc.CallOption) (*GetShipperResponse, error) {
	out := new(GetShipperResponse)
	err := c.cc.Invoke(ctx, "/genproto.ShipperService/GetShipper", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperServiceClient) GetAllShippers(ctx context.Context, in *GetAllShippersRequest, opts ...grpc.CallOption) (*GetAllShippersResponse, error) {
	out := new(GetAllShippersResponse)
	err := c.cc.Invoke(ctx, "/genproto.ShipperService/GetAllShippers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperServiceClient) UpdateShipper(ctx context.Context, in *UpdateShipperRequest, opts ...grpc.CallOption) (*UpdateShipperResponse, error) {
	out := new(UpdateShipperResponse)
	err := c.cc.Invoke(ctx, "/genproto.ShipperService/UpdateShipper", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperServiceClient) DeleteShipper(ctx context.Context, in *DeleteShipperRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.ShipperService/DeleteShipper", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperServiceClient) ExistsShipper(ctx context.Context, in *ExistsShipperRequest, opts ...grpc.CallOption) (*ExistsShipperResponse, error) {
	out := new(ExistsShipperResponse)
	err := c.cc.Invoke(ctx, "/genproto.ShipperService/ExistsShipper", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShipperServiceServer is the server API for ShipperService service.
type ShipperServiceServer interface {
	CreateShipper(context.Context, *CreateShipperRequest) (*CreateShipperResponse, error)
	GetShipper(context.Context, *GetShipperRequest) (*GetShipperResponse, error)
	GetAllShippers(context.Context, *GetAllShippersRequest) (*GetAllShippersResponse, error)
	UpdateShipper(context.Context, *UpdateShipperRequest) (*UpdateShipperResponse, error)
	DeleteShipper(context.Context, *DeleteShipperRequest) (*empty.Empty, error)
	ExistsShipper(context.Context, *ExistsShipperRequest) (*ExistsShipperResponse, error)
}

// UnimplementedShipperServiceServer can be embedded to have forward compatible implementations.
type UnimplementedShipperServiceServer struct {
}

func (*UnimplementedShipperServiceServer) CreateShipper(context.Context, *CreateShipperRequest) (*CreateShipperResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateShipper not implemented")
}
func (*UnimplementedShipperServiceServer) GetShipper(context.Context, *GetShipperRequest) (*GetShipperResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShipper not implemented")
}
func (*UnimplementedShipperServiceServer) GetAllShippers(context.Context, *GetAllShippersRequest) (*GetAllShippersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllShippers not implemented")
}
func (*UnimplementedShipperServiceServer) UpdateShipper(context.Context, *UpdateShipperRequest) (*UpdateShipperResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateShipper not implemented")
}
func (*UnimplementedShipperServiceServer) DeleteShipper(context.Context, *DeleteShipperRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteShipper not implemented")
}
func (*UnimplementedShipperServiceServer) ExistsShipper(context.Context, *ExistsShipperRequest) (*ExistsShipperResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExistsShipper not implemented")
}

func RegisterShipperServiceServer(s *grpc.Server, srv ShipperServiceServer) {
	s.RegisterService(&_ShipperService_serviceDesc, srv)
}

func _ShipperService_CreateShipper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateShipperRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperServiceServer).CreateShipper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperService/CreateShipper",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperServiceServer).CreateShipper(ctx, req.(*CreateShipperRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperService_GetShipper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShipperRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperServiceServer).GetShipper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperService/GetShipper",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperServiceServer).GetShipper(ctx, req.(*GetShipperRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperService_GetAllShippers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllShippersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperServiceServer).GetAllShippers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperService/GetAllShippers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperServiceServer).GetAllShippers(ctx, req.(*GetAllShippersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperService_UpdateShipper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateShipperRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperServiceServer).UpdateShipper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperService/UpdateShipper",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperServiceServer).UpdateShipper(ctx, req.(*UpdateShipperRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperService_DeleteShipper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteShipperRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperServiceServer).DeleteShipper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperService/DeleteShipper",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperServiceServer).DeleteShipper(ctx, req.(*DeleteShipperRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperService_ExistsShipper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExistsShipperRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperServiceServer).ExistsShipper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperService/ExistsShipper",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperServiceServer).ExistsShipper(ctx, req.(*ExistsShipperRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ShipperService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.ShipperService",
	HandlerType: (*ShipperServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateShipper",
			Handler:    _ShipperService_CreateShipper_Handler,
		},
		{
			MethodName: "GetShipper",
			Handler:    _ShipperService_GetShipper_Handler,
		},
		{
			MethodName: "GetAllShippers",
			Handler:    _ShipperService_GetAllShippers_Handler,
		},
		{
			MethodName: "UpdateShipper",
			Handler:    _ShipperService_UpdateShipper_Handler,
		},
		{
			MethodName: "DeleteShipper",
			Handler:    _ShipperService_DeleteShipper_Handler,
		},
		{
			MethodName: "ExistsShipper",
			Handler:    _ShipperService_ExistsShipper_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shipper_service.proto",
}
