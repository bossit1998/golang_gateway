// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tracking_service.proto

package tracking_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetTrackingRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTrackingRequest) Reset()         { *m = GetTrackingRequest{} }
func (m *GetTrackingRequest) String() string { return proto.CompactTextString(m) }
func (*GetTrackingRequest) ProtoMessage()    {}
func (*GetTrackingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d0ee08d8799866e, []int{0}
}

func (m *GetTrackingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTrackingRequest.Unmarshal(m, b)
}
func (m *GetTrackingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTrackingRequest.Marshal(b, m, deterministic)
}
func (m *GetTrackingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTrackingRequest.Merge(m, src)
}
func (m *GetTrackingRequest) XXX_Size() int {
	return xxx_messageInfo_GetTrackingRequest.Size(m)
}
func (m *GetTrackingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTrackingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTrackingRequest proto.InternalMessageInfo

func (m *GetTrackingRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetCouriersLastLocationRequest struct {
	CourierId            string   `protobuf:"bytes,1,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCouriersLastLocationRequest) Reset()         { *m = GetCouriersLastLocationRequest{} }
func (m *GetCouriersLastLocationRequest) String() string { return proto.CompactTextString(m) }
func (*GetCouriersLastLocationRequest) ProtoMessage()    {}
func (*GetCouriersLastLocationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d0ee08d8799866e, []int{1}
}

func (m *GetCouriersLastLocationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCouriersLastLocationRequest.Unmarshal(m, b)
}
func (m *GetCouriersLastLocationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCouriersLastLocationRequest.Marshal(b, m, deterministic)
}
func (m *GetCouriersLastLocationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCouriersLastLocationRequest.Merge(m, src)
}
func (m *GetCouriersLastLocationRequest) XXX_Size() int {
	return xxx_messageInfo_GetCouriersLastLocationRequest.Size(m)
}
func (m *GetCouriersLastLocationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCouriersLastLocationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCouriersLastLocationRequest proto.InternalMessageInfo

func (m *GetCouriersLastLocationRequest) GetCourierId() string {
	if m != nil {
		return m.CourierId
	}
	return ""
}

func init() {
	proto.RegisterType((*GetTrackingRequest)(nil), "genproto.GetTrackingRequest")
	proto.RegisterType((*GetCouriersLastLocationRequest)(nil), "genproto.GetCouriersLastLocationRequest")
}

func init() { proto.RegisterFile("tracking_service.proto", fileDescriptor_3d0ee08d8799866e) }

var fileDescriptor_3d0ee08d8799866e = []byte{
	// 211 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2b, 0x29, 0x4a, 0x4c,
	0xce, 0xce, 0xcc, 0x4b, 0x8f, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0xe2, 0x48, 0x4f, 0xcd, 0x03, 0xb3, 0xa4, 0xf8, 0x60, 0x2a, 0x20, 0x32, 0x4a,
	0x2a, 0x5c, 0x42, 0xee, 0xa9, 0x25, 0x21, 0x50, 0xc1, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12,
	0x21, 0x3e, 0x2e, 0xa6, 0xcc, 0x14, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0xa6, 0xcc, 0x14,
	0x25, 0x7b, 0x2e, 0x39, 0xf7, 0xd4, 0x12, 0xe7, 0xfc, 0xd2, 0xa2, 0xcc, 0xd4, 0xa2, 0x62, 0x9f,
	0xc4, 0xe2, 0x12, 0x9f, 0xfc, 0xe4, 0xc4, 0x92, 0xcc, 0xfc, 0x3c, 0x98, 0x0e, 0x59, 0x2e, 0xae,
	0x64, 0x88, 0x74, 0x3c, 0x5c, 0x27, 0x27, 0x54, 0xc4, 0x33, 0xc5, 0xe8, 0x01, 0x23, 0x17, 0x3f,
	0xcc, 0x92, 0x60, 0x88, 0xd3, 0x84, 0xf4, 0xb9, 0x98, 0x1d, 0x53, 0x52, 0x84, 0x84, 0xf4, 0x60,
	0x8e, 0xd3, 0x83, 0xa9, 0x90, 0xc2, 0x22, 0xa6, 0xc4, 0x20, 0xe4, 0xc8, 0xc5, 0x8d, 0xe4, 0x56,
	0x21, 0x19, 0x84, 0x22, 0x4c, 0x2f, 0xe0, 0x30, 0x22, 0x92, 0x4b, 0x1c, 0x87, 0x47, 0x84, 0x34,
	0x50, 0x8c, 0xc3, 0xe3, 0x57, 0xec, 0x46, 0x3b, 0x49, 0x47, 0x49, 0xc2, 0x84, 0xf5, 0xd1, 0xa3,
	0x21, 0x89, 0x0d, 0x2c, 0x6e, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x9d, 0x72, 0x82, 0x47, 0xa1,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TrackingServiceClient is the client API for TrackingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TrackingServiceClient interface {
	Add(ctx context.Context, in *Tracking, opts ...grpc.CallOption) (*Tracking, error)
	GetTracking(ctx context.Context, in *GetTrackingRequest, opts ...grpc.CallOption) (*Tracking, error)
	GetCouriersLastLocation(ctx context.Context, in *GetCouriersLastLocationRequest, opts ...grpc.CallOption) (*Tracking, error)
}

type trackingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTrackingServiceClient(cc grpc.ClientConnInterface) TrackingServiceClient {
	return &trackingServiceClient{cc}
}

func (c *trackingServiceClient) Add(ctx context.Context, in *Tracking, opts ...grpc.CallOption) (*Tracking, error) {
	out := new(Tracking)
	err := c.cc.Invoke(ctx, "/genproto.TrackingService/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trackingServiceClient) GetTracking(ctx context.Context, in *GetTrackingRequest, opts ...grpc.CallOption) (*Tracking, error) {
	out := new(Tracking)
	err := c.cc.Invoke(ctx, "/genproto.TrackingService/GetTracking", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trackingServiceClient) GetCouriersLastLocation(ctx context.Context, in *GetCouriersLastLocationRequest, opts ...grpc.CallOption) (*Tracking, error) {
	out := new(Tracking)
	err := c.cc.Invoke(ctx, "/genproto.TrackingService/GetCouriersLastLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TrackingServiceServer is the server API for TrackingService service.
type TrackingServiceServer interface {
	Add(context.Context, *Tracking) (*Tracking, error)
	GetTracking(context.Context, *GetTrackingRequest) (*Tracking, error)
	GetCouriersLastLocation(context.Context, *GetCouriersLastLocationRequest) (*Tracking, error)
}

// UnimplementedTrackingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTrackingServiceServer struct {
}

func (*UnimplementedTrackingServiceServer) Add(ctx context.Context, req *Tracking) (*Tracking, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedTrackingServiceServer) GetTracking(ctx context.Context, req *GetTrackingRequest) (*Tracking, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTracking not implemented")
}
func (*UnimplementedTrackingServiceServer) GetCouriersLastLocation(ctx context.Context, req *GetCouriersLastLocationRequest) (*Tracking, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCouriersLastLocation not implemented")
}

func RegisterTrackingServiceServer(s *grpc.Server, srv TrackingServiceServer) {
	s.RegisterService(&_TrackingService_serviceDesc, srv)
}

func _TrackingService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Tracking)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrackingServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.TrackingService/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrackingServiceServer).Add(ctx, req.(*Tracking))
	}
	return interceptor(ctx, in, info, handler)
}

func _TrackingService_GetTracking_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTrackingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrackingServiceServer).GetTracking(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.TrackingService/GetTracking",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrackingServiceServer).GetTracking(ctx, req.(*GetTrackingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TrackingService_GetCouriersLastLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCouriersLastLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrackingServiceServer).GetCouriersLastLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.TrackingService/GetCouriersLastLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrackingServiceServer).GetCouriersLastLocation(ctx, req.(*GetCouriersLastLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TrackingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.TrackingService",
	HandlerType: (*TrackingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _TrackingService_Add_Handler,
		},
		{
			MethodName: "GetTracking",
			Handler:    _TrackingService_GetTracking_Handler,
		},
		{
			MethodName: "GetCouriersLastLocation",
			Handler:    _TrackingService_GetCouriersLastLocation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tracking_service.proto",
}
