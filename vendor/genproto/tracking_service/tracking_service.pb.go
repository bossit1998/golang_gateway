// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.6.1
// source: tracking_service.proto

package tracking_service

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetTrackingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTrackingRequest) Reset() {
	*x = GetTrackingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrackingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrackingRequest) ProtoMessage() {}

func (x *GetTrackingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrackingRequest.ProtoReflect.Descriptor instead.
func (*GetTrackingRequest) Descriptor() ([]byte, []int) {
	return file_tracking_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetTrackingRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCouriersLastLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourierId string `protobuf:"bytes,1,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
}

func (x *GetCouriersLastLocationRequest) Reset() {
	*x = GetCouriersLastLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracking_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCouriersLastLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCouriersLastLocationRequest) ProtoMessage() {}

func (x *GetCouriersLastLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tracking_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCouriersLastLocationRequest.ProtoReflect.Descriptor instead.
func (*GetCouriersLastLocationRequest) Descriptor() ([]byte, []int) {
	return file_tracking_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetCouriersLastLocationRequest) GetCourierId() string {
	if x != nil {
		return x.CourierId
	}
	return ""
}

var File_tracking_service_proto protoreflect.FileDescriptor

var file_tracking_service_proto_rawDesc = []byte{
	0x0a, 0x16, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3f, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x49, 0x64, 0x32, 0xe0, 0x01, 0x0a, 0x0f, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a,
	0x03, 0x41, 0x64, 0x64, 0x12, 0x12, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x1a, 0x12, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x12, 0x41,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x22,
	0x00, 0x12, 0x59, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73,
	0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x67,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69,
	0x65, 0x72, 0x73, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x42, 0x1b, 0x5a, 0x19,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_tracking_service_proto_rawDescOnce sync.Once
	file_tracking_service_proto_rawDescData = file_tracking_service_proto_rawDesc
)

func file_tracking_service_proto_rawDescGZIP() []byte {
	file_tracking_service_proto_rawDescOnce.Do(func() {
		file_tracking_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_tracking_service_proto_rawDescData)
	})
	return file_tracking_service_proto_rawDescData
}

var file_tracking_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_tracking_service_proto_goTypes = []interface{}{
	(*GetTrackingRequest)(nil),             // 0: genproto.GetTrackingRequest
	(*GetCouriersLastLocationRequest)(nil), // 1: genproto.GetCouriersLastLocationRequest
	(*Tracking)(nil),                       // 2: genproto.Tracking
}
var file_tracking_service_proto_depIdxs = []int32{
	2, // 0: genproto.TrackingService.Add:input_type -> genproto.Tracking
	0, // 1: genproto.TrackingService.GetTracking:input_type -> genproto.GetTrackingRequest
	1, // 2: genproto.TrackingService.GetCouriersLastLocation:input_type -> genproto.GetCouriersLastLocationRequest
	2, // 3: genproto.TrackingService.Add:output_type -> genproto.Tracking
	2, // 4: genproto.TrackingService.GetTracking:output_type -> genproto.Tracking
	2, // 5: genproto.TrackingService.GetCouriersLastLocation:output_type -> genproto.Tracking
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_tracking_service_proto_init() }
func file_tracking_service_proto_init() {
	if File_tracking_service_proto != nil {
		return
	}
	file_tracking_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tracking_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrackingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracking_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCouriersLastLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tracking_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tracking_service_proto_goTypes,
		DependencyIndexes: file_tracking_service_proto_depIdxs,
		MessageInfos:      file_tracking_service_proto_msgTypes,
	}.Build()
	File_tracking_service_proto = out.File
	file_tracking_service_proto_rawDesc = nil
	file_tracking_service_proto_goTypes = nil
	file_tracking_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TrackingServiceClient is the client API for TrackingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TrackingServiceClient interface {
	Add(ctx context.Context, in *Tracking, opts ...grpc.CallOption) (*Tracking, error)
	GetTracking(ctx context.Context, in *GetTrackingRequest, opts ...grpc.CallOption) (*Tracking, error)
	GetCouriersLastLocation(ctx context.Context, in *GetCouriersLastLocationRequest, opts ...grpc.CallOption) (*Tracking, error)
}

type trackingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTrackingServiceClient(cc grpc.ClientConnInterface) TrackingServiceClient {
	return &trackingServiceClient{cc}
}

func (c *trackingServiceClient) Add(ctx context.Context, in *Tracking, opts ...grpc.CallOption) (*Tracking, error) {
	out := new(Tracking)
	err := c.cc.Invoke(ctx, "/genproto.TrackingService/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trackingServiceClient) GetTracking(ctx context.Context, in *GetTrackingRequest, opts ...grpc.CallOption) (*Tracking, error) {
	out := new(Tracking)
	err := c.cc.Invoke(ctx, "/genproto.TrackingService/GetTracking", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trackingServiceClient) GetCouriersLastLocation(ctx context.Context, in *GetCouriersLastLocationRequest, opts ...grpc.CallOption) (*Tracking, error) {
	out := new(Tracking)
	err := c.cc.Invoke(ctx, "/genproto.TrackingService/GetCouriersLastLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TrackingServiceServer is the server API for TrackingService service.
type TrackingServiceServer interface {
	Add(context.Context, *Tracking) (*Tracking, error)
	GetTracking(context.Context, *GetTrackingRequest) (*Tracking, error)
	GetCouriersLastLocation(context.Context, *GetCouriersLastLocationRequest) (*Tracking, error)
}

// UnimplementedTrackingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTrackingServiceServer struct {
}

func (*UnimplementedTrackingServiceServer) Add(context.Context, *Tracking) (*Tracking, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedTrackingServiceServer) GetTracking(context.Context, *GetTrackingRequest) (*Tracking, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTracking not implemented")
}
func (*UnimplementedTrackingServiceServer) GetCouriersLastLocation(context.Context, *GetCouriersLastLocationRequest) (*Tracking, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCouriersLastLocation not implemented")
}

func RegisterTrackingServiceServer(s *grpc.Server, srv TrackingServiceServer) {
	s.RegisterService(&_TrackingService_serviceDesc, srv)
}

func _TrackingService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Tracking)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrackingServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.TrackingService/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrackingServiceServer).Add(ctx, req.(*Tracking))
	}
	return interceptor(ctx, in, info, handler)
}

func _TrackingService_GetTracking_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTrackingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrackingServiceServer).GetTracking(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.TrackingService/GetTracking",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrackingServiceServer).GetTracking(ctx, req.(*GetTrackingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TrackingService_GetCouriersLastLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCouriersLastLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrackingServiceServer).GetCouriersLastLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.TrackingService/GetCouriersLastLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrackingServiceServer).GetCouriersLastLocation(ctx, req.(*GetCouriersLastLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TrackingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.TrackingService",
	HandlerType: (*TrackingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _TrackingService_Add_Handler,
		},
		{
			MethodName: "GetTracking",
			Handler:    _TrackingService_GetTracking_Handler,
		},
		{
			MethodName: "GetCouriersLastLocation",
			Handler:    _TrackingService_GetCouriersLastLocation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tracking_service.proto",
}
