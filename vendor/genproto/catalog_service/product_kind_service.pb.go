// Code generated by protoc-gen-go. DO NOT EDIT.
// source: product_kind_service.proto

package catalog_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetAllProductKindResponse struct {
	ProductKinds         []*ProductKind `protobuf:"bytes,1,rep,name=product_kinds,json=productKinds,proto3" json:"product_kinds,omitempty"`
	Count                int64          `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetAllProductKindResponse) Reset()         { *m = GetAllProductKindResponse{} }
func (m *GetAllProductKindResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllProductKindResponse) ProtoMessage()    {}
func (*GetAllProductKindResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e5b7137704f9c619, []int{0}
}

func (m *GetAllProductKindResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllProductKindResponse.Unmarshal(m, b)
}
func (m *GetAllProductKindResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllProductKindResponse.Marshal(b, m, deterministic)
}
func (m *GetAllProductKindResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllProductKindResponse.Merge(m, src)
}
func (m *GetAllProductKindResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllProductKindResponse.Size(m)
}
func (m *GetAllProductKindResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllProductKindResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllProductKindResponse proto.InternalMessageInfo

func (m *GetAllProductKindResponse) GetProductKinds() []*ProductKind {
	if m != nil {
		return m.ProductKinds
	}
	return nil
}

func (m *GetAllProductKindResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*GetAllProductKindResponse)(nil), "genproto.GetAllProductKindResponse")
}

func init() { proto.RegisterFile("product_kind_service.proto", fileDescriptor_e5b7137704f9c619) }

var fileDescriptor_e5b7137704f9c619 = []byte{
	// 279 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x4d, 0x5b, 0x0c, 0xb2, 0xda, 0xcb, 0x50, 0x35, 0xae, 0x97, 0x12, 0x2f, 0x3d, 0x6d, 0xa0,
	0x7a, 0x51, 0x4f, 0x55, 0x24, 0x82, 0x17, 0x89, 0x78, 0xf1, 0x52, 0xd2, 0x64, 0x0c, 0xc1, 0x6d,
	0x76, 0xcd, 0x4e, 0x04, 0xff, 0xc1, 0x8f, 0x16, 0xb3, 0x2e, 0x89, 0x12, 0xbc, 0xed, 0x9b, 0x37,
	0xef, 0xcd, 0xcc, 0x3e, 0xc6, 0x75, 0xad, 0xf2, 0x26, 0xa3, 0xf5, 0x6b, 0x59, 0xe5, 0x6b, 0x83,
	0xf5, 0x7b, 0x99, 0xa1, 0xd0, 0xb5, 0x22, 0x05, 0xbb, 0x05, 0x56, 0xed, 0x8b, 0x4f, 0xb3, 0x94,
	0x52, 0xa9, 0x0a, 0x4b, 0xf0, 0x93, 0x42, 0xa9, 0x42, 0x62, 0xd4, 0xa2, 0x4d, 0xf3, 0x12, 0xe1,
	0x56, 0xd3, 0x87, 0x25, 0xc3, 0x2d, 0x3b, 0x8e, 0x91, 0x56, 0x52, 0x3e, 0x58, 0xe7, 0xfb, 0xb2,
	0xca, 0x13, 0x34, 0x5a, 0x55, 0x06, 0xe1, 0x92, 0x4d, 0xfb, 0x03, 0x4d, 0x30, 0x9a, 0x4f, 0x16,
	0x7b, 0xcb, 0x03, 0xe1, 0x46, 0x89, 0xbe, 0x6a, 0x5f, 0x77, 0xc0, 0xc0, 0x8c, 0xed, 0x64, 0xaa,
	0xa9, 0x28, 0x18, 0xcf, 0x47, 0x8b, 0x49, 0x62, 0xc1, 0xf2, 0x73, 0xcc, 0xa0, 0xa7, 0x79, 0xb4,
	0x17, 0xc0, 0x15, 0xf3, 0x6f, 0x6a, 0x4c, 0x09, 0x61, 0xd8, 0x9b, 0x07, 0x5d, 0xd9, 0x36, 0xba,
	0x1d, 0x43, 0x0f, 0xce, 0xd9, 0x24, 0x46, 0x82, 0x59, 0xd7, 0x12, 0x23, 0x25, 0xf8, 0xd6, 0xa0,
	0x21, 0x3e, 0xec, 0x17, 0x7a, 0x70, 0xc7, 0x7c, 0x7b, 0x38, 0x1c, 0xfd, 0x12, 0xae, 0xa4, 0x74,
	0xda, 0xd3, 0xbf, 0xc4, 0xc0, 0x1f, 0x85, 0x1e, 0x5c, 0x30, 0xff, 0x49, 0xe7, 0xff, 0x2c, 0x7f,
	0x28, 0x6c, 0x02, 0xc2, 0x25, 0x20, 0x6e, 0xbf, 0x13, 0x08, 0xbd, 0x6b, 0xfe, 0x1c, 0x38, 0x45,
	0xf4, 0x13, 0x9a, 0x4b, 0x75, 0xe3, 0xb7, 0xe5, 0xb3, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc7,
	0xcb, 0xce, 0x1f, 0xf4, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProductKindServiceClient is the client API for ProductKindService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProductKindServiceClient interface {
	Create(ctx context.Context, in *ProductKind, opts ...grpc.CallOption) (*CreateResponse, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*ProductKind, error)
	GetAll(ctx context.Context, in *GetAllRequest, opts ...grpc.CallOption) (*GetAllProductKindResponse, error)
	Update(ctx context.Context, in *ProductKind, opts ...grpc.CallOption) (*empty.Empty, error)
}

type productKindServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewProductKindServiceClient(cc grpc.ClientConnInterface) ProductKindServiceClient {
	return &productKindServiceClient{cc}
}

func (c *productKindServiceClient) Create(ctx context.Context, in *ProductKind, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/genproto.ProductKindService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productKindServiceClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*ProductKind, error) {
	out := new(ProductKind)
	err := c.cc.Invoke(ctx, "/genproto.ProductKindService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productKindServiceClient) GetAll(ctx context.Context, in *GetAllRequest, opts ...grpc.CallOption) (*GetAllProductKindResponse, error) {
	out := new(GetAllProductKindResponse)
	err := c.cc.Invoke(ctx, "/genproto.ProductKindService/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productKindServiceClient) Update(ctx context.Context, in *ProductKind, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/genproto.ProductKindService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProductKindServiceServer is the server API for ProductKindService service.
type ProductKindServiceServer interface {
	Create(context.Context, *ProductKind) (*CreateResponse, error)
	Get(context.Context, *GetRequest) (*ProductKind, error)
	GetAll(context.Context, *GetAllRequest) (*GetAllProductKindResponse, error)
	Update(context.Context, *ProductKind) (*empty.Empty, error)
}

// UnimplementedProductKindServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProductKindServiceServer struct {
}

func (*UnimplementedProductKindServiceServer) Create(ctx context.Context, req *ProductKind) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedProductKindServiceServer) Get(ctx context.Context, req *GetRequest) (*ProductKind, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedProductKindServiceServer) GetAll(ctx context.Context, req *GetAllRequest) (*GetAllProductKindResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedProductKindServiceServer) Update(ctx context.Context, req *ProductKind) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}

func RegisterProductKindServiceServer(s *grpc.Server, srv ProductKindServiceServer) {
	s.RegisterService(&_ProductKindService_serviceDesc, srv)
}

func _ProductKindService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductKind)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductKindServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ProductKindService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductKindServiceServer).Create(ctx, req.(*ProductKind))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductKindService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductKindServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ProductKindService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductKindServiceServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductKindService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductKindServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ProductKindService/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductKindServiceServer).GetAll(ctx, req.(*GetAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductKindService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductKind)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductKindServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ProductKindService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductKindServiceServer).Update(ctx, req.(*ProductKind))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProductKindService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.ProductKindService",
	HandlerType: (*ProductKindServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ProductKindService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ProductKindService_Get_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _ProductKindService_GetAll_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ProductKindService_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "product_kind_service.proto",
}
